<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.returnp.admin.dao.mapper.ApiServiceMapper">
  <resultMap id="BaseResultMap" type="com.returnp.admin.model.ApiService">
    <id column="apiServiceNo" jdbcType="INTEGER" property="apiServiceNo" />
    <result column="apiService" jdbcType="VARCHAR" property="apiService" />
    <result column="apiServiceName" jdbcType="VARCHAR" property="apiServiceName" />
    <result column="tId" jdbcType="VARCHAR" property="tId" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="project" jdbcType="VARCHAR" property="project" />
    <result column="domain" jdbcType="VARCHAR" property="domain" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="apiKey" jdbcType="VARCHAR" property="apiKey" />
    <result column="apiServiceStatus" jdbcType="VARCHAR" property="apiServiceStatus" />
    <result column="expireTime" jdbcType="TIMESTAMP" property="expireTime" />
    <result column="regAdminNo" jdbcType="INTEGER" property="regAdminNo" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    apiServiceNo, apiService, apiServiceName, tId, company, project, domain, ip, apiKey, 
    apiServiceStatus, expireTime, regAdminNo, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from api_service
    where apiServiceNo = #{apiServiceNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from api_service
    where apiServiceNo = #{apiServiceNo,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.returnp.admin.model.ApiService">
    insert into api_service (apiServiceNo, apiService, apiServiceName, 
      tId, company, project, 
      domain, ip, apiKey, 
      apiServiceStatus, expireTime, regAdminNo, 
      createTime, updateTime)
    values (#{apiServiceNo,jdbcType=INTEGER}, #{apiService,jdbcType=VARCHAR}, #{apiServiceName,jdbcType=VARCHAR}, 
      #{tId,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{project,jdbcType=VARCHAR}, 
      #{domain,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{apiKey,jdbcType=VARCHAR}, 
      #{apiServiceStatus,jdbcType=VARCHAR}, date_add(now(), interval +1 year), #{regAdminNo,jdbcType=INTEGER}, 
      NOW(), NOW())
      
         <selectKey keyProperty="apiServiceNo" resultType="java.lang.Integer" order ="AFTER">
		    SELECT LAST_INSERT_ID()
	   </selectKey>	
  </insert>
  <insert id="insertSelective" parameterType="com.returnp.admin.model.ApiService">
    insert into api_service
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="apiServiceNo != null">
        apiServiceNo,
      </if>
      <if test="apiService != null">
        apiService,
      </if>
      <if test="apiServiceName != null">
        apiServiceName,
      </if>
      <if test="tId != null">
        tId,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="project != null">
        project,
      </if>
      <if test="domain != null">
        domain,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="apiKey != null">
        apiKey,
      </if>
      <if test="apiServiceStatus != null">
        apiServiceStatus,
      </if>
      <if test="expireTime != null">
        expireTime,
      </if>
      <if test="regAdminNo != null">
        regAdminNo,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="apiServiceNo != null">
        #{apiServiceNo,jdbcType=INTEGER},
      </if>
      <if test="apiService != null">
        #{apiService,jdbcType=VARCHAR},
      </if>
      <if test="apiServiceName != null">
        #{apiServiceName,jdbcType=VARCHAR},
      </if>
      <if test="tId != null">
        #{tId,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="project != null">
        #{project,jdbcType=VARCHAR},
      </if>
      <if test="domain != null">
        #{domain,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null">
        #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="apiServiceStatus != null">
        #{apiServiceStatus,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regAdminNo != null">
        #{regAdminNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.returnp.admin.model.ApiService">
    update api_service
    <set>
      <if test="apiService != null">
        apiService = #{apiService,jdbcType=VARCHAR},
      </if>
      <if test="apiServiceName != null">
        apiServiceName = #{apiServiceName,jdbcType=VARCHAR},
      </if>
      <if test="tId != null">
        tId = #{tId,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="project != null">
        project = #{project,jdbcType=VARCHAR},
      </if>
      <if test="domain != null">
        domain = #{domain,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null">
        apiKey = #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="apiServiceStatus != null">
        apiServiceStatus = #{apiServiceStatus,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null">
        expireTime = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regAdminNo != null">
        regAdminNo = #{regAdminNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where apiServiceNo = #{apiServiceNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.returnp.admin.model.ApiService">
    update api_service
    set apiService = #{apiService,jdbcType=VARCHAR},
      apiServiceName = #{apiServiceName,jdbcType=VARCHAR},
      tId = #{tId,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      project = #{project,jdbcType=VARCHAR},
      domain = #{domain,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      apiKey = #{apiKey,jdbcType=VARCHAR},
      apiServiceStatus = #{apiServiceStatus,jdbcType=VARCHAR},
      expireTime = #{expireTime,jdbcType=TIMESTAMP},
      regAdminNo = #{regAdminNo,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = NOW()
    where apiServiceNo = #{apiServiceNo,jdbcType=INTEGER}
  </update>
  
    <resultMap id="ApiServieResultMap" type="com.returnp.admin.model.ApiService">
    <id column="apiServiceNo" jdbcType="INTEGER" property="apiServiceNo" />
    <result column="apiService" jdbcType="VARCHAR" property="apiService" />
    <result column="tId" jdbcType="VARCHAR" property="tId" />
    <result column="apiServiceName" jdbcType="VARCHAR" property="apiServiceName" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="project" jdbcType="VARCHAR" property="project" />
    <result column="domain" jdbcType="VARCHAR" property="domain" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="apiKey" jdbcType="VARCHAR" property="apiKey" />
    <result column="apiServiceStatus" jdbcType="VARCHAR" property="apiServiceStatus" />
    <result column="expireTime" jdbcType="TIMESTAMP" property="expireTime" />
    <result column="regAdminNo" jdbcType="INTEGER" property="regAdminNo" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Api_Service_Column_List">
    apiServiceNo, apiService,apiServiceName, tId, company, project, domain, ip, apiKey, apiServiceStatus, 
    expireTime, regAdminNo, createTime, updateTime
  </sql>
  <select id="findApiServices" parameterType="java.lang.Integer" resultMap="ApiServieResultMap">
    select 
    <include refid="Api_Service_Column_List" />
    from api_service
    where 1=1
    <include refid = "ApiService_WhereStatement"/>
  </select>
  <sql id ="ApiService_WhereStatement">
    <if test="apiService != null">and apiService = #{apiService,jdbcType=VARCHAR}</if>
    <if test="tId != null">and apiService = #{tId,jdbcType=VARCHAR}</if>
     <if test="apiServiceName != null">and apiServiceName = #{apiServiceName,jdbcType=VARCHAR}</if>
     <if test="company != null">and company = #{company,jdbcType=VARCHAR}</if>
     <if test="project != null">and project = #{project,jdbcType=VARCHAR}</if>
     <if test="domain != null">and domain = #{domain,jdbcType=VARCHAR}</if>
     <if test="ip != null">and ip = #{ip,jdbcType=VARCHAR}</if>
     <if test="apiKey != null">and apiKey = #{apiKey,jdbcType=VARCHAR}</if>
     <if test="apiServiceStatus != null">and apiServiceStatus = #{apiServiceStatus,jdbcType=VARCHAR}</if>
     <if test="expireTime != null">and expireTime = #{expireTime,jdbcType=TIMESTAMP}</if>
     <if test="regAdminNo != null">and regAdminNo = #{regAdminNo,jdbcType=INTEGER}</if>
     <if test="createTime != null">and createTime = #{createTime,jdbcType=TIMESTAMP}</if>
     <if test="updateTime != null">and updateTime = #{updateTime,jdbcType=TIMESTAMP}</if>
   </sql>
</mapper>