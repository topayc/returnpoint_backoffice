<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.returnp.admin.dao.mapper.SearchMapper">

	<select id="selectTotalRecords" resultType="int">
		select found_rows();
	</select>
	<sql id="commonStatement">
		<choose>
			<when test="order !=null">
				order by ${order}
			</when>
			<otherwise>
				order by createTime desc
			</otherwise>
		</choose>
		<if test="pagination">
			limit ${pageSize} offset ${offset}
		</if>
	</sql>
	<!-- =============================================================================================================== -->
	<!-- Admin Mapper -->

	<resultMap id="AdminResultMap"
		type="com.returnp.admin.model.Admin">
		<id column="adminNo" jdbcType="INTEGER" property="adminNo" />
		<result column="adminName" jdbcType="VARCHAR"
			property="adminName" />
		<result column="adminEmail" jdbcType="VARCHAR"
			property="adminEmail" />
		<result column="adminPassword" jdbcType="VARCHAR"
			property="adminPassword" />
		<result column="authType" jdbcType="VARCHAR"
			property="authType" />
		<result column="level" jdbcType="VARCHAR" property="level" />
		<result column="levelCode" jdbcType="VARCHAR"
			property="levelCode" />
		<result column="initAuthMenu" jdbcType="VARCHAR"
			property="initAuthMenu" />
		<result column="exceptAuth" jdbcType="VARCHAR"
			property="exceptAuth" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>
	<sql id="Admin_Column_List">
		adminNo, adminName, adminEmail, adminPassword, authType, level, levelCode,
		initAuthMenu,exceptAuth,
		regAdminNo, createTime, updateTime
	</sql>

	<sql id="adminWhereStatement">
		<if test="adminNo != null  and  adminNo  != 0"> AND adminNo = #{adminNo} </if>
		<if test="adminName!= null"> AND adminName = #{adminName} </if>
		<if test="adminEmail != null"> AND adminEmail = #{adminEmail} </if>
		<if test="adminPassword != null"> AND adminPassword = #{adminPassword}</if>
		<if test="regAdminNo != null and regAdminNo != 0"> AND regAdminNo = #{regAdminNo} </if>
	</sql>

	<select id="findAdmins"
		parameterType="com.returnp.admin.model.Admin"
		resultMap="AdminResultMap">
		select
		<include refid="Admin_Column_List" />
		from admin
		where
		1 = 1
		<include refid="adminWhereStatement" />
	</select>


	<!-- =============================================================================================================== -->
	<!-- Policy -->
	<resultMap id="PolicyResultMap"
		type="com.returnp.admin.model.Policy">
		<id column="policyNo" jdbcType="INTEGER" property="policyNo" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="branchComm" jdbcType="REAL"
			property="branchComm" />
		<result column="soleDistComm" jdbcType="REAL"
			property="soleDistComm" />
		<result column="agancyComm" jdbcType="REAL"
			property="agancyComm" />
		<result column="affiliateComm" jdbcType="REAL"
			property="affiliateComm" />
		<result column="branchRecComm" jdbcType="REAL"
			property="branchRecComm" />
		<result column="agancyRecComm" jdbcType="REAL"
			property="agancyRecComm" />
		<result column="affiliateRecComm" jdbcType="REAL"
			property="affiliateRecComm" />
		<result column="customerRecCom" jdbcType="REAL"
			property="customerRecCom" />
		<result column="customerComm" jdbcType="REAL"
			property="customerComm" />
		<result column="pointTransRate" jdbcType="REAL"
			property="pointTransRate" />
		<result column="pointTransLimit" jdbcType="REAL"
			property="pointTransLimit" />
		<result column="redPointAccRate" jdbcType="REAL"
			property="redPointAccRate" />
		<result column="membershipTransLimit" jdbcType="INTEGER"
			property="membershipTransLimit" />
		<result column="gPointMovingMinLimit" jdbcType="INTEGER"
			property="gPointMovingMinLimit" />
		<result column="gPointMovingMaxLimit" jdbcType="INTEGER"
			property="gPointMovingMaxLimit" />
		<result column="rPointMovingMinLimit" jdbcType="INTEGER"
			property="rPointMovingMinLimit" />
		<result column="rPointMovingMaxLimit" jdbcType="INTEGER"
			property="rPointMovingMaxLimit" />
		<result column="rPayWithdrawalMaxLimitPerWeek"
			jdbcType="INTEGER" property="rPayWithdrawalMaxLimitPerWeek" />
		<result column="maxGpointAccLImit" jdbcType="INTEGER"
			property="maxGpointAccLImit" />
		<result column="customerRecManagerComm" jdbcType="REAL"
			property="customerRecManagerComm" />
		<result column="affiliateRecManagerComm" jdbcType="REAL"
			property="affiliateRecManagerComm" />
		<result column="agancyRecManagerComm" jdbcType="REAL"
			property="agancyRecManagerComm" />
		<result column="branchRecManagerComm" jdbcType="REAL"
			property="branchRecManagerComm" />
		<result column="rPayWithdrawalMinLimit" jdbcType="INTEGER"
			property="rPayWithdrawalMinLimit" />
		<result column="rPayWithdrawalMaxLimit" jdbcType="INTEGER"
			property="rPayWithdrawalMaxLimit" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>
	<sql id="Policy_Column_List">
		policyNo, regAdminNo, branchComm, soleDistComm, agancyComm, affiliateComm,
		branchRecComm,
		agancyRecComm, affiliateRecComm, customerRecCom, customerComm, pointTransRate,
		pointTransLimit,
		redPointAccRate, membershipTransLimit, gPointMovingMinLimit, gPointMovingMaxLimit,
		rPointMovingMinLimit, rPointMovingMaxLimit,
		rPayWithdrawalMaxLimitPerWeek, maxGpointAccLImit,
		customerRecManagerComm, affiliateRecManagerComm, agancyRecManagerComm,
		branchRecManagerComm,
		rPayWithdrawalMinLimit, rPayWithdrawalMaxLimit, createTime, updateTime
	</sql>

	<sql id="policyWhereStatement">
		<if test="policyNo != null  and  policyNo  != 0"> AND adminNo = #{adminNo} </if>
		<if test="regAdminNo != null and regAdminNo != 0"> AND regAdminNo = #{regAdminNo} </if>
	</sql>

	<select id="findPolicies"
		parameterType="com.returnp.admin.model.Policy"
		resultMap="PolicyResultMap">
		select
		<include refid="Policy_Column_List" />
		from policy
		where
		1 = 1
		<include refid="policyWhereStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- Member -->
	<resultMap id="MemberResultMap"
		type="com.returnp.admin.model.Member">
		<id column="memberNo" jdbcType="INTEGER" property="memberNo" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberPassword" jdbcType="VARCHAR"
			property="memberPassword" />
		<result column="memberPassword2" jdbcType="VARCHAR"
			property="memberPassword2" />
		<result column="memberType" jdbcType="VARCHAR"
			property="memberType" />
		<result column="memberStatus" jdbcType="VARCHAR"
			property="memberStatus" />
		<result column="memberAuthType" jdbcType="VARCHAR"
			property="memberAuthType" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
		<result column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="joinRoute" jdbcType="VARCHAR"
			property="joinRoute" />
		<result column="country" jdbcType="VARCHAR" property="country" />
		<result column="statusReason" jdbcType="VARCHAR"
			property="statusReason" />
		<result column="isSoleDist" jdbcType="CHAR"
			property="isSoleDist" />
		<result column="isRecommender" jdbcType="CHAR"
			property="isRecommender" />
		<result column="isSaleManager" jdbcType="CHAR"
			property="isSaleManager" />
		<result column="isBranch" jdbcType="CHAR" property="isBranch" />
		<result column="isAffiliate" jdbcType="CHAR"
			property="isAffiliate" />
		<result column="isAgency" jdbcType="CHAR" property="isAgency" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="MemberCommandResultMap"
		type="com.returnp.admin.dto.command.MemberCommand">
		<id column="memberNo" jdbcType="INTEGER" property="memberNo" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberPassword" jdbcType="VARCHAR"
			property="memberPassword" />
		<result column="memberPassword2" jdbcType="VARCHAR"
			property="memberPassword2" />
		<result column="memberType" jdbcType="VARCHAR"
			property="memberType" />
		<result column="memberStatus" jdbcType="VARCHAR"
			property="memberStatus" />
		<result column="memberAuthType" jdbcType="VARCHAR"
			property="memberAuthType" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
		<result column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="recommenderEmail" jdbcType="VARCHAR"
			property="recommenderEmail" />
		<result column="recommenderName" jdbcType="VARCHAR"
			property="recommenderName" />
		<result column="joinRoute" jdbcType="VARCHAR"
			property="joinRoute" />
		<result column="country" jdbcType="VARCHAR" property="country" />
		<result column="statusReason" jdbcType="VARCHAR"
			property="statusReason" />
		<result column="isSoleDist" jdbcType="CHAR"
			property="isSoleDist" />
		<result column="isRecommender" jdbcType="CHAR"
			property="isRecommender" />
		<result column="isSaleManager" jdbcType="CHAR"
			property="isSaleManager" />
		<result column="isBranch" jdbcType="CHAR" property="isBranch" />
		<result column="isAffiliate" jdbcType="CHAR"
			property="isAffiliate" />
		<result column="isAgency" jdbcType="CHAR" property="isAgency" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="greenPointAmount" jdbcType="REAL"
			property="greenPointAmount" />
		<result column="redPointAmount" jdbcType="REAL"
			property="redPointAmount" />
	</resultMap>


	<sql id="Member_Column_List">
		memberNo, memberName, memberEmail, memberPassword, memberPassword2,memberType,
		memberStatus,
		memberAuthType, memberPhone, recommenderNo, joinRoute, country, statusReason,
		isSoleDist,
		isRecommender, isSaleManager, isBranch, isAffiliate, isAgency, regType, regAdminNo,
		greenPointAccStatus, redPointAccStatus, greenPointUseStatus,
		redPointUseStatus, createTime,
		updateTime
	</sql>

	<sql id="MemberCommand_Column_List">
		M.memberNo,
		M.memberName,
		M.memberEmail,
		M.memberPassword,
		M.memberPassword2,
		M.memberType,
		M.memberStatus,
		M.memberAuthType,
		M.memberPhone,
		M.recommenderNo,
		M.joinRoute,
		M.statusReason,
		M.isSoleDist,
		M.isRecommender,
		M.isSaleManager,
		M.isBranch,
		M.isAffiliate,
		M.isAgency,
		M.regType,
		M.regAdminNo,
		M.greenPointAccStatus,
		M.redPointAccStatus,
		M.greenPointUseStatus,
		M.redPointUseStatus,
		M.country,
		M.createTime,
		M.updateTime,
		M2.memberName as recommenderName,
		M2.memberEmail as recommenderEmail,
		GP.pointAmount as greenPointAmount,
		RP.pointAmount as redPointAmount
	</sql>

	<sql id="memberSearchWhereStatement">
		<if test="memberNo != null">AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="memberPassword != null"> AND memberPassword = #{memberPassword,jdbcType=VARCHAR}
		</if>
		<if test="memberPassword2 != null">AND memberPassword2 = #{memberPassword2,jdbcType=VARCHAR}
		</if>
		<if test="memberPhone != null">AND memberPhone = #{memberPhone,jdbcType=VARCHAR}</if>
		<if test="memberType != null">AND memberType = #{memberType,jdbcType=VARCHAR}</if>
		<if
			test="memberStatus != null and memberStatus !=  '0'  and memberStatus !=  0">AND memberStatus = #{memberStatus,jdbcType=VARCHAR}</if>
		<if test="memberAuthType != null">AND memberAuthType = #{memberAuthType,jdbcType=VARCHAR}
		</if>
		<if test="recommenderNo != null">AND recommenderNo = #{recommenderNo,jdbcType=INTEGER}</if>
		<if test="joinRoute != null">AND joinRoute = #{joinRoute,jdbcType=VARCHAR}</if>
		<if test="isSoleDist != null">AND isSoleDist = #{isSoleDist,jdbcType=CHAR}</if>
		<if test="isRecommender != null">AND isRecommender = #{isRecommender,jdbcType=CHAR}</if>
		<if test="isSaleManager != null"> isSaleManager = #{isSaleManager,jdbcType=CHAR}</if>
		<if test="isBranch != null">AND isBranch = #{isBranch,jdbcType=CHAR}</if>
		<if test="isAffiliate != null">AND isAffiliate = #{isAffiliate,jdbcType=CHAR}</if>
		<if test="isAgency != null">AND isAgency = #{isAgency,jdbcType=CHAR}</if>
		<if test="regType != null">AND regType = #{regType,jdbcType=CHAR}</if>
		<if test="regAdminNo != null">AND regAdminNo = #{regAdminNo,jdbcType=INTEGER}</if>
		<if test="greenPointAccStatus != null">AND greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=CHAR}</if>
		<if test="redPointAccStatus != null">AND redPointAccStatus = #{redPointAccStatus,jdbcType=CHAR}
		</if>
		<if test="greenPointUseStatus != null">AND greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=CHAR}</if>
		<if test="redPointUseStatus != null">AND redPointUseStatus = #{redPointUseStatus,jdbcType=CHAR}
		</if>
		<if
			test="memberName != null or memberEmail != null or statusReason != null">
			AND ( 1 = 2
		</if>
		<if test="memberName != null">OR memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null">OR memberEmail LIKE CONCAT('%',#{memberEmail},'%' ) </if>
		<if test="statusReason != null">OR statusReason = #{statusReason,jdbcType=VARCHAR}</if>
		<if
			test="memberName != null or memberEmail != null or statusReason != null">
			)
		</if>
	</sql>

	<sql id="memberCommandSearchWhereStatement">
		<if test="memberNo != null">AND M.memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="memberPassword != null"> AND M.memberPassword = #{memberPassword,jdbcType=VARCHAR}
		</if>
		<if test="memberPassword2 != null">AND M.memberPassword2 =
			#{memberPassword2,jdbcType=VARCHAR}</if>
		<if test="memberType != null">AND M.memberType = #{memberType,jdbcType=VARCHAR}</if>
		<if
			test="memberStatus != null and memberStatus !=  '0'  and memberStatus !=  0">AND M.memberStatus = #{memberStatus,jdbcType=VARCHAR}</if>
		<if test="memberAuthType != null">AND M.memberAuthType = #{memberAuthType,jdbcType=VARCHAR}
		</if>
		<if test="recommenderNo != null">AND M.recommenderNo = #{recommenderNo,jdbcType=INTEGER}
		</if>
		<if test="joinRoute != null">AND M.joinRoute = #{joinRoute,jdbcType=VARCHAR}</if>
		<if test="isSoleDist != null">AND M.isSoleDist = #{isSoleDist,jdbcType=CHAR}</if>
		<if test="isRecommender != null">AND M.isRecommender = #{isRecommender,jdbcType=CHAR}</if>
		<if test="isSaleManager != null"> M.isSaleManager = #{isSaleManager,jdbcType=CHAR}</if>
		<if test="isBranch != null">AND M.isBranch = #{isBranch,jdbcType=CHAR}</if>
		<if test="isAffiliate != null">AND M.isAffiliate = #{isAffiliate,jdbcType=CHAR}</if>
		<if test="isAgency != null">AND M.isAgency = #{isAgency,jdbcType=CHAR}</if>
		<if test="regType != null">AND M.regType = #{regType,jdbcType=CHAR}</if>
		<if test="regAdminNo != null">AND M.regAdminNo = #{regAdminNo,jdbcType=INTEGER}</if>
		<if test="greenPointAccStatus != null">AND M.greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=CHAR}</if>
		<if test="redPointAccStatus != null">AND M.redPointAccStatus =
			#{redPointAccStatus,jdbcType=CHAR}</if>
		<if test="greenPointUseStatus != null">AND M.greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=CHAR}</if>
		<if test="redPointUseStatus != null">AND M.redPointUseStatus =
			#{redPointUseStatus,jdbcType=CHAR}</if>

		<if
			test="memberName != null or memberEmail != null or memberPhone != null">
			AND ( 1 = 2
		</if>
		<if test="memberPhone != null">OR M.memberPhone LIKE
			CONCAT('%',#{memberPhone,jdbcType=VARCHAR},'%') </if>
		<if test="memberName != null">OR M.memberName LIKE
			CONCAT('%',#{memberName,jdbcType=VARCHAR},'%') </if>
		<if test="memberEmail != null">OR M.memberEmail LIKE
			CONCAT('%',#{memberEmail,jdbcType=VARCHAR},'%' ) </if>
		<!-- <if test="memberPhone != null">OR M.memberPhone LIKE CONCAT('%',#{memberPhone,jdbcType=VARCHAR},'%') 
			</if> -->

		<if
			test="memberName != null or memberEmail != null or memberPhone != null">
			)
		</if>
	</sql>

	<select id="findMembers"
		parameterType="com.returnp.admin.model.Member"
		resultMap="MemberResultMap">
		select
		sql_calc_found_rows
		<include refid="Member_Column_List" />
		from member
		where
		1 = 1
		<include refid="memberSearchWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="findMemberCommands"
		parameterType="com.returnp.admin.dto.command.MemberCommand"
		resultMap="MemberCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="MemberCommand_Column_List" />
		from member as M
		inner join red_point as RP on (M.memberNo = RP.memberNo)
		inner join green_point as GP on (M.memberNo = GP.memberNo AND GP.nodeType
		='1' )
		left outer join member as M2 on (M.recommenderNo = M2.memberNo)
		where
		1 = 1
		<include refid="memberCommandSearchWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="findMyMemberCommands"
		parameterType="com.returnp.admin.dto.command.MemberCommand"
		resultMap="MemberCommandResultMap">
		select
		<include refid="MemberCommand_Column_List" />
		from member as M
		inner join red_point as RP on (M.memberNo = RP.memberNo)
		inner join green_point as GP on (M.memberNo = GP.memberNo AND GP.nodeType
		='1' )
		left outer join member as M2 on (M.recommenderNo = M2.memberNo)
		where
		1 = 1
		AND M.recommenderNo = #{memberNo}
	</select>

	<select id="selectMemberCount" resultType="int">
		select
		count(*)
		from member as M
		inner join red_point as RP on (M.memberNo = RP.memberNo)
		inner join green_point as GP on (M.memberNo = GP.memberNo AND GP.nodeType
		='1' )
		left outer join member as M2 on (M.recommenderNo = M2.memberNo)
		where
		1 = 1
		<include refid="memberCommandSearchWhereStatement" />
	</select>
	<!-- =============================================================================================================== -->
	<!-- SoleDist -->
	<resultMap id="soleDist_ResultMap"
		type="com.returnp.admin.model.SoleDist">
		<id column="soleDistNo" jdbcType="INTEGER" property="soleDistNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="soleDistCode" jdbcType="VARCHAR"
			property="soleDistCode" />
		<result column="soleDistEmail" jdbcType="VARCHAR"
			property="soleDistEmail" />
		<result column="soleDistName" jdbcType="VARCHAR"
			property="soleDistName" />
		<result column="soleDistAddress" jdbcType="VARCHAR"
			property="soleDistAddress" />
		<result column="soleDistTel" jdbcType="VARCHAR"
			property="soleDistTel" />
		<result column="soleDistPhone" jdbcType="VARCHAR"
			property="soleDistPhone" />
		<result column="soleDistStatus" jdbcType="VARCHAR"
			property="soleDistStatus" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updatetime" jdbcType="TIMESTAMP"
			property="updatetime" />
	</resultMap>

	<resultMap id="soleDistCommand_ResultMap"
		type="com.returnp.admin.dto.command.SoleDistCommand">
		<id column="soleDistNo" jdbcType="INTEGER" property="soleDistNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="soleDistCode" jdbcType="VARCHAR"
			property="soleDistCode" />
		<result column="soleDistEmail" jdbcType="VARCHAR"
			property="soleDistEmail" />
		<result column="soleDistName" jdbcType="VARCHAR"
			property="soleDistName" />
		<result column="soleDistAddress" jdbcType="VARCHAR"
			property="soleDistAddress" />
		<result column="soleDistTel" jdbcType="VARCHAR"
			property="soleDistTel" />
		<result column="soleDistPhone" jdbcType="VARCHAR"
			property="soleDistPhone" />
		<result column="soleDistStatus" jdbcType="VARCHAR"
			property="soleDistStatus" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updatetime" jdbcType="TIMESTAMP"
			property="updatetime" />
		<result column="greenPointAmount" jdbcType="REAL"
			property="greenPointAmount" />
		<result column="redPointAmount" jdbcType="REAL"
			property="redPointAmount" />
	</resultMap>

	<sql id="soleDist_Column_List">
		soleDistNo, memberNo, soleDistCode, soleDistEmail, soleDistName, soleDistAddress,
		soleDistTel, soleDistPhone, soleDistStatus, regType, regAdminNo,
		greenPointAccStatus,
		redPointAccStatus, greenPointUseStatus, redPointUseStatus, createTime,
		updatetime
	</sql>

	<sql id="soleDistCommand_Column_List">
		M.memberEmail as memberEmail,
		M.memberName as memberName,
		SD.soleDistNo as soleDistNo,
		SD.memberNo as memberNo,
		SD.soleDistCode as soleDistCode,
		SD.soleDistEmail as soleDistEmail,
		SD.soleDistName as soleDistName,
		SD.soleDistAddress as soleDistAddress,
		SD.soleDistTel as soleDistTel,
		SD.soleDistPhone as soleDistPhone,
		SD.soleDistStatus as soleDistStatus,
		SD.regType as regType,
		SD.regAdminNo as regAdminNo,
		SD.greenPointAccStatus as greenPointAccStatus,
		SD.redPointAccStatus as redPointAccStatus,
		SD.greenPointUseStatus as greenPointUseStatus,
		SD.redPointUseStatus as redPointUseStatus,
		SD.createTime as createTime,
		SD.updateTime as updateTime,
		GP.pointAmount as greenPointAmount,
		RP.pointAmount as redPointAmount
	</sql>


	<sql id="soleDistSearchWhereStatement">
		<if
			test="soleDistNo != null and soleDistNo !=  '0'  and soleDistNo !=  0"> AND soleDistNo = #{soleDistNo,jdbcType=INTEGER} </if>
		<if
			test="memberNo != null and memberNo !=  '0'  and memberNo !=  0"> AND memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if
			test="soleDistStatus != null and soleDistStatus !=  '0'  and soleDistStatus !=  0"> AND soleDistStatus = #{soleDistStatus,jdbcType=VARCHAR}  </if>
		<if test="regType != null"> AND regType = #{regType,jdbcType=CHAR} </if>
		<if
			test="regAdminNo != null  and regAdminNo !=  '0'  and regAdminNo !=  0"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER} </if>
		<if test="greenPointAccStatus != null"> AND greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=CHAR} </if>
		<if test="redPointAccStatus != null"> AND redPointAccStatus =
			#{redPointAccStatus,jdbcType=CHAR} </if>
		<if test="greenPointUseStatus != null"> AND greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=CHAR} </if>
		<if test="redPointUseStatus != null"> AND redPointUseStatus =
			#{redPointUseStatus,jdbcType=CHAR} </if>

		<if
			test="soleDistCode != null or soleDistName != null or soleDistEmail != null or soleDistAddress != null or soleDistTel != null or soleDistPhone != null">
			AND ( 1 = 2
		</if>
		<if test="soleDistCode != null"> OR soleDistCode LIKE CONCAT('%',#{soleDistCode},'%') </if>
		<if test="soleDistName != null">OR soleDistName LIKE CONCAT('%',#{soleDistName},'%') </if>
		<if test="soleDistEmail != null"> OR soleDistEmail LIKE CONCAT('%',#{soleDistEmail},'%')
		</if>
		<if test="soleDistAddress != null"> OR soleDistAddress LIKE
			CONCAT('%',#{soleDistAddress},'%') </if>
		<if test="soleDistTel != null"> OR soleDistTel LIKE CONCAT('%',#{soleDistTel},'%')</if>
		<if test="soleDistPhone != null"> OR soleDistPhone LIKE CONCAT('%',#{soleDistPhone},'%')
		</if>
		<if
			test="soleDistCode != null or soleDistName != null or soleDistEmail != null or soleDistAddress != null or soleDistTel != null or soleDistPhone != null">
			)
		</if>
	</sql>

	<sql id="soleDistCommandSearchWhereStatement">
		<if
			test="soleDistNo != null and soleDistNo !=  '0'  and soleDistNo !=  0"> AND soleDistNo = #{soleDistNo,jdbcType=INTEGER} </if>
		<if
			test="memberNo != null and memberNo !=  '0'  and memberNo !=  0"> AND memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if
			test="soleDistStatus != null and soleDistStatus !=  '0'  and soleDistStatus !=  0"> AND soleDistStatus = #{soleDistStatus,jdbcType=VARCHAR}  </if>
		<if test="regType != null"> AND regType = #{regType,jdbcType=CHAR} </if>
		<if
			test="regAdminNo != null  and regAdminNo !=  '0'  and regAdminNo !=  0"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER} </if>
		<if test="greenPointAccStatus != null"> AND greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=CHAR} </if>
		<if test="redPointAccStatus != null"> AND redPointAccStatus =
			#{redPointAccStatus,jdbcType=CHAR} </if>
		<if test="greenPointUseStatus != null"> AND greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=CHAR} </if>
		<if test="redPointUseStatus != null"> AND redPointUseStatus =
			#{redPointUseStatus,jdbcType=CHAR} </if>

		<if
			test="soleDistCode != null or soleDistName != null or soleDistEmail != null or soleDistAddress != null or soleDistTel != null or soleDistPhone != null">
			AND ( 1 = 2
		</if>
		<if test="soleDistCode != null"> OR soleDistCode LIKE CONCAT('%',#{soleDistCode},'%') </if>
		<if test="soleDistName != null">OR soleDistName LIKE CONCAT('%',#{soleDistName},'%') </if>
		<if test="soleDistEmail != null"> OR soleDistEmail LIKE CONCAT('%',#{soleDistEmail},'%')
		</if>
		<if test="soleDistAddress != null"> OR soleDistAddress LIKE
			CONCAT('%',#{soleDistAddress},'%') </if>
		<if test="soleDistTel != null"> OR soleDistTel LIKE CONCAT('%',#{soleDistTel},'%')</if>
		<if test="soleDistPhone != null"> OR soleDistPhone LIKE CONCAT('%',#{soleDistPhone},'%')
		</if>
		<if
			test="soleDistCode != null or soleDistName != null or soleDistEmail != null or soleDistAddress != null or soleDistTel != null or soleDistPhone != null">
			)
		</if>
	</sql>


	<select id="findSoleDists"
		parameterType="com.returnp.admin.model.SoleDist"
		resultMap="soleDist_ResultMap">
		select
		sql_calc_found_rows
		<include refid="soleDist_Column_List" />
		from sole_dist
		where
		1 = 1
		<include refid="soleDistSearchWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="findSoleDistCommands"
		parameterType="com.returnp.admin.dto.command.SoleDistCommand"
		resultMap="soleDistCommand_ResultMap">
		select
		sql_calc_found_rows
		<include refid="soleDistCommand_Column_List" />
		from member as M
		inner join sole_dist as SD on (M.memberNo = SD.memberNo)
		inner join red_point as RP on (M.memberNo = RP.memberNo)
		inner join green_point as GP on (M.memberNo = GP.memberNo AND GP.nodeType
		='7' )
		where
		1 = 1
		<include refid="soleDistCommandSearchWhereStatement" />
		<include refid="commonStatement" />
	</select>



	<!-- =============================================================================================================== -->
	<!-- Branch -->
	<resultMap id="BranchResultMap"
		type="com.returnp.admin.model.Branch">
		<id column="branchNo" jdbcType="INTEGER" property="branchNo" />
		<id column="branchNo" jdbcType="INTEGER" property="branchNo" />
		<result column="soleDistNo" jdbcType="INTEGER"
			property="soleDistNo" />
		<result column="branchCode" jdbcType="VARCHAR"
			property="branchCode" />
		<result column="branchName" jdbcType="VARCHAR"
			property="branchName" />
		<result column="branchAddress" jdbcType="VARCHAR"
			property="branchAddress" />
		<result column="branchTel" jdbcType="VARCHAR"
			property="branchTel" />
		<result column="branchPhone" jdbcType="VARCHAR"
			property="branchPhone" />
		<result column="branchStatus" jdbcType="VARCHAR"
			property="branchStatus" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="branchEmail" jdbcType="VARCHAR"
			property="branchEmail" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="BranchCommandResultMap"
		type="com.returnp.admin.dto.command.BranchCommand">
		<id column="branchNo" jdbcType="INTEGER" property="branchNo" />
		<id column="branchNo" jdbcType="INTEGER" property="branchNo" />
		<result column="soleDistNo" jdbcType="INTEGER"
			property="soleDistNo" />
		<result column="branchCode" jdbcType="VARCHAR"
			property="branchCode" />
		<result column="branchName" jdbcType="VARCHAR"
			property="branchName" />
		<result column="branchAddress" jdbcType="VARCHAR"
			property="branchAddress" />
		<result column="branchTel" jdbcType="VARCHAR"
			property="branchTel" />
		<result column="branchPhone" jdbcType="VARCHAR"
			property="branchPhone" />
		<result column="branchStatus" jdbcType="VARCHAR"
			property="branchStatus" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="recommenderNo" jdbcType="VARCHAR"
			property="recommenderNo" />
		<result column="recommenderName" jdbcType="VARCHAR"
			property="recommenderName" />
		<result column="soleDistName" jdbcType="INTEGER"
			property="soleDistName" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="branchEmail" jdbcType="VARCHAR"
			property="branchEmail" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="greenPointAmount" jdbcType="REAL"
			property="greenPointAmount" />
		<result column="redPointAmount" jdbcType="REAL"
			property="redPointAmount" />
	</resultMap>

	<sql id="Branch_Column_List">
		branchNo, soleDistNo, branchCode, branchName, branchAddress, branchTel,
		branchPhone,
		branchStatus, memberNo, recommenderNo, regType, regAdminNo, branchEmail,
		greenPointAccStatus,
		redPointAccStatus, greenPointUseStatus, redPointUseStatus, createTime, updateTime
	</sql>

	<sql id="BranchCommand_Column_List">
		B.branchNo,
		B.soleDistNo,
		B.branchCode,
		B.branchName,
		B.branchAddress,
		B.branchTel,
		B.branchPhone,
		B.branchStatus,
		B.memberNo,
		B.recommenderNo,
		B.regType,
		B.regAdminNo,
		B.branchEmail,
		B.greenPointAccStatus,
		B.redPointAccStatus,
		B.greenPointUseStatus,
		B.redPointUseStatus,
		B.createTime,
		B.updateTime,
		M.memberEmail as memberEmail,
		M.memberName as memberName,
		GP.pointAmount as greenPointAmount,
		RP.pointAmount as redPointAmount,
		M2.memberName as recommenderName,
		SD.soleDistName
	</sql>

	<sql id="branchSearchWhereStatement">
		<if test="soleDistNo != null"> AND soleDistNo = #{soleDistNo,jdbcType=INTEGER} </if>
		<if test="branchNo != null"> AND branchNo = #{branchNo,jdbcType=INTEGER} </if>
		<if
			test="branchStatus != null and branchStatus !=  '0'  and branchStatus !=  0">AND branchStatus = #{branchStatus,jdbcType=VARCHAR}</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="recommenderNo != null"> AND recommenderNo = #{recommenderNo,jdbcType=INTEGER}
		</if>
		<if test="greenPointAccStatus != null"> AND greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=INTEGER} </if>
		<if test="redPointAccStatus != null"> AND redPointAccStatus =
			#{redPointAccStatus,jdbcType=INTEGER} </if>
		<if test="greenPointUseStatus != null"> AND greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=INTEGER} </if>
		<if test="redPointUseStatus != null"> AND redPointUseStatus =
			#{redPointUseStatus,jdbcType=INTEGER} </if>
		<if test="regType != null"> AND regType = #{regType,jdbcType=CHAR} </if>
		<if test="regAdminNo != null"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER} </if>

		<if
			test="branchCode != null or branchName != null or branchEmail != null or branchAddress != null or branchTel != null or branchPhone != null">
			AND ( 1 = 2
		</if>
		<if test="branchCode != null"> OR branchCode LIKE CONCAT('%',#{branchCode},'%') </if>
		<if test="branchName != null">OR branchName LIKE CONCAT('%',#{branchName},'%') </if>
		<if test="branchEmail != null"> OR branchEmail LIKE CONCAT('%',#{branchEmail},'%') </if>
		<if test="branchAddress != null"> OR branchAddress LIKE CONCAT('%',#{branchAddress},'%')
		</if>
		<if test="branchTel != null"> OR branchTel LIKE CONCAT('%',#{branchTel},'%')</if>
		<if test="branchPhone != null"> OR branchPhone LIKE CONCAT('%',#{branchPhone},'%') </if>
		<if
			test="branchCode != null or branchName != null or branchEmail != null or branchAddress != null or branchTel != null or branchPhone != null">
			)
		</if>
	</sql>

	<sql id="branchCommandSearchWhereStatement">
		<if test="soleDistNo != null"> AND B.soleDistNo = #{soleDistNo,jdbcType=INTEGER} </if>
		<if test="branchNo != null"> AND B.branchNo = #{branchNo,jdbcType=INTEGER} </if>
		<if
			test="branchStatus != null and branchStatus !=  '0'  and branchStatus !=  0">AND B.branchStatus = #{branchStatus,jdbcType=VARCHAR}</if>
		<if test="memberNo != null"> AND B.memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="recommenderNo != null"> AND B.recommenderNo = #{recommenderNo,jdbcType=INTEGER}
		</if>
		<if test="greenPointAccStatus != null"> AND B.greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=INTEGER} </if>
		<if test="redPointAccStatus != null"> AND B.redPointAccStatus =
			#{redPointAccStatus,jdbcType=INTEGER} </if>
		<if test="greenPointUseStatus != null"> AND B.greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=INTEGER} </if>
		<if test="redPointUseStatus != null"> AND B.redPointUseStatus =
			#{redPointUseStatus,jdbcType=INTEGER} </if>
		<if test="regType != null"> AND B.regType = #{regType,jdbcType=CHAR} </if>
		<if test="regAdminNo != null"> AND B.regAdminNo = #{regAdminNo,jdbcType=INTEGER} </if>

		<if
			test="branchCode != null or branchName != null or branchEmail != null or branchAddress != null or branchTel != null or branchPhone != null">
			AND ( 1 = 2
		</if>
		<if test="branchCode != null"> OR B.branchCode LIKE CONCAT('%',#{branchCode},'%') </if>
		<if test="branchName != null">OR B.branchName LIKE CONCAT('%',#{branchName},'%') </if>
		<if test="branchEmail != null"> OR B.branchEmail LIKE CONCAT('%',#{branchEmail},'%') </if>
		<if test="branchAddress != null"> OR B.branchAddress LIKE CONCAT('%',#{branchAddress},'%')
		</if>
		<if test="branchTel != null"> OR B.branchTel LIKE CONCAT('%',#{branchTel},'%')</if>
		<if test="branchPhone != null"> OR B.branchPhone LIKE CONCAT('%',#{branchPhone},'%') </if>
		<if
			test="branchCode != null or branchName != null or branchEmail != null or branchAddress != null or branchTel != null or branchPhone != null">
			)
		</if>
	</sql>


	<select id="findBranches"
		parameterType="com.returnp.admin.model.Branch"
		resultMap="BranchResultMap">
		select
		sql_calc_found_rows
		<include refid="Branch_Column_List" />
		from branch
		where
		1 = 1
		<include refid="branchSearchWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="findBranchCommands"
		parameterType="com.returnp.admin.dto.command.BranchCommand"
		resultMap="BranchCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="BranchCommand_Column_List" />
		from branch as B
		inner join member as M on (B.memberNo = M.memberNo)
		inner join red_point as RP on (B.memberNo = RP.memberNo)
		inner join green_point as GP on (B.memberNo = GP.memberNo AND GP.nodeType
		='3' )
		left outer join member as M2 on (B.recommenderNo = M2.memberNo)
		left outer join sole_dist as SD on (B.soleDistNo= SD.soleDistNo)
		where
		1 = 1
		<include refid="branchCommandSearchWhereStatement" />
		<include refid="commonStatement" />
	</select>


	<!-- =============================================================================================================== -->
	<!-- SaleManager -->
	<resultMap id="SaleManagerResultMap"
		type="com.returnp.admin.model.SaleManager">
		<id column="saleManagerNo" jdbcType="INTEGER"
			property="saleManagerNo" />
		<id column="saleManagerNo" jdbcType="INTEGER"
			property="saleManagerNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="saleManagerCode" jdbcType="VARCHAR"
			property="saleManagerCode" />
		<result column="saleManagerName" jdbcType="VARCHAR"
			property="saleManagerName" />
		<result column="saleManagerAddress" jdbcType="VARCHAR"
			property="saleManagerAddress" />
		<result column="saleManagerTel" jdbcType="VARCHAR"
			property="saleManagerTel" />
		<result column="saleManagerPhone" jdbcType="VARCHAR"
			property="saleManagerPhone" />
		<result column="saleManagerStatus" jdbcType="VARCHAR"
			property="saleManagerStatus" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="saleManagerEmail" jdbcType="VARCHAR"
			property="saleManagerEmail" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="SaleManagerCommandResultMap"
		type="com.returnp.admin.dto.command.SaleManagerCommand">
		<id column="saleManagerNo" jdbcType="INTEGER"
			property="saleManagerNo" />
		<id column="saleManagerNo" jdbcType="INTEGER"
			property="saleManagerNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="saleManagerCode" jdbcType="VARCHAR"
			property="saleManagerCode" />
		<result column="saleManagerName" jdbcType="VARCHAR"
			property="saleManagerName" />
		<result column="saleManagerAddress" jdbcType="VARCHAR"
			property="saleManagerAddress" />
		<result column="saleManagerTel" jdbcType="VARCHAR"
			property="saleManagerTel" />
		<result column="saleManagerPhone" jdbcType="VARCHAR"
			property="saleManagerPhone" />
		<result column="saleManagerStatus" jdbcType="VARCHAR"
			property="saleManagerStatus" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="saleManagerEmail" jdbcType="VARCHAR"
			property="saleManagerEmail" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="greenPointAmount" jdbcType="REAL"
			property="greenPointAmount" />
		<result column="redPointAmount" jdbcType="REAL"
			property="redPointAmount" />
	</resultMap>

	<sql id="SaleManager_Column_List">
		saleManagerNo, memberNo, saleManagerCode, saleManagerName, saleManagerAddress,
		saleManagerTel,
		saleManagerPhone, saleManagerStatus, regType, regAdminNo, saleManagerEmail,
		greenPointAccStatus,
		redPointAccStatus, greenPointUseStatus, redPointUseStatus, createTime, updateTime
	</sql>

	<sql id="SaleManagerCommand_Column_List">
		SB.saleManagerNo,
		SB.memberNo,
		SB.saleManagerCode,
		SB.saleManagerName,
		SB.saleManagerAddress,
		SB.saleManagerTel,
		SB.saleManagerPhone,
		SB.saleManagerStatus,
		SB.regType,
		SB.regAdminNo,
		SB.saleManagerEmail,
		SB.greenPointAccStatus,
		SB.redPointAccStatus,
		SB.greenPointUseStatus,
		SB.redPointUseStatus,
		SB.createTime,
		SB.updateTime,
		M.memberEmail as memberEmail,
		M.memberName as memberName,
		GP.pointAmount as greenPointAmount,
		RP.pointAmount as redPointAmount
	</sql>

	<sql id="saleManagerSearchWhereStatement">
		<if test="saleManagerNo != null"> AND saleManagerNo = #{saleManager,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if
			test="saleManagerStatus != null and saleManagerStatus !=  '0'  and saleManagerStatus !=  0"> AND saleManagerStatus = #{saleManagerStatus,jdbcType=VARCHAR}
		</if>
		<if test="regType != null"> AND regType = #{regType,jdbcType=CHAR}</if>
		<if test="greenPointAccStatus != null"> AND greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=INTEGER} </if>
		<if test="redPointAccStatus != null"> AND redPointAccStatus =
			#{redPointAccStatus,jdbcType=INTEGER} </if>
		<if test="greenPointUseStatus != null"> AND greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=INTEGER} </if>
		<if test="redPointUseStatus != null"> AND redPointUseStatus =
			#{redPointUseStatus,jdbcType=INTEGER} </if>
		<if test="regAdminNo != null"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER}</if>
		<if
			test="saleManagerCode != null or saleManagerName != null or saleManagerAddress != null or saleManagerTel != null or saleManagerPhone != null or saleManagerEmail != null">
			AND ( 1 = 2
		</if>
		<if test="saleManagerCode != null"> OR saleManagerCode LIKE
			CONCAT('%',#{saleManagerCode},'%')</if>
		<if test="saleManagerName != null"> OR saleManagerName LIKE
			CONCAT('%',#{saleManagerName},'%')</if>
		<if test="saleManagerEmail != null"> OR saleManagerEmail LIKE
			CONCAT('%',#{saleManagerEmail},'%')</if>
		<if test="saleManagerAddress != null"> OR saleManagerAddress LIKE
			CONCAT('%',#{saleManagerAddress},'%')</if>
		<if test="saleManagerTel != null"> OR saleManagerTel LIKE CONCAT('%',#{saleManagerTel},'%')
		</if>
		<if test="saleManagerPhone != null"> OR saleManagerPhone LIKE
			CONCAT('%',#{saleManagerPhone},'%')</if>
		<if
			test="saleManagerCode != null or saleManagerName != null or saleManagerAddress != null or saleManagerTel != null or saleManagerPhone != null or saleManagerEmail != null">
			)
		</if>
	</sql>

	<sql id="saleManagerCommandSearchWhereStatement">
		<if test="saleManagerNo != null"> AND saleManagerNo = #{saleManager,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if
			test="saleManagerStatus != null and saleManagerStatus !=  '0'  and saleManagerStatus !=  0"> AND saleManagerStatus = #{saleManagerStatus,jdbcType=VARCHAR}
		</if>
		<if test="regType != null"> AND regType = #{regType,jdbcType=CHAR}</if>
		<if test="greenPointAccStatus != null"> AND greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=INTEGER} </if>
		<if test="redPointAccStatus != null"> AND redPointAccStatus =
			#{redPointAccStatus,jdbcType=INTEGER} </if>
		<if test="greenPointUseStatus != null"> AND greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=INTEGER} </if>
		<if test="redPointUseStatus != null"> AND redPointUseStatus =
			#{redPointUseStatus,jdbcType=INTEGER} </if>
		<if test="regAdminNo != null"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER}</if>
		<if
			test="saleManagerCode != null or saleManagerName != null or saleManagerAddress != null or saleManagerTel != null or saleManagerPhone != null or saleManagerEmail != null">
			AND ( 1 = 2
		</if>
		<if test="saleManagerCode != null"> OR saleManagerCode LIKE
			CONCAT('%',#{saleManagerCode},'%')</if>
		<if test="saleManagerName != null"> OR saleManagerName LIKE
			CONCAT('%',#{saleManagerName},'%')</if>
		<if test="saleManagerEmail != null"> OR saleManagerEmail LIKE
			CONCAT('%',#{saleManagerEmail},'%')</if>
		<if test="saleManagerAddress != null"> OR saleManagerAddress LIKE
			CONCAT('%',#{saleManagerAddress},'%')</if>
		<if test="saleManagerTel != null"> OR saleManagerTel LIKE CONCAT('%',#{saleManagerTel},'%')
		</if>
		<if test="saleManagerPhone != null"> OR saleManagerPhone LIKE
			CONCAT('%',#{saleManagerPhone},'%')</if>
		<if
			test="saleManagerCode != null or saleManagerName != null or saleManagerAddress != null or saleManagerTel != null or saleManagerPhone != null or saleManagerEmail != null">
			)
		</if>
	</sql>

	<select id="findSaleManagers"
		parameterType="com.returnp.admin.model.SaleManager"
		resultMap="SaleManagerResultMap">
		select
		sql_calc_found_rows
		<include refid="SaleManager_Column_List" />
		from sale_manager
		where
		1 = 1
		<include refid="saleManagerSearchWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="findSaleManagerCommands"
		parameterType="com.returnp.admin.dto.command.SaleManagerCommand"
		resultMap="SaleManagerCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="SaleManagerCommand_Column_List" />
		from member as M
		inner join sale_manager as SB on (M.memberNo = SB.memberNo)
		inner join red_point as RP on (M.memberNo = RP.memberNo)
		inner join green_point as GP on (M.memberNo = GP.memberNo AND GP.nodeType
		='6' )
		where
		1 = 1
		<include refid="saleManagerSearchWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- Agency -->
	<resultMap id="AgencyResultMap"
		type="com.returnp.admin.model.Agency">
		<id column="agencyNo" jdbcType="INTEGER" property="agencyNo" />
		<result column="agencyCode" jdbcType="VARCHAR"
			property="agencyCode" />
		<result column="agencyName" jdbcType="VARCHAR"
			property="agencyName" />
		<result column="agencyAddress" jdbcType="VARCHAR"
			property="agencyAddress" />
		<result column="agencyTel" jdbcType="VARCHAR"
			property="agencyTel" />
		<result column="agencyPhone" jdbcType="VARCHAR"
			property="agencyPhone" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="branchNo" jdbcType="INTEGER"
			property="branchNo" />
		<result column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="agencyStatus" jdbcType="VARCHAR"
			property="agencyStatus" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="agencyEmail" jdbcType="VARCHAR"
			property="agencyEmail" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="AgencyCommandResultMap"
		type="com.returnp.admin.dto.command.AgencyCommand">
		<id column="agencyNo" jdbcType="INTEGER" property="agencyNo" />
		<result column="agencyCode" jdbcType="VARCHAR"
			property="agencyCode" />
		<result column="agencyName" jdbcType="VARCHAR"
			property="agencyName" />
		<result column="agencyAddress" jdbcType="VARCHAR"
			property="agencyAddress" />
		<result column="agencyTel" jdbcType="VARCHAR"
			property="agencyTel" />
		<result column="agencyPhone" jdbcType="VARCHAR"
			property="agencyPhone" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="branchNo" jdbcType="INTEGER"
			property="branchNo" />
		<result column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="recommenderName" jdbcType="VARCHAR"
			property="recommenderName" />
		<result column="agencyStatus" jdbcType="VARCHAR"
			property="agencyStatus" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="agencyEmail" jdbcType="VARCHAR"
			property="agencyEmail" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="greenPointAmount" jdbcType="REAL"
			property="greenPointAmount" />
		<result column="redPointAmount" jdbcType="REAL"
			property="redPointAmount" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="branchName" jdbcType="VARCHAR"
			property="branchName" />
	</resultMap>


	<sql id="Agency_Column_List">
		agencyNo, agencyCode, agencyName, agencyAddress, agencyTel, agencyPhone,
		memberNo,
		branchNo, recommenderNo, agencyStatus, regType, regAdminNo, agencyEmail,
		greenPointAccStatus,
		redPointAccStatus, greenPointUseStatus, redPointUseStatus, createTime, updateTime
	</sql>

	<sql id="AgencyCommand_Column_List">
		A.agencyNo,
		A.agencyCode,
		A.agencyName,
		A.agencyAddress,
		A.agencyTel,
		A.agencyPhone,
		A.memberNo,
		A.branchNo,
		A.recommenderNo,
		A.agencyStatus,
		A.regType,
		A.regAdminNo,
		A.agencyEmail,
		A.greenPointAccStatus,
		A.redPointAccStatus,
		A.greenPointUseStatus,
		A.redPointUseStatus,
		A.createTime,
		A.updateTime,
		M.memberEmail as memberEmail,
		M.memberName as memberName,
		GP.pointAmount as greenPointAmount,
		RP.pointAmount as redPointAmount,
		M2.memberName as recommenderName,
		BR.branchName
	</sql>


	<sql id="agencySearchWhereStatement">
		<if test="agencyNo != null">AND agencyNo = #{agency,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="branchNo != null"> AND branchNo = #{branchNo,jdbcType=INTEGER}</if>
		<if test="recommenderNo != null"> AND recommenderNo = #{recommenderNo,jdbcType=INTEGER}
		</if>
		<if test="greenPointAccStatus != null"> AND greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=INTEGER} </if>
		<if test="redPointAccStatus != null"> AND redPointAccStatus =
			#{redPointAccStatus,jdbcType=INTEGER} </if>
		<if test="greenPointUseStatus != null"> AND greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=INTEGER} </if>
		<if test="redPointUseStatus != null"> AND redPointUseStatus =
			#{redPointUseStatus,jdbcType=INTEGER} </if>
		<if test="regAdminNo != null"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER}</if>
		<if
			test="agencyStatus != null and agencyStatus != '0'  and agencyStatus != 0 "> AND agencyStatus = #{agencyStatus,jdbcType=VARCHAR}</if>
		<if test="regType != null"> AND regType = #{regType,jdbcType=CHAR}</if>
		<if test="regAdminNo != null"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER}</if>
		<if
			test="agencyEmail != null or agencyCode != null or agencyName != null or agencyAddress != null or agencyTel != null or agencyPhone != null">
			AND ( 1 = 2
		</if>
		<if test="agencyEmail != null"> OR agencyEmail LIKE CONCAT('%',#{agencyEmail},'%') </if>
		<if test="agencyCode != null"> OR agencyCode LIKE CONCAT('%',#{agencyCode},'%') </if>
		<if test="agencyName != null"> OR agencyName LIKE CONCAT('%',#{agencyName},'%') </if>
		<if test="agencyAddress != null"> OR agencyAddress LIKE CONCAT('%',#{agencyAddress},'%')
		</if>
		<if test="agencyTel != null"> OR agencyTel LIKE CONCAT('%',#{agencyTel},'%') </if>
		<if test="agencyPhone != null"> OR agencyPhone LIKE CONCAT('%',#{agencyPhone},'%') </if>
		<if
			test="agencyEmail != null or agencyCode != null or agencyName != null or agencyAddress != null or agencyTel != null or agencyPhone != null">
			)
		</if>
	</sql>

	<sql id="agencyCommandSearchWhereStatement">
		<if test="agencyNo != null">AND A.agencyNo = #{agencyNo,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND A.memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="branchNo != null"> AND A.branchNo = #{branchNo,jdbcType=INTEGER}</if>
		<if test="recommenderNo != null"> AND A.recommenderNo = #{recommenderNo,jdbcType=INTEGER}
		</if>
		<if test="greenPointAccStatus != null"> AND A.greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=INTEGER} </if>
		<if test="redPointAccStatus != null"> AND A.redPointAccStatus =
			#{redPointAccStatus,jdbcType=INTEGER} </if>
		<if test="greenPointUseStatus != null"> AND A.greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=INTEGER} </if>
		<if test="redPointUseStatus != null"> AND A.redPointUseStatus =
			#{redPointUseStatus,jdbcType=INTEGER} </if>
		<if test="regAdminNo != null"> AND A.regAdminNo = #{regAdminNo,jdbcType=INTEGER}</if>
		<if
			test="agencyStatus != null and agencyStatus != '0'  and agencyStatus != 0 "> AND A.agencyStatus = #{agencyStatus,jdbcType=VARCHAR}</if>
		<if test="regType != null"> AND A.regType = #{regType,jdbcType=CHAR}</if>
		<if test="regAdminNo != null"> AND A.regAdminNo = #{regAdminNo,jdbcType=INTEGER}</if>
		<if
			test="agencyEmail != null or agencyCode != null or agencyName != null or agencyAddress != null or agencyTel != null or agencyPhone != null">
			AND ( 1 = 2
		</if>
		<if test="agencyEmail != null"> OR A.agencyEmail LIKE CONCAT('%',#{agencyEmail},'%') </if>
		<if test="agencyCode != null"> OR A.agencyCode LIKE CONCAT('%',#{agencyCode},'%') </if>
		<if test="agencyName != null"> OR A.agencyName LIKE CONCAT('%',#{agencyName},'%') </if>
		<if test="agencyAddress != null"> OR A.agencyAddress LIKE CONCAT('%',#{agencyAddress},'%')
		</if>
		<if test="agencyTel != null"> OR A.agencyTel LIKE CONCAT('%',#{agencyTel},'%') </if>
		<if test="agencyPhone != null"> OR A.agencyPhone LIKE CONCAT('%',#{agencyPhone},'%') </if>
		<if
			test="agencyEmail != null or agencyCode != null or agencyName != null or agencyAddress != null or agencyTel != null or agencyPhone != null">
			)
		</if>
	</sql>


	<select id="findAgencies"
		parameterType="com.returnp.admin.model.Agency"
		resultMap="AgencyResultMap">
		select
		sql_calc_found_rows
		<include refid="Agency_Column_List" />
		from agency
		where
		1 = 1
		<include refid="agencySearchWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="findAgencyCommands"
		parameterType="com.returnp.admin.dto.command.AgencyCommand"
		resultMap="AgencyCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="AgencyCommand_Column_List" />
		from agency as A
		inner join member as M on (A.memberNo = M.memberNo)
		inner join red_point as RP on (A.memberNo = RP.memberNo)
		inner join green_point as GP on (A.memberNo = GP.memberNo AND GP.nodeType
		='4' )
		left outer join member as M2 on (A.recommenderNo = M2.memberNo)
		left outer join branch as BR on (A.branchNo= BR.branchNo)
		where
		1 = 1
		<include refid="agencyCommandSearchWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- Affiliate -->
	<resultMap id="AffiliateResultMap"
		type="com.returnp.admin.model.Affiliate">
		<id column="affiliateNo" jdbcType="INTEGER" property="affiliateNo" />
		<result column="affiliateSerial" jdbcType="VARCHAR"
			property="affiliateSerial" />
		<result column="affiliateCode" jdbcType="VARCHAR"
			property="affiliateCode" />
		<result column="affiliateName" jdbcType="VARCHAR"
			property="affiliateName" />
		<result column="affiliateAddress" jdbcType="VARCHAR"
			property="affiliateAddress" />
		<result column="affiliateTel" jdbcType="VARCHAR"
			property="affiliateTel" />
		<result column="affiliatePhone" jdbcType="VARCHAR"
			property="affiliatePhone" />
		<result column="affiliateType" jdbcType="VARCHAR"
			property="affiliateType" />
		<result column="affiliateComm" jdbcType="FLOAT"
			property="affiliateComm" />
		<result column="giftCardPayRefundRate" jdbcType="REAL"
			property="giftCardPayRefundRate" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="agencyNo" jdbcType="INTEGER"
			property="agencyNo" />
		<result column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="affiliateStatus" jdbcType="VARCHAR"
			property="affiliateStatus" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="affiliateEmail" jdbcType="VARCHAR"
			property="affiliateEmail" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="AffiliateCommandResultMap"
		type="com.returnp.admin.dto.command.AffiliateCommand">
		<id column="affiliateNo" jdbcType="INTEGER" property="affiliateNo" />
		<result column="affiliateSerialCount" jdbcType="INTEGER"
			property="affiliateSerialCount" />
		<result column="affiliateSerial" jdbcType="VARCHAR"
			property="affiliateSerial" />
		<result column="affiliateCode" jdbcType="VARCHAR"
			property="affiliateCode" />
		<result column="affiliateName" jdbcType="VARCHAR"
			property="affiliateName" />
		<result column="affiliateAddress" jdbcType="VARCHAR"
			property="affiliateAddress" />
		<result column="affiliateTel" jdbcType="VARCHAR"
			property="affiliateTel" />
		<result column="affiliatePhone" jdbcType="VARCHAR"
			property="affiliatePhone" />
		<result column="affiliateType" jdbcType="VARCHAR"
			property="affiliateType" />
		<result column="affiliateComm" jdbcType="FLOAT"
			property="affiliateComm" />
		<result column="giftCardPayRefundRate" jdbcType="REAL"
			property="giftCardPayRefundRate" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="agencyNo" jdbcType="INTEGER"
			property="agencyNo" />
		<result column="category1No" jdbcType="INTEGER"
			property="category1No" />
		<result column="category2No" jdbcType="INTEGER"
			property="category2No" />
		<result column="category1NoName" jdbcType="VARCHAR"
			property="category1NoName" />
		<result column="category2NoName" jdbcType="VARCHAR"
			property="category2NoName" />
		<result column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="affiliateStatus" jdbcType="VARCHAR"
			property="affiliateStatus" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="affiliateEmail" jdbcType="VARCHAR"
			property="affiliateEmail" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="greenPointAmount" jdbcType="REAL"
			property="greenPointAmount" />
		<result column="redPointAmount" jdbcType="REAL"
			property="redPointAmount" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="nodeNo" jdbcType="INTEGER" property="nodeNo" />
		<result column="nodeType" jdbcType="VARCHAR"
			property="nodeType" />
		<result column="roadFullAddr" jdbcType="VARCHAR"
			property="roadFullAddr" />
		<result column="roadAddrPart1" jdbcType="VARCHAR"
			property="roadAddrPart1" />
		<result column="roadAddrPart2" jdbcType="VARCHAR"
			property="roadAddrPart2" />
		<result column="addrDetail" jdbcType="VARCHAR"
			property="addrDetail" />
		<result column="engAddr" jdbcType="VARCHAR" property="engAddr" />
		<result column="jibunAddr" jdbcType="VARCHAR"
			property="jibunAddr" />
		<result column="zipNo" jdbcType="VARCHAR" property="zipNo" />
		<result column="admCd" jdbcType="VARCHAR" property="admCd" />
		<result column="rnMgtSn" jdbcType="VARCHAR" property="rnMgtSn" />
		<result column="bdMgtSn" jdbcType="VARCHAR" property="bdMgtSn" />
		<result column="lat" jdbcType="VARCHAR" property="lat" />
		<result column="lng" jdbcType="VARCHAR" property="lng" />
		<result column="recommenderName" jdbcType="VARCHAR"
			property="recommenderName" />
		<result column="agencyName" jdbcType="VARCHAR"
			property="agencyName" />
		<result column="paymentRouterNo" jdbcType="INTEGER"
			property="paymentRouterNo" />
		<result column="paymentRouterType" jdbcType="VARCHAR"
			property="paymentRouterType" />
		<result column="paymentRouterName" jdbcType="VARCHAR"
			property="paymentRouterName" />
		<result column="paymentRouterCode" jdbcType="VARCHAR"
			property="paymentRouterCode" />
		<result column="ciderPayStatus" jdbcType="VARCHAR"
			property="ciderPayStatus" />
	</resultMap>

	<sql id="Affiliate_Column_List">
		affiliateNo, affiliateSerial, affiliateCode, affiliateName, affiliateAddress,
		affiliateTel,
		affiliatePhone, affiliateType, affiliateComm, giftCardPayRefundRate, memberNo,
		agencyNo, recommenderNo, affiliateStatus, regType, regAdminNo,
		affiliateEmail, greenPointAccStatus, redPointAccStatus,
		greenPointUseStatus, redPointUseStatus,
		createTime, updateTime
	</sql>

	<sql id="AffiliateCommand_Column_List">
		AF.affiliateNo,
		AF.affiliateSerial,
		AF.affiliateCode,
		AF.affiliateName,
		AF.affiliateAddress,
		AF.affiliateTel,
		AF.affiliatePhone,
		AF.affiliateType,
		AF.affiliateComm,
		AF.giftCardPayRefundRate,
		AF.memberNo,
		AF.agencyNo,
		AF.recommenderNo,
		AF.affiliateStatus,
		AF.regType,
		AF.regAdminNo,
		AF.affiliateEmail,
		AF.greenPointAccStatus,
		AF.redPointAccStatus,
		AF.greenPointUseStatus,
		AF.redPointUseStatus,
		AF.createTime,
		AF.updateTime,
		M.memberEmail as memberEmail,
		M.memberName as memberName,
		M.memberPhone as memberPhone,
		GP.pointAmount as greenPointAmount,
		RP.pointAmount as redPointAmount,
		MA.memberAddressNo,
		MA.memberNo,
		MA.nodeNo,
		MA.nodeType,
		MA.roadFullAddr,
		MA.roadAddrPart1,
		MA.roadAddrPart2,
		MA.addrDetail,
		MA.engAddr,
		MA.jibunAddr,
		MA.zipNo,
		MA.admCd,
		MA.rnMgtSn,
		MA.bdMgtSn,
		MA.lat,
		MA.lng,
		M2.memberName as recommenderName,
		AG.agencyName,
		(select count(*) from affiliate_tid as AT where AF.affiliateNo =
		AT.affiliateNo) as affiliateSerialCount,
		APR.paymentRouterNo,
		(SELECT paymentRouterType from payment_router WHERE paymentRouterNo =
		APR.paymentRouterNo) as paymentRouterType,
		(SELECT paymentRouterName from payment_router WHERE paymentRouterNo =
		APR.paymentRouterNo) as paymentRouterName,
		(SELECT paymentRouterCode from payment_router WHERE paymentRouterNo =
		APR.paymentRouterNo) as paymentRouterCode,
		AC.ciderPayStatus,
		ACF.category1No,
		ACF.category2No,
		(SELECT categoryName from category WHERE categoryNo = ACF.category1No) as
		category1NoName,
		(SELECT categoryName from category WHERE categoryNo = ACF.category2No) as
		category2NoName
	</sql>

	<sql id="affiliateSearchWhereStatement">
		<if test="affiliateNo != null">AND affiliateNo = #{affiliateNo,jdbcType=INTEGER} </if>
		<if test="memberNo != null">AND memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="agencyNo != null">AND agencyNo = #{agencyNo,jdbcType=INTEGER} </if>
		<if test="affiliateSerial != null">AND affiliateSerial = #{affiliateSerial,jdbcType=VARCHAR}
		</if>
		<if test="affiliateType != null">AND affiliateType = #{affiliateType,jdbcType=VARCHAR} </if>
		<if test="recommenderNo != null">AND recommenderNo = #{recommenderNo,jdbcType=INTEGER} </if>
		<if test="greenPointAccStatus != null"> AND greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=INTEGER} </if>
		<if test="redPointAccStatus != null"> AND redPointAccStatus =
			#{redPointAccStatus,jdbcType=INTEGER} </if>
		<if test="greenPointUseStatus != null"> AND greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=INTEGER} </if>
		<if test="redPointUseStatus != null"> AND redPointUseStatus =
			#{redPointUseStatus,jdbcType=INTEGER} </if>
		<if
			test="affiliateStatus != null and affiliateStatus !=  '0'  and affiliateStatus !=  0">AND affiliateStatus = #{affiliateStatus,jdbcType=VARCHAR} </if>
		<if test="regType != null">AND regType = #{regType,jdbcType=CHAR} </if>
		<if test="regAdminNo != null">AND regAdminNo = #{regAdminNo,jdbcType=INTEGER} </if>

		<if
			test="affiliateCode != null or affiliateAddress != null or affiliateTel != null or affiliatePhone != null or affiliateName != null  or affiliateEmail != null">
			AND ( 1 = 2
		</if>
		<if test="affiliateCode != null"> OR affiliateCode LIKE CONCAT('%',#{affiliateCode},'%')
		</if>
		<if test="affiliateAddress != null"> OR affiliateAddress LIKE
			CONCAT('%',#{affiliateAddress},'%')</if>
		<if test="affiliateEmail != null"> OR affiliateEmail LIKE CONCAT('%',#{affiliateEmail},'%')
		</if>
		<if test="affiliateTel != null"> OR affiliateTel LIKE CONCAT('%',#{affiliateTel},'%')</if>
		<if test="affiliatePhone != null">OR affiliatePhone LIKE CONCAT('%',#{affiliatePhone},'%')
		</if>
		<if test="affiliateName != null">OR affiliateName LIKE CONCAT('%',#{affiliateName},'%')
		</if>
		<if
			test="affiliateCode != null or affiliateAddress != null or affiliateTel != null or affiliatePhone != null or affiliateName != null  or affiliateEmail != null">
			)
		</if>
	</sql>

	<sql id="affiliateCommandSearchWhereStatement">
		<if test="affiliateNo != null">AND AF.affiliateNo = #{affiliateNo,jdbcType=INTEGER} </if>
		<if test="memberNo != null">AND AF.memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="agencyNo != null">AND AF.agencyNo = #{agencyNo,jdbcType=INTEGER} </if>
		<if test="affiliateSerial != null">AND AF.affiliateSerial =
			#{affiliateSerial,jdbcType=VARCHAR} </if>
		<if test="affiliateType != null">AND AF.affiliateType = #{affiliateType,jdbcType=VARCHAR}
		</if>
		<if test="recommenderNo != null">AND AF.recommenderNo = #{recommenderNo,jdbcType=INTEGER}
		</if>
		<if test="greenPointAccStatus != null"> AND AF.greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=INTEGER} </if>
		<if test="redPointAccStatus != null"> AND AF.redPointAccStatus =
			#{redPointAccStatus,jdbcType=INTEGER} </if>
		<if test="greenPointUseStatus != null"> AND AF.greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=INTEGER} </if>
		<if test="redPointUseStatus != null"> AND AF.redPointUseStatus =
			#{redPointUseStatus,jdbcType=INTEGER} </if>
		<if
			test="affiliateStatus != null and affiliateStatus !=  '0'  and affiliateStatus !=  0">AND AF.affiliateStatus = #{affiliateStatus,jdbcType=VARCHAR}
		</if>
		<if test="regType != null">AND AF.regType = #{regType,jdbcType=CHAR} </if>
		<if test="regAdminNo != null">AND AF.regAdminNo = #{regAdminNo,jdbcType=INTEGER} </if>
		<if test="paymentRouterNo != null and paymentRouterNo != 0">AND paymentRouterNo = #{paymentRouterNo,jdbcType=INTEGER}
		</if>
		<if test="paymentRouterType != null"> AND paymentRouterType =
			#{paymentRouterType,jdbcType=INTEGER} </if>
		<if test="paymentRouterName != null"> AND paymentRouterName =
			#{paymentRouterName,jdbcType=INTEGER} </if>
		<if test="paymentRouterCode != null"> AND paymentRouterCode =
			#{paymentRouterCode,jdbcType=INTEGER} </if>
		<if test="ciderPayStatus != null"> AND ciderPayStatus = #{ciderPayStatus,jdbcType=INTEGER}
		</if>

		<if
			test="affiliateCode != null or affiliateAddress != null or affiliateTel != null or affiliatePhone != null or affiliateName != null  or affiliateEmail != null or memberName != null or memberPhone != null ">
			AND ( 1 = 2
		</if>
		<if test="memberName != null"> OR M.memberName LIKE CONCAT('%',#{memberName},'%')</if>
		<if test="memberPhone != null"> OR M.memberPhone LIKE CONCAT('%',#{memberPhone},'%')</if>
		<if test="affiliateCode != null"> OR affiliateCode LIKE CONCAT('%',#{affiliateCode},'%')
		</if>
		<if test="affiliateAddress != null"> OR AF.affiliateAddress LIKE
			CONCAT('%',#{affiliateAddress},'%')</if>
		<if test="affiliateEmail != null"> OR AF.affiliateEmail LIKE
			CONCAT('%',#{affiliateEmail},'%')</if>
		<if test="affiliateTel != null"> OR AF.affiliateTel LIKE CONCAT('%',#{affiliateTel},'%')
		</if>
		<if test="affiliatePhone != null">OR AF.affiliatePhone LIKE
			CONCAT('%',#{affiliatePhone},'%') </if>
		<if test="affiliateName != null">OR AF.affiliateName LIKE CONCAT('%',#{affiliateName},'%')
		</if>
		<if
			test="affiliateCode != null or affiliateAddress != null or affiliateTel != null or affiliatePhone != null or affiliateName != null  or affiliateEmail != null or memberName != null or memberPhone != null ">
			)
		</if>
	</sql>

	<select id="findAffiliates"
		parameterType="com.returnp.admin.model.Affiliate"
		resultMap="AffiliateResultMap">
		select
		sql_calc_found_rows
		<include refid="Affiliate_Column_List" />
		from affiliate
		where
		1 = 1
		<include refid="affiliateSearchWhereStatement" />
		<include refid="commonStatement" />
	</select>


	<select id="findAffiliateCommands"
		parameterType="com.returnp.admin.dto.command.AffiliateCommand"
		resultMap="AffiliateCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="AffiliateCommand_Column_List" />
		from affiliate as AF
		inner join member as M on (AF.memberNo = M.memberNo)
		inner join red_point as RP on (AF.memberNo = RP.memberNo)
		inner join green_point as GP on (AF.memberNo = GP.memberNo AND GP.nodeType
		='5' )
		left outer join member_address as MA on (AF.affiliateNo = MA.nodeNo AND
		MA.nodeType ='5' )
		left outer join member as M2 on (AF.recommenderNo = M2.memberNo)
		left outer join agency as AG on (AF.agencyNo= AG.agencyNo)
		left outer join affiliate_payment_router as APR on (AF.affiliateNo=
		APR.affiliateNo)
		left outer join affiliate_category as ACF on (AF.affiliateNo =
		ACF.affiliateNo)
		left outer join affiliate_ciderpay as AC on (AF.affiliateNo =
		AC.affiliateNo)
		where
		1 = 1
		<include refid="affiliateCommandSearchWhereStatement" />
		<include refid="commonStatement" />
	</select>


	<!-- =============================================================================================================== -->
	<!-- Recommender -->
	<resultMap id="RecommenderCommandResultMap"
		type="com.returnp.admin.dto.command.RecommenderCommand">
		<id column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="recommenderCode" jdbcType="VARCHAR"
			property="recommenderCode" />
		<result column="recommenderName" jdbcType="VARCHAR"
			property="recommenderName" />
		<result column="recommenderAddress" jdbcType="VARCHAR"
			property="recommenderAddress" />
		<result column="recommenderTel" jdbcType="VARCHAR"
			property="recommenderTel" />
		<result column="recommenderPhone" jdbcType="VARCHAR"
			property="recommenderPhone" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="saleManagerNo" jdbcType="INTEGER"
			property="saleManagerNo" />
		<result column="recommenderStatus" jdbcType="VARCHAR"
			property="recommenderStatus" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="recommenderEmail" jdbcType="VARCHAR"
			property="recommenderEmail" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="membershipRequestNo" jdbcType="INTEGER"
			property="membershipRequestNo" />
		<result column="companyBankAccountNo" jdbcType="INTEGER"
			property="companyBankAccountNo" />
		<result column="paymentStatus" jdbcType="VARCHAR"
			property="paymentStatus" />
		<result column="paymentType" jdbcType="VARCHAR"
			property="paymentType" />
	</resultMap>

	<resultMap id="RecommenderCommand2ResultMap"
		type="com.returnp.admin.dto.command.RecommenderCommand2">
		<id column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="recommenderCode" jdbcType="VARCHAR"
			property="recommenderCode" />
		<result column="recommenderName" jdbcType="VARCHAR"
			property="recommenderName" />
		<result column="recommenderAddress" jdbcType="VARCHAR"
			property="recommenderAddress" />
		<result column="recommenderTel" jdbcType="VARCHAR"
			property="recommenderTel" />
		<result column="recommenderPhone" jdbcType="VARCHAR"
			property="recommenderPhone" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="saleManagerNo" jdbcType="INTEGER"
			property="saleManagerNo" />
		<result column="recommenderStatus" jdbcType="VARCHAR"
			property="recommenderStatus" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="recommenderEmail" jdbcType="VARCHAR"
			property="recommenderEmail" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="greenPointAmount" jdbcType="REAL"
			property="greenPointAmount" />
		<result column="redPointAmount" jdbcType="REAL"
			property="redPointAmount" />

	</resultMap>


	<resultMap id="RecommenderResultMap"
		type="com.returnp.admin.model.Recommender">
		<id column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="recommenderCode" jdbcType="VARCHAR"
			property="recommenderCode" />
		<result column="recommenderName" jdbcType="VARCHAR"
			property="recommenderName" />
		<result column="recommenderAddress" jdbcType="VARCHAR"
			property="recommenderAddress" />
		<result column="recommenderTel" jdbcType="VARCHAR"
			property="recommenderTel" />
		<result column="recommenderPhone" jdbcType="VARCHAR"
			property="recommenderPhone" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="saleManagerNo" jdbcType="INTEGER"
			property="saleManagerNo" />
		<result column="recommenderStatus" jdbcType="VARCHAR"
			property="recommenderStatus" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="recommenderEmail" jdbcType="VARCHAR"
			property="recommenderEmail" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="Recommender_Column_List">
		recommenderNo, recommenderCode, recommenderName, recommenderAddress, recommenderTel,
		recommenderPhone, memberNo, saleManagerNo, recommenderStatus, regType,
		regAdminNo,
		recommenderEmail, greenPointAccStatus, redPointAccStatus, greenPointUseStatus,
		redPointUseStatus,
		createTime, updateTime
	</sql>

	<sql id="RecommenderCommand_Column_List">
		R.recommenderNo as recommenderNo,
		R.recommenderCode as recommenderCode,
		R.recommenderName as recommenderName,
		R.recommenderAddress as recommenderAddress,
		R.recommenderTel as recommenderTel,
		R.recommenderPhone as recommenderPhone,
		R.memberNo as memberNo,
		R.saleManagerNo as saleManagerNo,
		R.recommenderStatus as recommenderStatus,
		R.regType as regType,
		R.regAdminNo as regAdminNo ,
		R.recommenderEmail as recommenderEmail,
		R.greenPointAccStatus as greenPointAccStatus,
		R.redPointAccStatus as redPointAccStatus,
		R.greenPointUseStatus as greenPointUseStatus,
		R.redPointUseStatus as redPointUseStatus,
		MQ.membershipRequestNo as membershipRequestNo,
		MQ.paymentStatus as paymentStatus,
		MQ.paymentAmount as paymentAmount,
		MQ.paymentType as paymentType,
		MQ.companyBankAccountNo as companyBankAccountNo,
		R.createTime as createTime,
		R.updateTime as updateTime
	</sql>

	<sql id="RecommenderCommand2_Column_List">
		R.recommenderNo,
		R.recommenderCode,
		R.recommenderName,
		R.recommenderAddress,
		R.recommenderTel,
		R.recommenderPhone,
		R.memberNo,
		R.saleManagerNo,
		R.recommenderStatus,
		R.regType,
		R.regAdminNo,
		R.recommenderEmail,
		R.greenPointAccStatus,
		R.redPointAccStatus,
		R.greenPointUseStatus,
		R.redPointUseStatus,
		R.createTime,
		R.updateTime,
		M.memberEmail as memberEmail,
		M.memberName as memberName,
		GP.pointAmount as greenPointAmount,
		RP.pointAmount as redPointAmount
	</sql>


	<sql id="recommender_WhereStatement">
		<if test="recommenderNo != null"> AND recommenderNo = #{recommenderNo,jdbcType=INTEGER}
		</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="saleManagerNo != null"> AND saleManagerNo = #{saleManagerNo,jdbcType=INTEGER}
		</if>
		<if
			test="recommenderStatus != null and recommenderStatus !=  '0'  and recommenderStatus !=  0"> AND recommenderStatus = #{recommenderStatus,jdbcType=VARCHAR}
		</if>
		<if test="regType != null"> AND regType = #{regType,jdbcType=CHAR} </if>
		<if test="regAdminNo != null"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER} </if>
		<if test="greenPointAccStatus != null"> AND greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=INTEGER} </if>
		<if test="redPointAccStatus != null"> AND redPointAccStatus =
			#{redPointAccStatus,jdbcType=INTEGER} </if>
		<if test="greenPointUseStatus != null"> AND greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=INTEGER} </if>
		<if test="redPointUseStatus != null"> AND redPointUseStatus =
			#{redPointUseStatus,jdbcType=INTEGER} </if>

		<if
			test="recommenderCode != null or recommenderName != null or recommenderAddress != null or recommenderPhone != null or recommenderEmail != null or recommenderPhone != null">
			AND ( 1 = 2
		</if>

		<if test="recommenderName != null"> OR R.recommenderName LIKE
			CONCAT('%',#{recommenderName},'%') </if>
		<if test="recommenderAddress != null"> OR R.recommenderAddress LIKE
			CONCAT('%',#{recommenderAddress},'%') </if>

		<if test="recommenderTel != null"> OR R.recommenderTel LIKE
			CONCAT('%',#{recommenderTel},'%') </if>
		<if test="recommenderPhone != null"> OR R.recommenderPhone LIKE
			CONCAT('%',#{recommenderPhone},'%') </if>
		<if test="recommenderEmail != null"> OR R.recommenderEmail LIKE
			CONCAT('%',#{recommenderEmail},'%')  </if>
		<if
			test="recommenderCode != null or recommenderName != null or recommenderAddress != null or recommenderPhone != null or recommenderEmail != null or recommenderPhone != null">
			)
		</if>
	</sql>

	<sql id="recommenderCommand_WhereStatement">
		<if test="recommenderNo != null"> AND R.recommenderNo = #{recommenderNo,jdbcType=INTEGER}
		</if>
		<if test="memberNo != null"> AND R.memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="saleManagerNo != null"> AND R.saleManagerNo = #{saleManagerNo,jdbcType=INTEGER}
		</if>
		<if
			test="recommenderStatus != null and recommenderStatus !=  '0'  and recommenderStatus !=  0"> AND recommenderStatus = #{recommenderStatus,jdbcType=VARCHAR}
		</if>
		<if test="regType != null"> AND R.regType = #{regType,jdbcType=CHAR} </if>
		<if test="regAdminNo != null"> AND R.regAdminNo = #{regAdminNo,jdbcType=INTEGER} </if>
		<if test="greenPointAccStatus != null"> AND R.greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=INTEGER} </if>
		<if test="redPointAccStatus != null"> AND R.redPointAccStatus =
			#{redPointAccStatus,jdbcType=INTEGER} </if>
		<if test="greenPointUseStatus != null"> AND R.greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=INTEGER} </if>
		<if test="redPointUseStatus != null"> AND R.redPointUseStatus =
			#{redPointUseStatus,jdbcType=INTEGER} </if>

		<if
			test="recommenderCode != null or recommenderName != null or recommenderAddress != null or recommenderPhone != null or recommenderEmail != null or recommenderPhone != null">
			AND ( 1 = 2
		</if>

		<if test="recommenderName != null"> OR R.recommenderName LIKE
			CONCAT('%',#{recommenderName},'%') </if>
		<if test="recommenderAddress != null"> OR R.recommenderAddress LIKE
			CONCAT('%',#{recommenderAddress},'%') </if>

		<if test="recommenderTel != null"> OR R.recommenderTel LIKE
			CONCAT('%',#{recommenderTel},'%') </if>
		<if test="recommenderPhone != null"> OR R.recommenderPhone LIKE
			CONCAT('%',#{recommenderPhone},'%') </if>
		<if test="recommenderEmail != null"> OR R.recommenderEmail LIKE
			CONCAT('%',#{recommenderEmail},'%')  </if>
		<if
			test="recommenderCode != null or recommenderName != null or recommenderAddress != null or recommenderPhone != null or recommenderEmail != null or recommenderPhone != null">
			)
		</if>
	</sql>

	<sql id="recommenderCommand2_WhereStatement">
		<if test="recommenderNo != null"> AND recommenderNo = #{recommenderNo,jdbcType=INTEGER}
		</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="saleManagerNo != null"> AND saleManagerNo = #{saleManagerNo,jdbcType=INTEGER}
		</if>
		<if
			test="recommenderStatus != null and recommenderStatus !=  '0'  and recommenderStatus !=  0"> AND recommenderStatus = #{recommenderStatus,jdbcType=VARCHAR}
		</if>
		<if test="regType != null"> AND regType = #{regType,jdbcType=CHAR} </if>
		<if test="regAdminNo != null"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER} </if>
		<if test="greenPointAccStatus != null"> AND greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=INTEGER} </if>
		<if test="redPointAccStatus != null"> AND redPointAccStatus =
			#{redPointAccStatus,jdbcType=INTEGER} </if>
		<if test="greenPointUseStatus != null"> AND greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=INTEGER} </if>
		<if test="redPointUseStatus != null"> AND redPointUseStatus =
			#{redPointUseStatus,jdbcType=INTEGER} </if>

		<if
			test="recommenderCode != null or recommenderName != null or recommenderAddress != null or recommenderPhone != null or recommenderEmail != null or recommenderPhone != null">
			AND ( 1 = 2
		</if>

		<if test="recommenderName != null"> OR R.recommenderName LIKE
			CONCAT('%',#{recommenderName},'%') </if>
		<if test="recommenderAddress != null"> OR R.recommenderAddress LIKE
			CONCAT('%',#{recommenderAddress},'%') </if>

		<if test="recommenderTel != null"> OR R.recommenderTel LIKE
			CONCAT('%',#{recommenderTel},'%') </if>
		<if test="recommenderPhone != null"> OR R.recommenderPhone LIKE
			CONCAT('%',#{recommenderPhone},'%') </if>
		<if test="recommenderEmail != null"> OR R.recommenderEmail LIKE
			CONCAT('%',#{recommenderEmail},'%')  </if>
		<if
			test="recommenderCode != null or recommenderName != null or recommenderAddress != null or recommenderPhone != null or recommenderEmail != null or recommenderPhone != null">
			)
		</if>
	</sql>

	<select id="findRecommenderCommands"
		parameterType="com.returnp.admin.model.Recommender"
		resultMap="RecommenderCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="RecommenderCommand_Column_List" />
		from recommender as R
		left outer join membership_request as MQ on (R.recommenderNo =
		MQ.recommenderNo)
		where
		1 = 1
		<include refid="recommenderCommand_WhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="findRecommenders"
		parameterType="com.returnp.admin.model.Recommender"
		resultMap="RecommenderResultMap">
		select
		sql_calc_found_rows
		<include refid="Recommender_Column_List" />
		from recommender
		where
		1 = 1
		<include refid="recommender_WhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="findRecommenderCommand2s"
		parameterType="com.returnp.admin.dto.command.RecommenderCommand2"
		resultMap="RecommenderCommand2ResultMap">
		select
		sql_calc_found_rows
		<include refid="RecommenderCommand2_Column_List" />
		from member as M
		inner join recommender as R on (M.memberNo = R.memberNo)
		inner join red_point as RP on (M.memberNo = RP.memberNo)
		inner join green_point as GP on (M.memberNo = GP.memberNo AND GP.nodeType
		='2' )
		where
		1 = 1
		<include refid="recommenderCommand2_WhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- MembershipRequest find Mapper -->

	<resultMap id="default_membershipRequestResultMap"
		type="com.returnp.admin.model.MembershipRequest">
		<id column="membershipRequestNo" jdbcType="INTEGER"
			property="membershipRequestNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="companyBankAccountNo" jdbcType="INTEGER"
			property="companyBankAccountNo" />
		<result column="paymentAmount" jdbcType="INTEGER"
			property="paymentAmount" />
		<result column="depositor" jdbcType="VARCHAR"
			property="depositor" />
		<result column="paymentStatus" jdbcType="CHAR"
			property="paymentStatus" />
		<result column="gradeType" jdbcType="VARCHAR"
			property="gradeType" />
		<result column="paymentType" jdbcType="VARCHAR"
			property="paymentType" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
	</resultMap>

	<resultMap id="membershipRequestCommand_ResultMap"
		type="com.returnp.admin.dto.command.MembershipRequestCommand">
		<id column="membershipRequestNo" jdbcType="INTEGER"
			property="membershipRequestNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="paymentAmount" jdbcType="INTEGER"
			property="paymentAmount" />
		<result column="paymentStatus" jdbcType="CHAR"
			property="paymentStatus" />
		<result column="gradeType" jdbcType="VARCHAR"
			property="gradeType" />
		<result column="depositor" jdbcType="VARCHAR"
			property="depositor" />
		<result column="paymentType" jdbcType="VARCHAR"
			property="paymentType" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="companyBankAccountNo" jdbcType="INTEGER"
			property="companyBankAccountNo" />
		<result column="bankName" jdbcType="VARCHAR"
			property="bankName" />
		<result column="bankAccount" jdbcType="VARCHAR"
			property="bankAccount" />
		<result column="bankOwnerName" jdbcType="VARCHAR"
			property="bankOwnerName" />
	</resultMap>

	<sql id="membershipRequestCommand_Column_List">
		MQ.membershipRequestNo as membershipRequestNo,
		MQ.memberNo as memberNo,
		MQ.paymentAmount as paymentAmount,
		MQ.paymentStatus as paymentStatus ,
		MQ.depositor as depositor,
		MQ.gradeType as gradeType,
		MQ.paymentType as paymentType,
		MQ.regType as regType,
		MQ.regAdminNo as regAdminNo,
		MQ.updateTime as updateTime,
		MQ.createTime as createTime,
		M.memberEmail as memberEmail,
		M.memberName as memberName,
		CBA.companyBankAccountNo as companyBankAccountNo,
		CBA.bankName as bankName,
		CBA.bankAccount as bankAccount,
		CBA.bankOwnerName as bankOwnerName
	</sql>

	<sql id="default_membershipRequest_Column_List">
		membershipRequestNo as membershipRequestNo,
		companyBankAccountNo as companyBankAccountNo,
		memberNo as memberNo,
		paymentAmount as paymentAmount,
		paymentStatus as paymentStatus ,
		depositor as depositor,
		gradeType as gradeType,
		paymentType as paymentType,
		regType as regType,
		regAdminNo as regAdminNo,
		updateTime as updateTime,
		createTime as createTime
	</sql>

	<sql id="default_membershipRequestSearchWhereStatement">
		<if test="membershipRequestNo != null"> AND membershipRequestNo =
			#{membershipRequestNo,jdbcType=INTEGER} </if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="companyBankAccountNo != null"> AND companyBankAccountNo =
			#{companyBankAccountNo,jdbcType=INTEGER} </if>
		<if test="paymentAmount != null"> AND paymentAmount = #{paymentAmount,jdbcType=INTEGER}
		</if>
		<if test="depositor != null"> AND depositor = #{depositor,jdbcType=CHAR}  </if>
		<if
			test="paymentStatus != null and paymentStatus != '0'  and paymentStatus != 0 "> AND paymentStatus = #{paymentStatus,jdbcType=CHAR}  </if>
		<if
			test="gradeType != null and gradeType !=  '0'  and gradeType !=  0  "> AND gradeType = #{gradeType,jdbcType=VARCHAR}  </if>
		<if
			test="paymentType != null and paymentType != '0'  and paymentType != 0 "> AND paymentType = #{paymentType,jdbcType=VARCHAR}  </if>
		<if test="regType != null"> AND regType = #{regType,jdbcType=CHAR}  </if>
		<if test="regAdminNo != null"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER}  </if>
	</sql>


	<sql id="membershipRequestCommand_WhereStatement">
		<if test="membershipRequestNo != null"> AND membershipRequestNo =
			#{membershipRequestNo,jdbcType=INTEGER} </if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="paymentAmount != null"> AND paymentAmount = #{paymentAmount,jdbcType=INTEGER}
		</if>
		<if test="depositor != null"> AND depositor = #{depositor,jdbcType=CHAR}  </if>
		<if
			test="paymentStatus != null and paymentStatus != '0'  and paymentStatus != 0 "> AND paymentStatus = #{paymentStatus,jdbcType=CHAR}  </if>
		<if
			test="gradeType != null and gradeType !=  '0'  and gradeType !=  0  "> AND gradeType = #{gradeType,jdbcType=VARCHAR}  </if>
		<if
			test="paymentType != null and paymentType != '0'  and paymentType != 0 "> AND paymentType = #{paymentType,jdbcType=VARCHAR}  </if>
		<if test="regType != null"> AND regType = #{regType,jdbcType=CHAR}  </if>
		<if test="regAdminNo != null"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER}  </if>
		<if test="memberName != null or memberEmail != null ">
			AND ( 1 = 2
		</if>
		<if test="memberName != null"> OR M.memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null"> OR M.memberEmail LIKE CONCAT('%',#{memberEmail},'%') </if>
		<if test="memberName != null or memberEmail != null ">
			)
		</if>
	</sql>

	<select id="findMembershipRequest"
		parameterType="com.returnp.admin.model.MembershipRequest"
		resultMap="default_membershipRequestResultMap">
		select
		<include refid="default_membershipRequest_Column_List" />
		from membership_request
		where
		1 = 1
		<include refid="default_membershipRequestSearchWhereStatement" />
	</select>

	<select id="findMembershipRequests"
		parameterType="com.returnp.admin.dto.request.SearchCondition"
		resultMap="membershipRequestCommand_ResultMap">
		select
		<include refid="membershipRequestCommand_Column_List" />
		from membership_request as MQ
		inner join company_bank_account as CBA on (MQ.companyBankAccountNo =
		CBA.companyBankAccountNo)
		inner join member as M on (MQ.memberNo = M.memberNo)
		where
		1 = 1
		<include refid="membershipRequestCommand_WhereStatement" />
	</select>


	<select id="findMembershipRequestCommands"
		parameterType="com.returnp.admin.dto.command.MembershipRequestCommand"
		resultMap="membershipRequestCommand_ResultMap">
		select
		<include refid="membershipRequestCommand_Column_List" />
		from membership_request as MQ
		inner join company_bank_account as CBA on (MQ.companyBankAccountNo =
		CBA.companyBankAccountNo)
		inner join member as M on (MQ.memberNo = M.memberNo)
		where
		1 = 1
		<include refid="membershipRequestCommand_WhereStatement" />
	</select>

	<select id="findMembershipRequestCommand"
		parameterType="com.returnp.admin.dto.command.MembershipRequestCommand"
		resultMap="membershipRequestCommand_ResultMap">
		select
		<include refid="membershipRequestCommand_Column_List" />
		from membership_request as MQ
		inner join company_bank_account as CBA on (MQ.companyBankAccountNo =
		CBA.companyBankAccountNo)
		inner join member as M on (MQ.memberNo = M.memberNo)
		where
		1 = 1
		<include refid="membershipRequestCommand_WhereStatement" />
	</select>



	<!-- =============================================================================================================== -->
	<!-- CompanyBancAccount find Mapper -->

	<resultMap id="BankResultMap"
		type="com.returnp.admin.model.CompanyBankAccount">
		<id column="companyBankAccountNo" jdbcType="INTEGER"
			property="companyBankAccountNo" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="bankName" jdbcType="VARCHAR"
			property="bankName" />
		<result column="bankOwnerName" jdbcType="VARCHAR"
			property="bankOwnerName" />
		<result column="bankAccount" jdbcType="VARCHAR"
			property="bankAccount" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="Bank_Column_List">
		companyBankAccountNo, regAdminNo, bankName, bankOwnerName, bankAccount, createTime,
		updateTime
	</sql>

	<select id="findCompanyBanks"
		parameterType="com.returnp.admin.model.CompanyBankAccount"
		resultMap="BankResultMap">
		select
		<include refid="Bank_Column_List" />
		from company_bank_account
		where
		1 = 1
	</select>

	<!-- =============================================================================================================== -->
	<!-- PaymentTransaction find Mapper -->

	<resultMap id="PaymentTransaction_ResultMap"
		type="com.returnp.admin.model.PaymentTransaction">
		<id column="paymentTransactionNo" jdbcType="INTEGER"
			property="paymentTransactionNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="nodeType" jdbcType="VARCHAR"
			property="nodeType" />
		<result column="nodeNo" jdbcType="INTEGER" property="nodeNo" />
		<result column="nodeEmail" jdbcType="VARCHAR"
			property="nodeEmail" />
		<result column="nodeName" jdbcType="VARCHAR"
			property="nodeName" />
		<result column="nodePhone" jdbcType="VARCHAR"
			property="nodePhone" />
		<result column="affiliateNo" jdbcType="INTEGER"
			property="affiliateNo" />
		<result column="affiliateSerial" jdbcType="VARCHAR"
			property="affiliateSerial" />
		<result column="paymentApprovalAmount" jdbcType="INTEGER"
			property="paymentApprovalAmount" />
		<result column="paymentApprovalNumber" jdbcType="VARCHAR"
			property="paymentApprovalNumber" />
		<result column="paymentApprovalStatus" jdbcType="CHAR"
			property="paymentApprovalStatus" />
		<result column="pointBackStatus" jdbcType="VARCHAR"
			property="pointBackStatus" />
		<result column="paymentTransactionType" jdbcType="VARCHAR"
			property="paymentTransactionType" />
		<result column="paymentApprovalDateTime" jdbcType="TIMESTAMP"
			property="paymentApprovalDateTime" />
		<result column="orgPaymentData" jdbcType="VARCHAR"
			property="orgPaymentData" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="PaymentTransactionCommand_ResultMap"
		type="com.returnp.admin.dto.command.PaymentTransactionCommand">
		<id column="paymentTransactionNo" jdbcType="INTEGER"
			property="paymentTransactionNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="nodeType" jdbcType="VARCHAR"
			property="nodeType" />
		<result column="nodeNo" jdbcType="INTEGER" property="nodeNo" />
		<result column="nodeEmail" jdbcType="VARCHAR"
			property="nodeEmail" />
		<result column="nodeName" jdbcType="VARCHAR"
			property="nodeName" />
		<result column="nodePhone" jdbcType="VARCHAR"
			property="nodePhone" />
		<result column="affiliateNo" jdbcType="INTEGER"
			property="affiliateNo" />
		<result column="affiliateSerial" jdbcType="VARCHAR"
			property="affiliateSerial" />
		<result column="affiliateName" jdbcType="VARCHAR"
			property="affiliateName" />

		<result column="paymentApprovalAmount" jdbcType="INTEGER"
			property="paymentApprovalAmount" />
		<result column="paymentApprovalNumber" jdbcType="VARCHAR"
			property="paymentApprovalNumber" />
		<result column="paymentApprovalStatus" jdbcType="CHAR"
			property="paymentApprovalStatus" />

		<result column="pointBackStatus" jdbcType="VARCHAR"
			property="pointBackStatus" />
		<result column="paymentTransactionType" jdbcType="VARCHAR"
			property="paymentTransactionType" />
		<result column="paymentApprovalDateTime" jdbcType="TIMESTAMP"
			property="paymentApprovalDateTime" />
		<result column="orgPaymentData" jdbcType="VARCHAR"
			property="orgPaymentData" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />

		<result column="paymentRouterNo" jdbcType="INTEGER"
			property="paymentRouterNo" />
		<result column="paymentRouterType" jdbcType="VARCHAR"
			property="paymentRouterType" />
		<result column="paymentRouterName" jdbcType="VARCHAR"
			property="paymentRouterName" />
		<result column="paymentRouterCode" jdbcType="VARCHAR"
			property="paymentRouterCode" />

	</resultMap>

	<sql id="PaymentTransaction_Column_List">
		paymentTransactionNo, memberNo, memberName, memberPhone, memberEmail, nodeType, nodeNo,
		nodeEmail, nodeName, nodePhone, affiliateNo, affiliateSerial,
		paymentApprovalAmount,
		paymentApprovalNumber, paymentApprovalStatus, pointBackStatus, paymentTransactionType,
		paymentApprovalDateTime, orgPaymentData, regAdminNo, createTime,
		updateTime
	</sql>

	<sql id="PaymentTransactionCommand_Column_List">
		PA.paymentTransactionNo,
		PA.memberNo,
		PA.memberName,
		PA.memberPhone,
		PA.memberEmail,
		PA.nodeType,
		PA.nodeNo,
		PA.nodeEmail,
		PA.nodeName,
		PA.nodePhone,
		PA.affiliateNo,
		PA.affiliateSerial,
		AF.affiliateName,
		PA.paymentApprovalAmount,
		PA.paymentApprovalNumber,
		PA.paymentApprovalStatus,
		PA.pointBackStatus,
		PA.paymentTransactionType,
		PA.paymentApprovalDateTime,
		PA.orgPaymentData,
		PA.regAdminNo,
		PA.createTime,
		PA.updateTime,
		PTR.paymentRouterNo,
		(SELECT paymentRouterType from payment_router WHERE paymentRouterNo =
		PTR.paymentRouterNo) as paymentRouterType,
		(SELECT paymentRouterName from payment_router WHERE paymentRouterNo =
		PTR.paymentRouterNo) as paymentRouterName,
		(SELECT paymentRouterCode from payment_router WHERE paymentRouterNo =
		PTR.paymentRouterNo) as paymentRouterCode
	</sql>


	<sql id="PaymentTransaction_Where">
		<if test="paymentTransactionNo != null"> AND paymentTransactionNo =
			#{paymentTransactionNo,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="affiliateNo != null"> AND affiliateNo = #{affiliateNo,jdbcType=INTEGER}  </if>
		<if test="paymentApprovalAmount != null"> AND paymentApprovalAmount =
			#{paymentApprovalAmount,jdbcType=INTEGER} </if>
		<if test="paymentApprovalNumber != null"> AND paymentApprovalNumber =
			#{paymentApprovalNumber,jdbcType=INTEGER} </if>
		<if test="pointBackStatus != null"> AND pointBackStatus = #{pointBackStatus,jdbcType=INTEGER}
		</if>
		<if test="paymentApprovalStatus != null"> AND paymentApprovalStatus =
			#{paymentApprovalStatus,jdbcType=CHAR} </if>
		<if test="paymentTransactionType != null"> AND paymentTransactionType =
			#{paymentTransactionType,jdbcType=VARCHAR} </if>
		<if test="affiliateSerial != null"> AND affiliateSerial = #{affiliateSerial,jdbcType=VARCHAR}
		</if>
		<if test="paymentApprovalDateTime != null"> AND paymentApprovalDateTime =
			#{paymentApprovalDateTime,jdbcType=TIMESTAMP} </if>
		<if test="regAdminNo != null"> AND regAdminNo = #{regAdminNo,jdbcType=INTEGER} </if>
		<if test="paymentRouterType != null">
			AND (SELECT paymentRouterType from payment_router WHERE paymentRouterNo
			= PTR.paymentRouterNo) = #{paymentRouterType,jdbcType=VARCHAR}
		</if>
		<if test="paymentRouterName != null">
			AND (SELECT paymentRouterName from payment_router WHERE paymentRouterNo
			= PTR.paymentRouterNo) = #{paymentRouterName,jdbcType=VARCHAR}
		</if>
		<if test="paymentRouterCode != null">
			AND (SELECT paymentRouterCode from payment_router WHERE paymentRouterNo
			= PTR.paymentRouterNo) = #{paymentRouterCode,jdbcType=VARCHAR}
		</if>

		<if
			test="memberName != null or memberEmail != null  or memberPhone != null ">
			AND ( 1 = 2
		</if>
		<if test="memberName != null"> OR memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null"> OR memberEmail LIKE CONCAT('%',#{memberEmail},'%') </if>
		<if test="memberPhone != null"> OR memberPhone LIKE CONCAT('%',#{memberPhone},'%') </if>
		<if
			test="memberName != null or memberEmail != null  or memberPhone != null ">
			)
		</if>
	</sql>

	<sql id="PaymentTransactionCommand_Where">
		<if test="paymentTransactionNo != null"> AND PA.paymentTransactionNo =
			#{paymentTransactionNo,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND PA.memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="affiliateNo != null"> AND PA.affiliateNo = #{affiliateNo,jdbcType=INTEGER}  </if>
		<if test="paymentApprovalAmount != null"> AND PA.paymentApprovalAmount =
			#{paymentApprovalAmount,jdbcType=INTEGER} </if>
		<if test="paymentApprovalNumber != null"> AND PA.paymentApprovalNumber =
			#{paymentApprovalNumber,jdbcType=INTEGER} </if>
		<if test="pointBackStatus != null"> AND PA.pointBackStatus =
			#{pointBackStatus,jdbcType=INTEGER} </if>
		<if test="paymentApprovalStatus != null"> AND PA.paymentApprovalStatus =
			#{paymentApprovalStatus,jdbcType=CHAR} </if>
		<if test="paymentTransactionType != null"> AND PA.paymentTransactionType =
			#{paymentTransactionType,jdbcType=VARCHAR} </if>
		<if test="affiliateSerial != null"> AND PA.affiliateSerial =
			#{affiliateSerial,jdbcType=VARCHAR} </if>
		<if test="paymentApprovalDateTime != null"> AND PA.paymentApprovalDateTime =
			#{paymentApprovalDateTime,jdbcType=TIMESTAMP} </if>
		<if test="regAdminNo != null"> AND PA.regAdminNo = #{regAdminNo,jdbcType=INTEGER} </if>

		<if test="paymentRouterType != null"> AND paymentRouterType =
			#{paymentRouterType,jdbcType=VARCHAR} </if>
		<if test="paymentRouterName != null"> AND paymentRouterName =
			#{paymentRouterName,jdbcType=VARCHAR} </if>
		<if test="paymentRouterCode != null"> AND paymentRouterCode =
			#{paymentRouterCode,jdbcType=VARCHAR} </if>

		<if
			test="memberName != null or memberEmail != null  or memberPhone != null || affiliateName != null">
			AND ( 1 = 2
		</if>
		<if test="memberName != null"> OR PA.memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null"> OR PA.memberEmail LIKE CONCAT('%',#{memberEmail},'%')
		</if>
		<if test="memberPhone != null"> OR PA.memberPhone LIKE CONCAT('%',#{memberPhone},'%')
		</if>
		<if test="affiliateName != null"> OR AF.affiliateName LIKE CONCAT('%',#{affiliateName},'%')
		</if>
		<if
			test="memberName != null or memberEmail != null  or memberPhone != null  || affiliateName != null">
			)
		</if>
	</sql>

	<select id="findPaymentTransactions"
		parameterType="com.returnp.admin.model.PaymentTransaction"
		resultMap="PaymentTransaction_ResultMap">
		select
		<include refid="PaymentTransaction_Column_List" />
		from payment_transaction
		where
		1 = 1
		<include refid="PaymentTransaction_Where" />
		<include refid="commonStatement" />
	</select>

	<select id="findPaymentTransactionCommands"
		parameterType="com.returnp.admin.dto.command.PaymentTransactionCommand"
		resultMap="PaymentTransactionCommand_ResultMap">
		select
		sql_calc_found_rows
		<include refid="PaymentTransactionCommand_Column_List" />
		from payment_transaction as PA
		inner join affiliate as AF on (PA.affiliateNo= AF.affiliateNo)
		inner join payment_transaction_router as PTR on (PA.paymentTransactionNo =
		PTR.paymentTransactionNo)
		where
		1 = 1
		<include refid="PaymentTransactionCommand_Where" />
		<include refid="commonStatement" />
	</select>


	<!-- =============================================================================================================== -->
	<!-- GreenPointCommand find Mapper -->

	<resultMap id="GreenPoint_ResultMap"
		type="com.returnp.admin.model.GreenPoint">
		<id column="greenPointNo" jdbcType="INTEGER"
			property="greenPointNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="nodeNo" jdbcType="INTEGER" property="nodeNo" />
		<result column="pointAmount" jdbcType="REAL"
			property="pointAmount" />
		<result column="nodeType" jdbcType="VARCHAR"
			property="nodeType" />
		<result column="nodeTypeName" jdbcType="VARCHAR"
			property="nodeTypeName" />
		<result column="greenPointCreateTime" jdbcType="TIMESTAMP"
			property="greenPointCreateTime" />
		<result column="greenPointUpdateTime" jdbcType="TIMESTAMP"
			property="greenPointUpdateTime" />
	</resultMap>

	<resultMap id="GreenPointCommand_ResultMap"
		type="com.returnp.admin.dto.command.GreenPointCommand">
		<id column="memberNo" jdbcType="INTEGER" property="memberNo" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberPassword" jdbcType="VARCHAR"
			property="memberPassword" />
		<result column="memberPassword2" jdbcType="VARCHAR"
			property="memberPassword2" />
		<result column="memberType" jdbcType="VARCHAR"
			property="memberType" />
		<result column="memberStatus" jdbcType="VARCHAR"
			property="memberStatus" />
		<result column="memberAuthType" jdbcType="VARCHAR"
			property="memberAuthType" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
		<result column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="joinRoute" jdbcType="VARCHAR"
			property="joinRoute" />
		<result column="statusReason" jdbcType="VARCHAR"
			property="statusReason" />
		<result column="isRecommender" jdbcType="CHAR"
			property="isRecommender" />
		<result column="isSaleManager" jdbcType="CHAR"
			property="isSaleManager" />
		<result column="isBranch" jdbcType="CHAR" property="isBranch" />
		<result column="isAffiliate" jdbcType="CHAR"
			property="isAffiliate" />
		<result column="isAgency" jdbcType="CHAR" property="isAgency" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />

		<result column="greenPointNo" jdbcType="INTEGER"
			property="greenPointNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="nodeNo" jdbcType="INTEGER" property="nodeNo" />
		<result column="pointAmount" jdbcType="REAL"
			property="pointAmount" />
		<result column="nodeType" jdbcType="VARCHAR"
			property="nodeType" />
		<result column="nodeTypeName" jdbcType="VARCHAR"
			property="nodeTypeName" />
		<result column="greenPointCreateTime" jdbcType="TIMESTAMP"
			property="greenPointCreateTime" />
		<result column="greenPointUpdateTime" jdbcType="TIMESTAMP"
			property="greenPointUpdateTime" />
	</resultMap>

	<sql id="GreenPoint_Column_List">
		greenPointNo, memberNo, nodeNo, pointAmount, nodeType, nodeTypeName,
		greenPointCreateTime, greenPointUpdateTime
	</sql>

	<sql id="GreenPointCommand_ResultMap_Column_List">
		M.memberNo AS memberNo,
		M.memberName AS memberName,
		M.memberEmail AS memberEmail,
		M.memberPassword AS memberPassword,
		M.memberPassword2 AS memberPassword2,
		M.memberType AS memberType,
		M.memberStatus AS memberStatus,
		M.memberAuthType AS memberAuthType,
		M.memberPhone AS memberPhone,
		M.recommenderNo AS recommenderNo,
		M.joinRoute AS joinRoute,
		M.statusReason AS statusReason,
		M.isRecommender AS isRecommender,
		M.isSaleManager AS isSaleManager,
		M.isBranch AS isBranch,
		M.isAffiliate AS isAffiliate,
		M.isAgency AS isAgency,
		M.regType AS regType,
		M.regAdminNo AS regAdminNo,
		M.greenPointAccStatus AS greenPointAccStatus,
		M.redPointAccStatus AS redPointAccStatus,
		M.greenPointUseStatus AS greenPointUseStatus,
		M.redPointUseStatus AS redPointUseStatus,
		M.createTime AS createTime,
		M.updateTime AS updateTime,

		GP.greenPointNo as greenPointNo,
		GP.memberNo as memberNo,
		GP.nodeNo as nodeNo,
		GP.pointAmount as pointAmount,
		GP.nodeType as nodeType,
		GP.nodeTypeName as nodeTypeName,
		GP.greenPointCreateTime as greenPointCreateTime,
		GP.greenPointUpdateTime as greenPointUpdateTime

	</sql>

	<sql id="GreenPoint_Where">
		<if
			test="greenPointNo != null and greenPointNo !=  '0'  and greenPointNo !=  0">AND greenPointNo = #{greenPointNo,jdbcType=VARCHAR}</if>
		<if
			test="memberNo != null and memberNo !=  '0'  and memberNo !=  0">AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if
			test="nodeType != null and nodeType !=  '0'  and nodeType !=  0">AND nodeType = #{nodeType,jdbcType=VARCHAR}</if>
		<if test="nodeNo != null and nodeNo !=  '0'  and nodeNo !=  0">AND nodeNo = #{nodeNo,jdbcType=VARCHAR}</if>
	</sql>

	<sql id="GreenPointCommand_Where">
		<if
			test="memberNo != null and memberNo !=  '0'  and memberNo !=  0">AND M.memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="memberType != null">AND M.memberType = #{memberType,jdbcType=VARCHAR}</if>
		<if
			test="memberStatus != null and memberStatus !=  '0'  and memberStatus !=  0">AND M.memberStatus = #{memberStatus,jdbcType=VARCHAR}</if>
		<if test="memberAuthType != null">AND M.memberAuthType = #{memberAuthType,jdbcType=VARCHAR}
		</if>
		<if test="recommenderNo != null">AND M.recommenderNo = #{recommenderNo,jdbcType=INTEGER}
		</if>
		<if test="joinRoute != null">AND M.joinRoute = #{joinRoute,jdbcType=VARCHAR}</if>
		<if test="isRecommender != null">AND M.isRecommender = #{isRecommender,jdbcType=CHAR}</if>
		<if test="isSaleManager != null"> M.isSaleManager = #{isSaleManager,jdbcType=CHAR}</if>
		<if test="isBranch != null">AND M.isBranch = #{isBranch,jdbcType=CHAR}</if>
		<if test="isAffiliate != null">AND M.isAffiliate = #{isAffiliate,jdbcType=CHAR}</if>
		<if test="isAgency != null">AND M.isAgency = #{isAgency,jdbcType=CHAR}</if>
		<if test="regType != null">AND M.regType = #{regType,jdbcType=CHAR}</if>
		<if test="regAdminNo != null">AND M.regAdminNo = #{regAdminNo,jdbcType=INTEGER}</if>
		<if test="greenPointAccStatus != null">AND M.greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=CHAR}</if>
		<if test="redPointAccStatus != null">AND M.redPointAccStatus =
			#{redPointAccStatus,jdbcType=CHAR}</if>
		<if test="greenPointUseStatus != null">AND M.greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=CHAR}</if>
		<if test="redPointUseStatus != null">AND M.redPointUseStatus =
			#{redPointUseStatus,jdbcType=CHAR}</if>
		<if test="redPointUseStatus != null">AND M.redPointUseStatus =
			#{redPointUseStatus,jdbcType=CHAR}</if>

		<if
			test="greenPointNo != null and greenPointNo !=  '0'  and greenPointNo !=  0">AND GP.greenPointNo = #{greenPointNo,jdbcType=VARCHAR}</if>
		<if
			test="nodeType != null and nodeType !=  '0'  and nodeType !=  0">AND GP.nodeType = #{nodeType,jdbcType=VARCHAR}</if>
		<if test="nodeNo != null and nodeNo !=  '0'  and nodeNo !=  0">AND GP.nodeNo = #{nodeNo,jdbcType=VARCHAR}</if>

		<if
			test="memberName != null or memberEmail != null or memberPhone != null or statusReason != null">
			AND ( 1 = 2
		</if>
		<if test="memberName != null">OR M.memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null">OR M.memberEmail LIKE CONCAT('%',#{memberEmail},'%' ) </if>
		<if test="memberPhone != null">OR M.memberPhone LIKE CONCAT('%',#{memberPhone},'%') </if>
		<if test="statusReason != null">OR M.statusReason = #{statusReason,jdbcType=VARCHAR}</if>
		<if
			test="memberName != null or memberEmail != null or memberPhone != null or statusReason != null">
			)
		</if>
	</sql>

	<select id="findGreenPoints"
		parameterType="com.returnp.admin.model.GreenPoint"
		resultMap="GreenPoint_ResultMap">
		select
		<include refid="GreenPoint_Column_List" />
		from green_point
		where
		1 = 1
		<include refid="GreenPoint_Where" />
	</select>

	<select id="findGreenPointCommands"
		parameterType="com.returnp.admin.dto.command.GreenPointCommand"
		resultMap="GreenPointCommand_ResultMap">
		select
		sql_calc_found_rows
		<include refid="GreenPointCommand_ResultMap_Column_List" />
		from green_point as GP
		inner join member as M on (
		GP.memberNo = M.memberNo
		)
		where
		1 = 1
		<if test="searchPointMin != null and searchPointMax != null">
			and (pointAmount 	<![CDATA[ >=]]>
			#{searchPointMin} and pointAmount <![CDATA[ <=]]>
			#{searchPointMax})
		</if>
		<if test="searchPointMin != null and searchPointMax == null">
			and (pointAmount 	<![CDATA[ >=]]>
			#{searchPointMin})
		</if>

		<if test="searchPointMin == null and searchPointMax != null">
			and (pointAmount 	<![CDATA[ <=]]>
			#{searchPointMax})
		</if>
		<include refid="GreenPointCommand_Where" />
		<include refid="commonStatement" />
	</select>




	<!-- =============================================================================================================== -->
	<!-- RedPointCommand find Mapper -->

	<resultMap id="RedPointCommand_ResultMap"
		type="com.returnp.admin.dto.command.RedPointCommand">
		<id column="memberNo" jdbcType="INTEGER" property="memberNo" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberPassword" jdbcType="VARCHAR"
			property="memberPassword" />
		<result column="memberPassword2" jdbcType="VARCHAR"
			property="memberPassword2" />
		<result column="memberType" jdbcType="VARCHAR"
			property="memberType" />
		<result column="memberStatus" jdbcType="VARCHAR"
			property="memberStatus" />
		<result column="memberAuthType" jdbcType="VARCHAR"
			property="memberAuthType" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
		<result column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="joinRoute" jdbcType="VARCHAR"
			property="joinRoute" />
		<result column="statusReason" jdbcType="VARCHAR"
			property="statusReason" />
		<result column="isRecommender" jdbcType="CHAR"
			property="isRecommender" />
		<result column="isSaleManager" jdbcType="CHAR"
			property="isSaleManager" />
		<result column="isBranch" jdbcType="CHAR" property="isBranch" />
		<result column="isAffiliate" jdbcType="CHAR"
			property="isAffiliate" />
		<result column="isAgency" jdbcType="CHAR" property="isAgency" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />

		<result column="redPointNo" jdbcType="INTEGER"
			property="redPointNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="pointAmount" jdbcType="REAL"
			property="pointAmount" />
		<result column="redPointCreateTime" jdbcType="TIMESTAMP"
			property="redPointCreateTime" />
		<result column="redPointUpdateTime" jdbcType="TIMESTAMP"
			property="redPointUpdateTime" />
	</resultMap>

	<resultMap id="RedPoint_ResultMap"
		type="com.returnp.admin.model.RedPoint">
		<id column="redPointNo" jdbcType="INTEGER" property="redPointNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="pointAmount" jdbcType="REAL"
			property="pointAmount" />
		<result column="redPointCreateTime" jdbcType="TIMESTAMP"
			property="redPointCreateTime" />
		<result column="redPointUpdateTime" jdbcType="TIMESTAMP"
			property="redPointUpdateTime" />
	</resultMap>

	<sql id="RedPoint_Column_List">
		redPointNo, memberNo, pointAmount, redPointCreateTime, redPointUpdateTime
	</sql>

	<sql id="RedPointCommand_Column_List">
		M.memberNo AS memberNo,
		M.memberName AS memberName,
		M.memberEmail AS memberEmail,
		M.memberPassword AS memberPassword,
		M.memberPassword2 AS memberPassword2,
		M.memberType AS memberType,
		M.memberStatus AS memberStatus,
		M.memberAuthType AS memberAuthType,
		M.memberPhone AS memberPhone,
		M.recommenderNo AS recommenderNo,
		M.joinRoute AS joinRoute,
		M.statusReason AS statusReason,
		M.isRecommender AS isRecommender,
		M.isSaleManager AS isSaleManager,
		M.isBranch AS isBranch,
		M.isAffiliate AS isAffiliate,
		M.isAgency AS isAgency,
		M.regType AS regType,
		M.regAdminNo AS regAdminNo,
		M.greenPointAccStatus AS greenPointAccStatus,
		M.redPointAccStatus AS redPointAccStatus,
		M.greenPointUseStatus AS greenPointUseStatus,
		M.redPointUseStatus AS redPointUseStatus,
		M.createTime AS createTime,
		M.updateTime AS updateTime,

		RP.redPointNo as redPointNo,
		RP.memberNo as memberNo,
		RP.pointAmount as pointAmount,
		RP.redPointCreateTime as redPointCreateTime,
		RP.redPointUpdateTime as redPointUpdateTime

	</sql>

	<sql id="RedPoint_Where">
		<if
			test="memberNo != null and memberNo !=  '0'  and memberNo !=  0">AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if
			test="redPointNo != null and redPointNo !=  '0'  and redPointNo !=  0">AND redPointNo = #{redPointNo,jdbcType=VARCHAR}</if>
	</sql>

	<sql id="RedPointCommand_Where">
		<if test="memberNo != null">AND M.memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="memberType != null">AND memberType = #{memberType,jdbcType=VARCHAR}</if>
		<if
			test="memberStatus != null and memberStatus !=  '0'  and memberStatus !=  0">AND memberStatus = #{memberStatus,jdbcType=VARCHAR}</if>
		<if test="memberAuthType != null">AND memberAuthType = #{memberAuthType,jdbcType=VARCHAR}
		</if>
		<if test="recommenderNo != null">AND recommenderNo = #{recommenderNo,jdbcType=INTEGER}</if>
		<if test="joinRoute != null">AND joinRoute = #{joinRoute,jdbcType=VARCHAR}</if>
		<if test="isRecommender != null">AND isRecommender = #{isRecommender,jdbcType=CHAR}</if>
		<if test="isSaleManager != null"> isSaleManager = #{isSaleManager,jdbcType=CHAR}</if>
		<if test="isBranch != null">AND isBranch = #{isBranch,jdbcType=CHAR}</if>
		<if test="isAffiliate != null">AND isAffiliate = #{isAffiliate,jdbcType=CHAR}</if>
		<if test="isAgency != null">AND isAgency = #{isAgency,jdbcType=CHAR}</if>
		<if test="regType != null">AND regType = #{regType,jdbcType=CHAR}</if>
		<if test="regAdminNo != null">AND regAdminNo = #{regAdminNo,jdbcType=INTEGER}</if>
		<if test="greenPointAccStatus != null">AND greenPointAccStatus =
			#{greenPointAccStatus,jdbcType=CHAR}</if>
		<if test="redPointAccStatus != null">AND redPointAccStatus = #{redPointAccStatus,jdbcType=CHAR}
		</if>
		<if test="greenPointUseStatus != null">AND greenPointUseStatus =
			#{greenPointUseStatus,jdbcType=CHAR}</if>
		<if test="redPointUseStatus != null">AND redPointUseStatus = #{redPointUseStatus,jdbcType=CHAR}
		</if>

		<if
			test="redPointNo != null and redPointNo !=  '0'  and redPointNo !=  0">AND RP.redPointNo = #{redPointNo,jdbcType=VARCHAR}</if>

		<if
			test="memberName != null or memberEmail != null or memberPhone != null or statusReason != null">
			AND ( 1 = 2
		</if>
		<if test="memberName != null">OR M.memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null">OR M.memberEmail LIKE CONCAT('%',#{memberEmail},'%' ) </if>
		<if test="memberPhone != null">OR M.memberPhone LIKE CONCAT('%',#{memberPhone},'%') </if>
		<if test="statusReason != null">OR M.statusReason = #{statusReason,jdbcType=VARCHAR}</if>
		<if
			test="memberName != null or memberEmail != null or memberPhone != null or statusReason != null">
			)
		</if>
	</sql>

	<select id="findRedPointCommands"
		parameterType="com.returnp.admin.dto.command.RedPointCommand"
		resultMap="RedPointCommand_ResultMap">
		select
		sql_calc_found_rows
		<include refid="RedPointCommand_Column_List" />
		from red_point as RP
		inner join member as M on (
		RP.memberNo = M.memberNo
		)
		where
		1 = 1
		<if test="searchPointMin != null and searchPointMax != null">
			and (pointAmount 	<![CDATA[ >=]]>
			#{searchPointMin} and pointAmount <![CDATA[ <=]]>
			#{searchPointMax})
		</if>
		<if test="searchPointMin != null and searchPointMax == null">
			and (pointAmount 	<![CDATA[ >=]]>
			#{searchPointMin})
		</if>

		<if test="searchPointMin == null and searchPointMax != null">
			and (pointAmount 	<![CDATA[ <=]]>
			#{searchPointMax})
		</if>
		<include refid="RedPointCommand_Where" />
		<include refid="commonStatement" />
	</select>

	<select id="findRedPoints"
		parameterType="com.returnp.admin.model.RedPoint"
		resultMap="RedPoint_ResultMap">
		select
		<include refid="RedPoint_Column_List" />
		from red_point
		where
		1 = 1
		<include refid="RedPoint_Where" />
	</select>


	<!-- =============================================================================================================== -->
	<!-- PointConvertRequestCommand find Mapper -->

	<resultMap id="PointConvertRequestCommand_ResultMap"
		type="com.returnp.admin.dto.command.PointConvertRequestCommand">
		<id column="pointConvertRequestNo" jdbcType="INTEGER"
			property="pointConvertRequestNo" />
		<result column="rmemberNo" jdbcType="INTEGER"
			property="rmemberNo" />
		<result column="greenPointNo" jdbcType="INTEGER"
			property="greenPointNo" />
		<result column="pointAmount" jdbcType="REAL"
			property="pointAmount" />
		<result column="nodeType" jdbcType="VARCHAR"
			property="nodeType" />
		<result column="requestNodeTypeName" jdbcType="VARCHAR"
			property="requestNodeTypeName" />
		<result column="convertPointAmount" jdbcType="REAL"
			property="convertPointAmount" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />

		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
	</resultMap>

	<sql id="PointConvertRequestCommand_Column_List">
		PCR.pointConvertRequestNo as pointConvertRequestNo,
		PCR.memberNo as memberNo,
		PCR.greenPointNo as greenPointNo,
		GP.pointAmount as pointAmount,
		PCR.nodeType as nodeType,
		PCR.requestNodeTypeName as requestNodeTypeName,
		PCR.convertPointAmount as convertPointAmount,
		PCR.createTime as createTime,
		PCR.updateTime as updateTime,
		M.memberEmail as memberEmail,
		M.memberName as memberName,
		M.memberPhone as memberPhone
	</sql>

	<sql id="PointConvertRequestCommand_Where">
		<if
			test="pointConvertRequestNo != null and pointConvertRequestNo !=  '0'  and pointConvertRequestNo !=  0">AND PCR.pointConvertRequestNo =
			#{pointConvertRequestNo,jdbcType=INTEGER} </if>
		<if
			test="memberNo != null and memberNo !=  '0'  and memberNo !=  0">AND PCR.memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if
			test="greenPointNo != null and greenPointNo !=  '0'  and greenPointNo !=  0">AND PCR.greenPointNo = #{greenPointNo,jdbcType=INTEGER} </if>
		<if
			test="memberName != null or memberEmail != null or memberPhone != null">
			AND ( 1 = 2
		</if>
		<if test="memberName != null">OR M.memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null">OR M.memberEmail LIKE CONCAT('%',#{memberEmail},'%' ) </if>
		<if test="memberPhone != null">OR M.memberPhone LIKE CONCAT('%',#{memberPhone},'%') </if>
		<if
			test="memberName != null or memberEmail != null or memberPhone != null">
			)
		</if>
	</sql>

	<select id="findPointConvertRequestCommands"
		parameterType="com.returnp.admin.dto.command.PointConvertRequestCommand"
		resultMap="PointConvertRequestCommand_ResultMap">
		select
		<include refid="PointConvertRequestCommand_Column_List" />
		from point_convert_request as PCR
		inner join member as M on (
		PCR.memberNo = M.memberNo
		)
		inner join green_point as GP on (
		PCR.greenPointNo = GP.greenPointNo
		)
		where
		1 = 1
		<include refid="PointConvertRequestCommand_Where" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- PointConversionTransactionCommand find Mapper -->

	<resultMap id="PointConversionTransactionCommand_ResultMap"
		type="com.returnp.admin.dto.command.PointConversionTransactionCommand">
		<id column="memberNo" jdbcType="INTEGER" property="memberNo" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberPassword" jdbcType="VARCHAR"
			property="memberPassword" />
		<result column="memberPassword2" jdbcType="VARCHAR"
			property="memberPassword2" />
		<result column="memberType" jdbcType="VARCHAR"
			property="memberType" />
		<result column="memberStatus" jdbcType="VARCHAR"
			property="memberStatus" />
		<result column="memberAuthType" jdbcType="VARCHAR"
			property="memberAuthType" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
		<result column="recommenderNo" jdbcType="INTEGER"
			property="recommenderNo" />
		<result column="joinRoute" jdbcType="VARCHAR"
			property="joinRoute" />
		<result column="statusReason" jdbcType="VARCHAR"
			property="statusReason" />
		<result column="isRecommender" jdbcType="CHAR"
			property="isRecommender" />
		<result column="isSaleManager" jdbcType="CHAR"
			property="isSaleManager" />
		<result column="isBranch" jdbcType="CHAR" property="isBranch" />
		<result column="isAffiliate" jdbcType="CHAR"
			property="isAffiliate" />
		<result column="isAgency" jdbcType="CHAR" property="isAgency" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="greenPointAccStatus" jdbcType="CHAR"
			property="greenPointAccStatus" />
		<result column="redPointAccStatus" jdbcType="CHAR"
			property="redPointAccStatus" />
		<result column="greenPointUseStatus" jdbcType="CHAR"
			property="greenPointUseStatus" />
		<result column="redPointUseStatus" jdbcType="CHAR"
			property="redPointUseStatus" />

		<result column="pointConversionTansactionNo" jdbcType="INTEGER"
			property="pointConversionTansactionNo" />
		<result column="conversionTotalPoint" jdbcType="REAL"
			property="conversionTotalPoint" />
		<result column="conversionAccPoint" jdbcType="REAL"
			property="conversionAccPoint" />
		<result column="conversionAccRate" jdbcType="REAL"
			property="conversionAccRate" />
		<result column="nodeType" jdbcType="VARCHAR"
			property="nodeType" />
		<result column="conversionStatus" jdbcType="VARCHAR"
			property="conversionStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="PointConversionTransaction_ResultMap"
		type="com.returnp.admin.model.PointConversionTransaction">
		<id column="pointConversionTansactionNo" jdbcType="INTEGER"
			property="pointConversionTansactionNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="conversionTotalPoint" jdbcType="REAL"
			property="conversionTotalPoint" />
		<result column="conversionAccPoint" jdbcType="REAL"
			property="conversionAccPoint" />
		<result column="conversionAccRate" jdbcType="REAL"
			property="conversionAccRate" />
		<result column="nodeType" jdbcType="VARCHAR"
			property="nodeType" />
		<result column="conversionStatus" jdbcType="VARCHAR"
			property="conversionStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>


	<sql id="PointConversionTransactionCommand_Column_List">
		M.memberName AS memberName,
		M.memberEmail AS memberEmail,
		M.memberPassword AS memberPassword,
		M.memberPassword2 AS memberPassword2,
		M.memberType AS memberType,
		M.memberStatus AS memberStatus,
		M.memberAuthType AS memberAuthType,
		M.memberPhone AS memberPhone,
		M.recommenderNo AS recommenderNo,
		M.joinRoute AS joinRoute,
		M.statusReason AS statusReason,
		M.isRecommender AS isRecommender,
		M.isSaleManager AS isSaleManager,
		M.isBranch AS isBranch,
		M.isAffiliate AS isAffiliate,
		M.isAgency AS isAgency,
		M.regType AS regType,
		M.regAdminNo AS regAdminNo,
		M.greenPointAccStatus AS greenPointAccStatus,
		M.redPointAccStatus AS redPointAccStatus,
		M.greenPointUseStatus AS greenPointUseStatus,
		M.redPointUseStatus AS redPointUseStatus,
		PCT.pointConversionTansactionNo as pointConversionTansactionNo,
		PCT.memberNo as memberNo,
		PCT.conversionTotalPoint as conversionTotalPoint,
		PCT.nodeType as nodeType,
		PCT.conversionTotalPoint as conversionTotalPoint,
		PCT.conversionAccPoint as conversionAccPoint,
		PCT.conversionAccRate as conversionAccRate,
		PCT.conversionStatus as conversionStatus,
		PCT.createTime as createTime,
		PCT.updateTime as updateTime
	</sql>

	<sql id="PointConversionTransaction_Column_List">
		pointConversionTansactionNo, memberNo, conversionTotalPoint, conversionAccPoint,
		conversionAccRate, conversionStatus, createTime, updateTime
	</sql>

	<sql id="PointConversionTransactionCommand_Where">
		<if test="pointConversionTansactionNo != null">AND PCT.pointConversionTansactionNo =
			#{pointConversionTansactionNo,jdbcType=INTEGER} </if>
		<if test="memberNo != null">AND PCT.memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="nodeType != null">AND PCT.nodeType = #{nodeType,jdbcType=REAL} </if>
		<if test="conversionTotalPoint != null">AND PCT.conversionTotalPoint =
			#{conversionTotalPoint,jdbcType=REAL} </if>
		<if test="conversionAccPoint != null">AND PCT.conversionAccPoint =
			#{conversionAccPoint,jdbcType=REAL} </if>
		<if test="conversionAccRate != null">AND PCT.conversionAccRate =
			#{conversionAccRate,jdbcType=REAL} </if>
		<if test="conversionStatus != null">AND PCT.conversionStatus =
			#{conversionStatus,jdbcType=VARCHAR} </if>
		<if
			test="memberName != null or memberEmail != null or memberPhone != null">
			AND ( 1 = 2
		</if>
		<if test="memberName != null">OR M.memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null">OR M.memberEmail LIKE CONCAT('%',#{memberEmail},'%' ) </if>
		<if test="memberPhone != null">OR M.memberPhone LIKE CONCAT('%',#{memberPhone},'%') </if>
		<if
			test="memberName != null or memberEmail != null or memberPhone != null">
			)
		</if>
	</sql>

	<sql id="PointConversionTransaction_Where">
		<if test="pointConversionTansactionNo != null">AND pointConversionTansactionNo =
			#{pointConversionTansactionNo,jdbcType=INTEGER} </if>
		<if test="memberNo != null">AND memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="nodeType != null">AND PCT.nodeType = #{nodeType,jdbcType=REAL} </if>
		<if test="conversionTotalPoint != null">AND conversionTotalPoint =
			#{conversionTotalPoint,jdbcType=REAL} </if>
		<if test="conversionAccPoint != null">AND conversionAccPoint =
			#{conversionAccPoint,jdbcType=REAL} </if>
		<if test="conversionAccRate != null">AND conversionAccRate = #{conversionAccRate,jdbcType=REAL}
		</if>
		<if test="conversionStatus != null">AND PCT.conversionStatus =
			#{conversionStatus,jdbcType=VARCHAR} </if>
	</sql>

	<select id="findPointConversionTransactions"
		parameterType="com.returnp.admin.model.PointConversionTransaction"
		resultMap="PointConversionTransaction_ResultMap">
		select
		<include refid="PointConversionTransaction_Column_List" />
		from point_conversion_transaction
		where
		1 = 1
		<include refid="PointConversionTransaction_Where" />
	</select>

	<select id="findPointConversionTransactionCommands"
		parameterType="com.returnp.admin.dto.command.PointConversionTransactionCommand"
		resultMap="PointConversionTransactionCommand_ResultMap">
		select
		sql_calc_found_rows
		<include refid="PointConversionTransactionCommand_Column_List" />
		from point_conversion_transaction as PCT
		inner join member as M on (
		PCT.memberNo = M.memberNo
		)
		where
		1 = 1
		<include refid="PointConversionTransactionCommand_Where" />
		<include refid="commonStatement" />
	</select>

	<resultMap id="PaymentPointbackRecordCommand_ResultMap"
		type="com.returnp.admin.dto.command.PaymentPointbackRecordCommand">
		<id column="paymentPointbackRecordNo" jdbcType="INTEGER"
			property="paymentPointbackRecordNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="paymentTransactionNo" jdbcType="INTEGER"
			property="paymentTransactionNo" />
		<result column="nodeNo" jdbcType="INTEGER" property="nodeNo" />
		<result column="nodeType" jdbcType="VARCHAR"
			property="nodeType" />
		<result column="pointbackAmount" jdbcType="REAL"
			property="pointbackAmount" />
		<result column="accRate" jdbcType="REAL" property="accRate" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="mameberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="paymentApprovalAmount" jdbcType="REAL"
			property="paymentApprovalAmount" />
		<result column="affiliateSerial" jdbcType="VARCHAR"
			property="affiliateSerial" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
		<result column="paymenterName" jdbcType="VARCHAR"
			property="paymenterName" />
		<result column="paymenterEmail" jdbcType="VARCHAR"
			property="paymenterEmail" />
		<result column="paymenterPhone" jdbcType="VARCHAR"
			property="paymenterPhone" />
		<result column="paymentApprovalDateTime" jdbcType="TIMESTAMP"
			property="paymentApprovalDateTime" />
	</resultMap>
	<sql id="PaymentPointbackRecordCommand_Column_List">
		PPR.paymentPointbackRecordNo,
		PPR.memberNo,
		PPR.paymentTransactionNo,
		PPR.nodeNo,
		PPR.nodeType,
		PPR.accRate,
		PPR.pointbackAmount,
		PPR.createTime,
		PPR.updateTime,
		M.memberName,
		M.memberPhone,
		M.memberEmail,
		AF.affiliateName,
		<!-- VPT.memerName as paymetMemberName, -->
		VPT.memberName as paymenterName,
		VPT.memberEmail as paymenterEmail,
		VPT.memberPhone as paymenterPhone,
		VPT.paymentApprovalAmount,
		VPT.affiliateSerial,
		VPT.paymentApprovalDateTime

	</sql>

	<sql id="PaymentPointbackRecordCommand_WhereStatement">
		<if
			test="paymentPointbackRecordNo != null  and  paymentPointbackRecordNo  != 0"> AND paymentPointbackRecordNo = #{paymentPointbackRecordNo} </if>
		<if test="memberNo != null "> AND PPR.memberNo = #{memberNo} </if>
		<if test="paymentTransactionNo != null "> AND PPR.paymentTransactionNo = #{paymentTransactionNo}
		</if>
		<if test="nodeNo != null "> AND PPR.nodeNo = #{nodeNo} </if>
		<if test="nodeType != null "> AND PPR.nodeType = #{nodeType} </if>

		<if
			test="memberName != null or memberEmail != null or memberPhone != null or affiliateName != null">
			AND ( 1 = 2
		</if>
		<if test="memberName != null">OR M.memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null">OR M.memberEmail LIKE CONCAT('%',#{memberEmail},'%' ) </if>
		<if test="memberPhone != null">OR M.memberPhone LIKE CONCAT('%',#{memberPhone},'%') </if>
		<if test="affiliateName != null">OR affiliateName LIKE CONCAT('%',#{affiliateName},'%')
		</if>
		<if
			test="memberName != null or memberEmail != null or memberPhone != null or affiliateName != null">
			)
		</if>
	</sql>

	<select id="findPaymentPointbackRecordCommands"
		parameterType="com.returnp.admin.dto.command.PaymentPointbackRecordCommand"
		resultMap="PaymentPointbackRecordCommand_ResultMap">
		select
		sql_calc_found_rows
		<include refid="PaymentPointbackRecordCommand_Column_List" />
		from payment_pointback_record as PPR
		inner join member as M on (PPR.memberNo = M.memberNo)
		inner join payment_transaction as VPT on (PPR.paymentTransactionNo =
		VPT.paymentTransactionNo)
		inner join affiliate as AF on (VPT.affiliateNo = AF.affiliateNo)
		where
		1 = 1
		<include refid="PaymentPointbackRecordCommand_WhereStatement" />
		order by paymentPointbackRecordNo asc;
	</select>



	<!-- =============================================================================================================== -->
	<!-- CategoryCommand find Mapper -->

	<resultMap id="Category_ResultMap"
		type="com.returnp.admin.model.Category">
		<id column="categoryNo" jdbcType="INTEGER" property="categoryNo" />
		<result column="categoryCode" jdbcType="VARCHAR"
			property="categoryCode" />
		<result column="parentCategoryNo" jdbcType="INTEGER"
			property="parentCategoryNo" />
		<result column="categoryLevel" jdbcType="VARCHAR"
			property="categoryLevel" />
		<result column="categoryName" jdbcType="VARCHAR"
			property="categoryName" />
		<result column="categoryNameEn" jdbcType="VARCHAR"
			property="categoryNameEn" />
		<result column="categoryStatus" jdbcType="VARCHAR"
			property="categoryStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTiem" jdbcType="TIMESTAMP"
			property="updateTiem" />
	</resultMap>

	<resultMap id="CategoryCommand_ResultMap"
		type="com.returnp.admin.dto.command.CategoryCommand">
		<id column="categoryNo" jdbcType="INTEGER" property="categoryNo" />
		<result column="categoryCode" jdbcType="VARCHAR"
			property="categoryCode" />
		<result column="parentCategoryNo" jdbcType="INTEGER"
			property="parentCategoryNo" />
		<result column="parentCategoryName" jdbcType="VARCHAR"
			property="parentCategoryName" />
		<result column="parentCategoryNameEn" jdbcType="VARCHAR"
			property="parentCategoryNameEn" />
		<result column="categoryLevel" jdbcType="VARCHAR"
			property="categoryLevel" />
		<result column="categoryName" jdbcType="VARCHAR"
			property="categoryName" />
		<result column="categoryNameEn" jdbcType="VARCHAR"
			property="categoryNameEn" />
		<result column="categoryStatus" jdbcType="VARCHAR"
			property="categoryStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTiem" jdbcType="TIMESTAMP"
			property="updateTiem" />
	</resultMap>


	<sql id="Category_Column_List">
		categoryNo,
		categoryCode,
		categoryLevel,
		categoryName,
		categoryNameEn,
		parentCategoryNo,
		categoryStatus,
		createTime,
		updateTime

	</sql>

	<sql id="CategoryCommand_Column_List">
		C1.categoryNo,
		C1.categoryCode,
		C1.categoryLevel,
		C1.categoryName,
		C1.categoryNameEn,
		C1.parentCategoryNo,
		C2.categoryName as parentCategoryName,
		C2.categoryNameEn as parentCategoryNameEn,
		C1.categoryStatus,
		C1.createTime,
		C1.updateTime

	</sql>

	<sql id="Category_WhereStatement">
		<if test="categoryNo != null  and  categoryNo  != 0"> AND categoryNo = #{categoryNo} </if>
		<if test="categoryCode != null  and  categoryCode  != 0"> AND categoryCode = #{categoryCode} </if>
		<if test="parentCategoryNo != null  and  parentCategoryNo  != 0"> AND parentCategoryNo = #{parentCategoryNo} </if>
		<if test="categoryLevel != null  and  categoryLevel  != 0"> AND categoryLevel = #{categoryLevel} </if>
		<if test="categoryName != null  and  categoryName  != 0"> AND categoryNo = #{categoryName} </if>
		<if test="categoryNameEn != null  and  categoryNameEn  != 0"> AND categoryNameEn = #{categoryNameEn} </if>
		<if test="categoryStatus != null  and  categoryStatus  != 0"> AND categoryStatus = #{categoryStatus} </if>

	</sql>

	<sql id="CategoryCommand_WhereStatement">
		<if test="categoryNo != null  and  categoryNo  != 0"> AND C1.categoryNo = #{categoryNo} </if>
		<if test="categoryCode != null  and  categoryCode  != 0"> AND C1.categoryCode = #{categoryCode} </if>
		<if test="parentCategoryNo != null  and  parentCategoryNo  != 0"> AND C1.parentCategoryNo = #{parentCategoryNo} </if>
		<if test="categoryLevel != null  and  categoryLevel  != 0"> AND C1.categoryLevel = #{categoryLevel} </if>
		<if test="categoryName != null  and  categoryName  != 0"> AND C1.categoryName= #{categoryName} </if>
		<if test="categoryNameEn != null  and  categoryNameEn  != 0"> AND C1.categoryNameEn = #{categoryNameEn} </if>
		<if test="categoryStatus != null  and  categoryStatus  != 0"> AND C1.categoryStatus = #{categoryStatus} </if>

	</sql>

	<select id="findCategories"
		parameterType="com.returnp.admin.model.Category"
		resultMap="Category_ResultMap">
		select
		<include refid="Category_Column_List" />
		from category as C1
		where
		1 = 1
		<include refid="Category_WhereStatement" />
	</select>

	<select id="findCategoryCommands"
		parameterType="com.returnp.admin.dto.command.CategoryCommand"
		resultMap="CategoryCommand_ResultMap">
		select
		<include refid="CategoryCommand_Column_List" />
		from category as C1
		left outer join category as C2 on ( C1.parentCategoryNo =C2.categoryNo)
		where
		1 = 1
		<include refid="CategoryCommand_WhereStatement" />
	</select>


	<delete id="deleteCategory"
		parameterType="com.returnp.admin.model.Category">
		delete from category
		where
		1 =1
		<include refid="Category_WhereStatement" />
	</delete>


	<!-- =============================================================================================================== -->
	<!-- PointTransferTransactionCommand -->
	<resultMap id="PointTransferTransactionCommand_ResultMap"
		type="com.returnp.admin.dto.command.PointTransferTransactionCommand">
		<id column="pointTransferTransactionNo" jdbcType="INTEGER"
			property="pointTransferTransactionNo" />
		<result column="pointTransferer" jdbcType="INTEGER"
			property="pointTransferer" />
		<result column="pointTransfererName" jdbcType="VARCHAR"
			property="pointTransfererName" />
		<result column="pointTransfererEmail" jdbcType="VARCHAR"
			property="pointTransfererEmail" />
		<result column="pointReceiver" jdbcType="INTEGER"
			property="pointReceiver" />
		<result column="pointReceiverName" jdbcType="VARCHAR"
			property="pointReceiverName" />
		<result column="pointTransferAmount" jdbcType="REAL"
			property="pointTransferAmount" />
		<result column="pointNode" jdbcType="VARCHAR"
			property="pointNode" />
		<result column="pointType" jdbcType="VARCHAR"
			property="pointType" />
		<result column="pointTransferType" jdbcType="VARCHAR"
			property="pointTransferType" />
		<result column="pointTransferStatus" jdbcType="VARCHAR"
			property="pointTransferStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="PointTransferTransactionCommand_Column_List">
		PTT.pointTransferTransactionNo,
		PTT.pointTransferer,
		PTT.pointReceiver,
		PTT.pointTransferAmount,
		PTT.pointNode,
		PTT.pointType,
		PTT.pointTransferType,
		PTT.pointTransferStatus,
		PTT.createTime,
		PTT.updateTime,
		M.memberName as pointTransfererName,
		M.memberEmail as pointTransfererEmail,
		M2.memberName as pointReceiverName
	</sql>


	<sql id="PointTransferTransactionCommand_WhereStatement">
		<if
			test="pointTransferTransactionNo != null  and  pointTransferTransactionNo  != 0"> AND pointTransferTransactionNo = #{pointTransferTransactionNo}
		</if>
		<if test="pointTransferer != null "> AND pointTransferer = #{pointTransferer} </if>
		<if test="pointReceiver != null "> AND pointReceiver = #{pointReceiver} </if>
		<if test="pointNode  != null "> AND pointNode= #{pointNode} </if>
		<if test="pointTransferStatus  != null "> AND pointTransferStatus= #{pointTransferStatus} </if>
		<if test="pointTransfererEmail  != null "> AND pointTransfererEmail= #{pointTransfererEmail} </if>
		<if test="pointTransferType  != null"> AND pointTransferType= #{pointTransferType} </if>

		<if
			test="pointTransfererName != null or pointReceiverName != null ">AND ( 1 = 2 </if>
		<if test="pointTransfererName != null">OR M.memberName LIKE
			CONCAT('%',#{pointTransfererName},'%') </if>
		<if test="pointReceiverName != null">OR M2.memberName LIKE CONCAT('%',#{pointReceiverName},'%'
			) </if>
		<if test="pointTransfererName != null or pointReceiverName != null">
			)
		</if>
	</sql>

	<select id="findPointTransferTransactionCommands"
		parameterType="com.returnp.admin.dto.command.PointTransferTransactionCommand"
		resultMap="PointTransferTransactionCommand_ResultMap">
		select
		sql_calc_found_rows
		<include refid="PointTransferTransactionCommand_Column_List" />
		from point_transfer_transaction as PTT
		inner join member as M on (PTT.pointTransferer = M.memberNo)
		inner join member as M2 on (PTT.pointReceiver = M2.memberNo)
		where
		1 = 1
		<include
			refid="PointTransferTransactionCommand_WhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- code -->
	<resultMap id="Code_ResultMap"
		type="com.returnp.admin.model.Code">
		<id column="codeNo" jdbcType="INTEGER" property="codeNo" />
		<result column="groupCode" jdbcType="VARCHAR"
			property="groupCode" />
		<result column="groupCodeName" jdbcType="VARCHAR"
			property="groupCodeName" />
		<result column="code" jdbcType="VARCHAR" property="code" />
		<result column="codeValue" jdbcType="VARCHAR"
			property="codeValue" />
		<result column="codeName" jdbcType="VARCHAR"
			property="codeName" />
		<result column="adminUseStatus" jdbcType="CHAR"
			property="adminUseStatus" />
		<result column="webUseStatus" jdbcType="CHAR"
			property="webUseStatus" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="Code_Column_List">
		codeNo, groupCode, groupCodeName, code, codeValue, codeName, adminUseStatus,
		webUseStatus, createTime, updateTime
	</sql>

	<sql id="Code_WhereStatement">
		<if test="groupCode != null"> AND groupCode = #{groupCode,jdbcType=VARCHAR} </if>
		<if test="groupCodeName != null"> AND groupCodeName = #{groupCodeName,jdbcType=VARCHAR}
		</if>
		<if test="code != null"> AND code = #{code,jdbcType=VARCHAR}</if>
		<if test="codeValue != null"> AND codeValue = #{codeValue,jdbcType=VARCHAR}</if>
		<if test="codeName != null"> AND codeName = #{codeName,jdbcType=VARCHAR}</if>
		<if test="adminUseStatus != null"> AND adminUseStatus = #{adminUseStatus,jdbcType=CHAR}</if>
		<if test="webUseStatus != null"> AND webUseStatus = #{webUseStatus,jdbcType=CHAR}</if>
	</sql>

	<select id="findCodes"
		parameterType="com.returnp.admin.model.Code"
		resultMap="Code_ResultMap">
		select
		<include refid="Code_Column_List" />
		from code
		where
		1 = 1
		<include refid="Code_WhereStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!--Board -->
	<resultMap id="Board_ResultMap"
		type="com.returnp.admin.model.Board">
		<id column="boardNo" jdbcType="INTEGER" property="boardNo" />
		<result column="boardType" jdbcType="VARCHAR"
			property="boardType" />
		<result column="boardName" jdbcType="VARCHAR"
			property="boardName" />
		<result column="boardTitle" jdbcType="VARCHAR"
			property="boardTitle" />
		<result column="boardWriterNo" jdbcType="INTEGER"
			property="boardWriterNo" />
		<result column="boardWriterName" jdbcType="VARCHAR"
			property="boardWriterName" />
		<result column="boardWriterEmail" jdbcType="VARCHAR"
			property="boardWriterEmail" />
		<result column="boardWriterType" jdbcType="VARCHAR"
			property="boardWriterType" />
		<result column="viewHitCount" jdbcType="INTEGER"
			property="viewHitCount" />
		<result column="isPublic" jdbcType="CHAR" property="isPublic" />
		<result column="boardPid" jdbcType="INTEGER"
			property="boardPid" />
		<result column="boardRef" jdbcType="INTEGER"
			property="boardRef" />
		<result column="boardLevel" jdbcType="INTEGER"
			property="boardLevel" />
		<result column="boardCate" jdbcType="VARCHAR"
			property="boardCate" />
		<result column="replyStatus" jdbcType="VARCHAR"
			property="replyStatus" />
		<result column="rerv1" jdbcType="VARCHAR" property="rerv1" />
		<result column="rerv2" jdbcType="VARCHAR" property="rerv2" />
		<result column="rerv3" jdbcType="VARCHAR" property="rerv3" />
		<result column="rerv4" jdbcType="VARCHAR" property="rerv4" />
		<result column="rerv5" jdbcType="VARCHAR" property="rerv5" />
		<result column="rerv6" jdbcType="VARCHAR" property="rerv6" />
		<result column="rerv7" jdbcType="VARCHAR" property="rerv7" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap extends="Board_ResultMap"
		id="Board_ResultMapWithBLOBs" type="com.returnp.admin.model.Board">
		<result column="boardContent" jdbcType="LONGVARCHAR"
			property="boardContent" />
	</resultMap>

	<sql id="Board_Column_List">
		boardNo, boardType, boardName, boardTitle, boardWriterNo, boardWriterName,
		boardWriterEmail,
		boardWriterType, viewHitCount, isPublic, boardPid, boardRef, boardLevel, boardCate,
		replyStatus, rerv1, rerv2, rerv3, rerv4, rerv5, rerv6, rerv7,
		createTime, updateTime
	</sql>

	<sql id="Board_Blob_Column_List">
		boardContent

	</sql>

	<sql id="Board_WhereStatement">
		<if test="boardType != null"> AND boardType = #{boardType,jdbcType=VARCHAR}</if>
		<if test="boardName != null"> AND boardName = #{boardName,jdbcType=VARCHAR}</if>
		<if test="boardTitle != null"> AND boardTitle = #{boardTitle,jdbcType=VARCHAR}</if>
		<if test="boardPid != null"> AND boardPid = #{boardPid,jdbcType=INTEGER}</if>
		<if test="boardWriterNo != null"> AND boardWriterNo = #{boardWriterNo,jdbcType=INTEGER}
		</if>
		<if test="boardWriterName != null"> AND boardWriterName = #{boardWriterName,jdbcType=VARCHAR}
		</if>
		<if test="boardWriterEmail != null"> AND boardWriterEmail =
			#{boardWriterEmail,jdbcType=VARCHAR}</if>
		<if test="boardWriterType != null"> AND boardWriterType = #{boardWriterType,jdbcType=VARCHAR}
		</if>
		<if test="viewHitCount != null"> AND viewHitCount = #{viewHitCount,jdbcType=INTEGER}</if>
		<if test="isPublic != null"> AND isPublic = #{isPublic,jdbcType=CHAR}</if>
		<if test="boardRef != null"> AND boardRef = #{boardRef,jdbcType=INTEGER}</if>
		<if test="boardLevel != null"> AND boardLevel = #{boardLevel,jdbcType=INTEGER}</if>
		<if test="boardCate != null"> AND boardCate = #{boardCate,jdbcType=VARCHAR}</if>
		<if test="replyStatus != null"> AND replyStatRus = #{replyStatus,jdbcType=VARCHAR}</if>
		<if test="rerv1 != null"> AND rerv1 = #{rerv1,jdbcType=VARCHAR}</if>
		<if test="rerv2 != null"> AND rerv2 = #{rerv2,jdbcType=VARCHAR}</if>
		<if test="rerv3 != null"> AND rerv3 = #{rerv3,jdbcType=VARCHAR}</if>
		<if test="rerv4 != null"> AND rerv4 = #{rerv4,jdbcType=VARCHAR}</if>
		<if test="rerv5 != null"> AND rerv5 = #{rerv5,jdbcType=VARCHAR} </if>
		<if test="rerv6 != null"> AND rerv6 = #{rerv6,jdbcType=VARCHAR} </if>
		<if test="rerv7 != null"> AND rerv7 = #{rerv7,jdbcType=VARCHAR} </if>
	</sql>

	<select id="findBoards"
		parameterType="com.returnp.admin.model.Board"
		resultMap="Board_ResultMapWithBLOBs">
		select
		<include refid="Board_Column_List" />
		,
		<include refid="Board_Blob_Column_List" />
		from board
		where
		1 = 1
		<include refid="Board_WhereStatement" />
		ORDER by boardRef DESC , boardLevel ASC
	</select>

	<!-- =============================================================================================================== -->
	<!--Board -->
	<resultMap id="Admin_File_ResultMap"
		type="com.returnp.admin.model.AdminFile">
		<id column="adminFileNo" jdbcType="INTEGER" property="adminFileNo" />
		<result column="uploadType" jdbcType="VARCHAR"
			property="uploadType" />
		<result column="fileNodeType" jdbcType="VARCHAR"
			property="fileNodeType" />
		<result column="fileName" jdbcType="VARCHAR"
			property="fileName" />
		<result column="orginalFileName" jdbcType="VARCHAR"
			property="orginalFileName" />
		<result column="fileLocalPath" jdbcType="VARCHAR"
			property="fileLocalPath" />
		<result column="fileWebPath" jdbcType="VARCHAR"
			property="fileWebPath" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="regAdminEmail" jdbcType="VARCHAR"
			property="regAdminEmail" />
	</resultMap>

	<sql id="Admin_File_Column_List">
		adminFileNo, uploadType, fileNodeType, fileName, orginalFileName, fileLocalPath,
		fileWebPath, createTime, updateTime, regAdminEmail
	</sql>

	<sql id="Admin_File_WhereStatement">
	</sql>

	<select id="findAdminFiles"
		parameterType="com.returnp.admin.model.AdminFile"
		resultMap="Admin_File_ResultMap">
		select
		<include refid="Admin_File_Column_List" />
		from admin_file
		where
		1 = 1
		<include refid="Admin_File_WhereStatement" />
		ORDER by createTime DESC
	</select>

	<!-- =============================================================================================================== -->
	<!-- 노드 트리 -->
	<select id="selectDirectNodes" parameterType="hashMap"
		resultType="hashMap">
 	<![CDATA[ 
 	/* param - 1.일반회원 2.정회원 3.지사 4.대리점 5.협력업체 7.총판 not null */
 	set @node_type := #{nodeType};    
 	/* param - 3.지사 4.대리점 5.협력업체 7.총판 (없을시 null) */
   set @node_no := #{nodeNo};     
    /* param - 회원번호(없을시 null)*/
   set @member_no := #{memberNo}; 
    
    /* ex) node_type=2, node_no=1, member_no=1 : 정회원인 1번회원이 1번협력업체에서 포인트발생 - 모든 상위노드 존재. */
    /* ex) node_type=2, node_no=null, member_no=1 : 정회원인 1번회원이 포인트발생 - 상위노드없음.  */
    /* ex) node_type=5, node_no=1, member_no=null : 1번 협력업체에서 포인트발생 - 대리점,지사,총판 상위노드존재. */
    /* ex) node_type=4, node_no=1, member_no=null : 1번 대리점에서 포인트발생-지사,총판 상위노드존재. */
    /* ex) node_type=3, node_no=1, member_no=null : 1번 지사에서 포인트발생- 총판 상위노드존재. */
    /* ex) node_type=7, node_no=1, member_no=null : 1번 총판에서 단독 포인트발생- 상위노드없음.  */
    /* ex) 값이 없는 경우 는 NULL 로 전달해 주어야 함 
    
   set @node_id := concat(case when @node_type< 3 then '5' else @node_type end,'-',@node_no);
   set @L := 0;
    
   select node_type,node_no,up_node_no,recommenderNo, saleManagerNo from(
   select * from node_tree where node_id in(
      select _node_id from(   
         SELECT @node_id AS _node_id,         
               (SELECT @node_id := up_node_id FROM node_tree WHERE node_id = _node_id) AS upper_id, 
               (@L := @L + 1) AS depth
         FROM node_tree AS h
         WHERE @node_id is not null
      )a
    )
    and @node_no is not null
   union all      
   select case when isRecommender='Y' then '2' else '1' end node_type,   concat(case when isRecommender='Y' then '2' else '1' end,'-', a.memberNo) node_id,   @node_id up_node_id,a.memberNo, @node_no, memberName name , a.recommenderNo, saleManagerNo  from member a left outer join recommender b on a.recommenderNo = b.recommenderNo
   where a.memberNo=@member_no
    and @node_type in (1,2)
    and @node_type = case when isRecommender='Y' then '2' else '1' end 
    )a
    ]]>
	</select>

	<!-- =============================================================================================================== -->
	<!--MemberBankAccount -->
	<resultMap id="Member_Bank_Account_ResultMap"
		type="com.returnp.admin.model.MemberBankAccount">
		<id column="memberBankAccountNo" jdbcType="INTEGER"
			property="memberBankAccountNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="bankName" jdbcType="VARCHAR"
			property="bankName" />
		<result column="accountOwner" jdbcType="VARCHAR"
			property="accountOwner" />
		<result column="bankAccount" jdbcType="VARCHAR"
			property="bankAccount" />
		<result column="accountStatus" jdbcType="VARCHAR"
			property="accountStatus" />
		<result column="isDefault" jdbcType="VARCHAR"
			property="isDefault" />
		<result column="bankPurpose" jdbcType="VARCHAR"
			property="bankPurpose" />
		<result column="statusMessage" jdbcType="VARCHAR"
			property="statusMessage" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="Member_Bank_Account_Command_ResultMap"
		type="com.returnp.admin.dto.command.MemberBankAccountCommand">
		<id column="memberBankAccountNo" jdbcType="INTEGER"
			property="memberBankAccountNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
		<result column="bankName" jdbcType="VARCHAR"
			property="bankName" />
		<result column="accountOwner" jdbcType="VARCHAR"
			property="accountOwner" />
		<result column="bankAccount" jdbcType="VARCHAR"
			property="bankAccount" />
		<result column="isDefault" jdbcType="VARCHAR"
			property="isDefault" />
		<result column="bankPurpose" jdbcType="VARCHAR"
			property="bankPurpose" />
		<result column="accountStatus" jdbcType="VARCHAR"
			property="accountStatus" />
		<result column="statusMessage" jdbcType="VARCHAR"
			property="statusMessage" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="regType" jdbcType="CHAR" property="regType" />
	</resultMap>

	<sql id="Member_Bank_Account_Columns">
		memberBankAccountNo, memberNo, bankName, accountOwner, bankAccount, accountStatus,
		isDefault, bankPurpose, statusMessage, regAdminNo, regType,
		createTime, updateTime
	</sql>

	<sql id="Member_Bank_Account_Command_Columns">
		MA.memberBankAccountNo,
		MA.memberNo,
		M.memberName,
		M.memberEmail,
		M.memberPhone,
		MA.bankName,
		MA.bankPurpose,
		MA.isDefault,
		MA.accountOwner,
		MA.bankAccount,
		MA.accountStatus,
		MA.statusMessage,
		MA.createTime,
		MA.updateTime,
		MA.regAdminNo,
		MA.regType
	</sql>


	<sql id="Member_Bank_Account_WhereStatement">
		<if test="memberBankAccountNo!= null"> AND memberBankAccountNo =
			#{memberBankAccountNo,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="accountOwner != null"> AND accountOwner = #{accountOwner,jdbcType=VARCHAR}</if>
		<if test="accountStatus != null"> AND accountStatus = #{accountStatus,jdbcType=VARCHAR}
		</if>
		<if test="isDefault != null"> AND isDefault = #{isDefault,jdbcType=VARCHAR}</if>
	</sql>

	<sql id="Member_Bank_Account_Command_WhereStatement">
		<if test="memberBankAccountNo!= null"> AND MA.memberBankAccountNo =
			#{memberBankAccountNo,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND MA.memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="accountOwner != null"> AND MA.accountOwner = #{accountOwner,jdbcType=VARCHAR}
		</if>
		<if test="accountStatus != null"> AND MA.accountStatus = #{accountStatus,jdbcType=VARCHAR}
		</if>
		<if test="isDefault != null"> AND MA.isDefault = #{isDefault,jdbcType=VARCHAR}</if>

		<if
			test="memberName != null or memberEmail != null or memberPhone != null">
			AND ( 1 = 2
		</if>
		<if test="memberName != null">OR M.memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null">OR M.memberEmail LIKE CONCAT('%',#{memberEmail},'%' ) </if>
		<if test="memberPhone != null">OR M.memberPhone LIKE CONCAT('%',#{memberPhone},'%') </if>
		<if
			test="memberName != null or memberEmail != null or memberPhone != null">
			)
		</if>
	</sql>


	<select id="findMemberBankAccounts"
		parameterType="com.returnp.admin.model.MemberBankAccount"
		resultMap="Member_Bank_Account_ResultMap">
		select
		<include refid="Member_Bank_Account_Columns" />
		from member_bank_account
		where
		1 = 1
		<include refid="Member_Bank_Account_WhereStatement" />
		ORDER by createTime DESC
	</select>

	<select id="findMemberBankAccountCommands"
		parameterType="com.returnp.admin.model.MemberBankAccount"
		resultMap="Member_Bank_Account_Command_ResultMap">
		select
		sql_calc_found_rows
		<include refid="Member_Bank_Account_Command_Columns" />
		from member_bank_account as MA
		inner join member as M on (MA.memberNo = M.memberNo)
		where
		1 = 1
		<include refid="Member_Bank_Account_Command_WhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!--PointWithdrawal -->
	<resultMap id="Point_Withdrawal_ResultMap"
		type="com.returnp.admin.model.PointWithdrawal">
		<id column="pointWithdrawalNo" jdbcType="INTEGER"
			property="pointWithdrawalNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="memberBankAccountNo" jdbcType="INTEGER"
			property="memberBankAccountNo" />
		<result column="withdrawalAmount" jdbcType="INTEGER"
			property="withdrawalAmount" />
		<result column="withdrawalStatus" jdbcType="VARCHAR"
			property="withdrawalStatus" />
		<result column="withdrawalPointType" jdbcType="VARCHAR"
			property="withdrawalPointType" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="Point_Withdrawal_Command_ResultMap"
		type="com.returnp.admin.dto.command.PointWithdrawalCommand">
		<id column="pointWithdrawalNo" jdbcType="INTEGER"
			property="pointWithdrawalNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="memberBankAccountNo" jdbcType="INTEGER"
			property="memberBankAccountNo" />
		<result column="withdrawalAmount" jdbcType="INTEGER"
			property="withdrawalAmount" />
		<result column="withdrawalStatus" jdbcType="VARCHAR"
			property="withdrawalStatus" />
		<result column="withdrawalPointType" jdbcType="VARCHAR"
			property="withdrawalPointType" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
		<result column="bankName" jdbcType="VARCHAR"
			property="bankName" />
		<result column="accountOwner" jdbcType="VARCHAR"
			property="accountOwner" />
		<result column="bankAccount" jdbcType="VARCHAR"
			property="bankAccount" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="regType" jdbcType="CHAR" property="regType" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="Point_Withdrawal_Blob_Column_List">
		withdrawalMessage
	</sql>

	<sql id="Point_Withdrawal_Columns">
		pointWithdrawalNo, memberNo, memberBankAccountNo, withdrawalAmount, withdrawalStatus,
		withdrawalPointType, regAdminNo, regType, createTime, updateTime
	</sql>

	<sql id="Point_Withdrawal_Command_Columns">
		PW.pointWithdrawalNo,
		PW.memberNo,
		PW.memberBankAccountNo,
		PW.withdrawalAmount,
		PW.withdrawalStatus,
		PW.withdrawalPointType,
		PW.regAdminNo,
		PW.regType,
		M.memberName,
		M.memberEmail,
		M.memberPhone,
		MBA.bankName,
		MBA.accountOwner,
		MBA.bankAccount,
		PW.createTime,
		PW.updateTime
	</sql>

	<sql id="Point_Withdrawal_WhereStatement">
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="pointWithdrawalNo != null"> AND pointWithdrawalNo =
			#{pointWithdrawalNo,jdbcType=INTEGER} </if>
		<if test="memberBankAccountNo != null"> AND memberBankAccountNo =
			#{memberBankAccountNo,jdbcType=INTEGER} </if>
		<if test="withdrawalAmount != null"> AND withdrawalAmount =
			#{withdrawalAmount,jdbcType=INTEGER} </if>
		<if test="withdrawalStatus != null"> AND withdrawalStatus =
			#{withdrawalStatus,jdbcType=VARCHAR} </if>
		<if test="withdrawalPointType != null"> AND withdrawalPointType =
			#{withdrawalPointType,jdbcType=VARCHAR} </if>
	</sql>

	<sql id="Point_Withdrawal_Command_WhereStatement">
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER} </if>
		<if test="pointWithdrawalNo != null"> AND pointWithdrawalNo =
			#{pointWithdrawalNo,jdbcType=INTEGER} </if>
		<if test="memberBankAccountNo != null"> AND memberBankAccountNo =
			#{memberBankAccountNo,jdbcType=INTEGER} </if>
		<if test="withdrawalStatus != null"> AND withdrawalStatus =
			#{withdrawalStatus,jdbcType=VARCHAR} </if>
		<if test="withdrawalPointType != null"> AND withdrawalPointType =
			#{withdrawalPointType,jdbcType=VARCHAR} </if>

		<if
			test="memberName != null or memberEmail != null or memberPhone != null">
			AND ( 1 = 2
		</if>
		<if test="memberName != null">OR memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null">OR memberEmail LIKE CONCAT('%',#{memberEmail},'%' ) </if>
		<if test="memberPhone != null">OR memberPhone = #{memberPhone,jdbcType=VARCHAR}</if>
		<if
			test="memberName != null or memberEmail != null or memberPhone != null">
			)
		</if>
	</sql>

	<select id="findPointWithdrawals"
		parameterType="com.returnp.admin.model.PointWithdrawal"
		resultMap="Point_Withdrawal_ResultMap">
		select
		<include refid="Point_Withdrawal_Columns" />
		,
		<include refid="Point_Withdrawal_Blob_Column_List" />
		from point_withdrawal
		where
		1 = 1
		<include refid="Point_Withdrawal_WhereStatement" />
		ORDER by createTime DESC
	</select>

	<select id="findPointWithdrawalCommands"
		parameterType="com.returnp.admin.dto.command.PointWithdrawalCommand"
		resultMap="Point_Withdrawal_Command_ResultMap">
		select
		sql_calc_found_rows
		<include refid="Point_Withdrawal_Command_Columns" />
		,
		<include refid="Point_Withdrawal_Blob_Column_List" />
		from point_withdrawal as PW
		inner join member as M on (PW.memberNo = M.memberNo)
		left outer join member_bank_account as MBA on (PW.memberBankAccountNo =
		MBA.memberBankAccountNo)
		where
		1 = 1
		<include refid="Point_Withdrawal_Command_WhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="selectMyTotalPointInfo"
		parameterType="com.returnp.admin.dto.command.MemberCommand"
		resultType="HashMap">
		select M.memberName, M.memberEmail, M.memberPhone, A.* from
		(
		SELECT memberNo , "R-POINT" as pointType , "r_member" as pointTarget,
		"R-POINT" as pointTypeKr, "R-POINT" as pointTypeEn, pointAmount as
		pointAmount
		FROM red_point
		union
		SELECT memberNo , "G-POINT" as pointType , "soledist" as pointTarget, "총판
		G-POINT" as pointTypeKr, "SoldDist G-POINT" as pointTypeEn,
		pointAmount as pointAmount
		FROM green_point where nodeType = "7"
		union
		SELECT memberNo ,"G-POINT" as pointType , "branch" as pointTarget, "지사
		G-POINT" as pointTypeKr, "Branch G-POINT" as pointTypeEn, pointAmount
		as pointAmount
		FROM green_point where nodeType = "3"
		union
		SELECT memberNo ,"G-POINT" as pointType , "agency" as pointTarget, "대리점
		G-POINT" as pointTypeKr, "Agency G-POINT" as pointTypeEn, pointAmount
		as pointAmount
		FROM green_point where nodeType = "4"
		union
		SELECT memberNo ,"G-POINT" as pointType , "affiliate" as pointTarget, "협력업체
		G-POINT" as pointTypeKr, "affiliate G-POINT" as pointTypeEn,
		pointAmount as pointAmount
		FROM green_point where nodeType = "5"
		union
		SELECT memberNo ,"G-POINT" as pointType , "member" as pointTarget, "회원
		G-POINT" as pointTypeKr, "member G-POINT" as pointTypeEn, pointAmount
		as pointAmount
		FROM green_point where nodeType = "1"
		) as A
		inner join member as M on A.memberNo = M.memberNo
		where
		1= 1
		<if test="memberName != null or memberEmail != null">
			AND ( 1 = 2
		</if>
		<if test="memberName != null"> OR memberName LIKE CONCAT('%',#{memberName},'%') </if>
		<if test="memberEmail != null">OR memberEmail LIKE CONCAT('%',#{memberEmail},'%') </if>
		<if test="memberName != null or memberEmail != null">
			)
		</if>
		order by memberNo asc
	</select>

	<select id="selectAffiliteSaleReport" resultType="HashMap">
		select
		AF.affiliateName,
		AF.affiliateSerial,
		M.memberNo,
		M.memberName,
		M.memberPhone,
		M.memberEmail,
		sum(PA.paymentApprovalAmount) as totalAffiliteSale
		from payment_transaction as PA
		right outer join affiliate as AF on (PA.affiliateSerial=
		AF.affiliateSerial)
		left outer join member as M on (AF.memberNo= M.memberNo)
		where
		1 = 1
		group by 
		  AF.affiliateName,
		  AF.affiliateSerial,
		  M.memberNo,
		  M.memberName,
		  M.memberPhone,
		  M.memberEmail
		order by totalAffiliteSale desc;

	</select>

	<select id="SelectOverlapPaymentTransactionCommands"
		parameterType="com.returnp.admin.dto.command.PaymentTransactionCommand"
		resultMap="PaymentTransactionCommand_ResultMap">
		select
		sql_calc_found_rows
		PA.paymentTransactionNo,
		PA.memberNo,
		PA.memberName,
		PA.memberPhone,
		PA.memberEmail,
		PA.nodeType,
		PA.nodeNo,
		PA.nodeEmail,
		PA.nodeName,
		PA.nodePhone,
		PA.affiliateNo,
		PA.affiliateSerial,
		AF.affiliateName,
		PA.paymentApprovalAmount,
		PA.paymentApprovalNumber,
		PA.paymentApprovalStatus,
		PA.pointBackStatus,
		PA.paymentTransactionType,
		PA.paymentApprovalDateTime,
		PA.orgPaymentData,
		PA.regAdminNo,
		PA.createTime,
		PA.updateTime
		FROM payment_transaction as PA
		inner join affiliate as AF on (PA.affiliateSerial= AF.affiliateSerial)
		WHERE
		PA.paymentApprovalNumber IN (SELECT paymentApprovalNumber FROM payment_transaction GROUP BY
		paymentApprovalNumber HAVING COUNT(paymentApprovalNumber) > 1)
		order by PA.paymentApprovalNumber
	</select>
	<!-- =============================================================================================================== -->
	<resultMap id="GiftCardResultMap"
		type="com.returnp.admin.model.GiftCard">
		<id column="giftCardNo" jdbcType="INTEGER" property="giftCardNo" />
		<result column="giftCardName" jdbcType="VARCHAR"
			property="giftCardName" />
		<result column="stockCount" jdbcType="INTEGER"
			property="stockCount" />
		<result column="giftCardAmount" jdbcType="INTEGER"
			property="giftCardAmount" />
		<result column="giftCardSalePrice" jdbcType="INTEGER"
			property="giftCardSalePrice" />
		<result column="giftCardDes" jdbcType="VARCHAR"
			property="giftCardDes" />
		<result column="giftCardSaleStatus" jdbcType="VARCHAR"
			property="giftCardSaleStatus" />
		<result column="giftCardCategory" jdbcType="VARCHAR"
			property="giftCardCategory" />
		<result column="giftCardImgPath1" jdbcType="VARCHAR"
			property="giftCardImgPath1" />
		<result column="giftCardImgPath2" jdbcType="VARCHAR"
			property="giftCardImgPath2" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="GiftCardSearchWhereStatement">
		<if test="giftCardNo != null"> AND giftCardNo = #{giftCardNo,jdbcType=INTEGER}</if>
		<if test="giftCardName != null"> AND giftCardName = #{giftCardName,jdbcType=VARCHAR}</if>
		<if test="giftCardSaleStatus != null"> AND giftCardSaleStatus =
			#{giftCardSaleStatus,jdbcType=VARCHAR} </if>
		<if test="giftCardCategory != null"> AND giftCardCategory =
			#{giftCardCategory,jdbcType=VARCHAR}</if>
	</sql>

	<sql id="GiftCard_Column_List">
		giftCardNo, giftCardName, stockCount, giftCardAmount, giftCardSalePrice,
		giftCardDes,
		giftCardSaleStatus, giftCardCategory, giftCardImgPath1, giftCardImgPath2, createTime,
		updateTime
	</sql>

	<!-- GiftCard -->
	<select id="selectGiftCards"
		parameterType="com.returnp.admin.model.GiftCard"
		resultMap="GiftCardResultMap">
		select
		sql_calc_found_rows
		<include refid="GiftCard_Column_List" />
		from gift_card
		where
		1 = 1
		<include refid="GiftCardSearchWhereStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- GiftCardSalesOrgan Mapper -->
	<resultMap id="GiftCardSalesOrganResultMap"
		type="com.returnp.admin.model.GiftCardSalesOrgan">
		<id column="giftCardSalesOrganNo" jdbcType="INTEGER"
			property="giftCardSalesOrganNo" />
		<result column="parentOrganNo" jdbcType="INTEGER"
			property="parentOrganNo" />
		<result column="organCode" jdbcType="VARCHAR"
			property="organCode" />
		<result column="organPassword" jdbcType="VARCHAR"
			property="organPassword" />
		<result column="organOwner" jdbcType="VARCHAR"
			property="organOwner" />
		<result column="organName" jdbcType="VARCHAR"
			property="organName" />
		<result column="organBusinessNumber" jdbcType="VARCHAR"
			property="organBusinessNumber" />
		<result column="saleOrganSaleFeeRate" jdbcType="REAL"
			property="saleOrganSaleFeeRate" />
		<result column="organStatus" jdbcType="VARCHAR"
			property="organStatus" />
		<result column="organPhone" jdbcType="VARCHAR"
			property="organPhone" />
		<result column="organEmail" jdbcType="VARCHAR"
			property="organEmail" />
		<result column="organTel" jdbcType="VARCHAR"
			property="organTel" />
		<result column="organAddr" jdbcType="VARCHAR"
			property="organAddr" />
		<result column="organBankName" jdbcType="VARCHAR"
			property="organBankName" />
		<result column="organBankAccount" jdbcType="VARCHAR"
			property="organBankAccount" />
		<result column="organBankAccountOwner" jdbcType="VARCHAR"
			property="organBankAccountOwner" />
		<result column="authType" jdbcType="VARCHAR"
			property="authType" />
		<result column="level" jdbcType="VARCHAR" property="level" />
		<result column="levelCode" jdbcType="VARCHAR"
			property="levelCode" />
		<result column="initAuthMenu" jdbcType="VARCHAR"
			property="initAuthMenu" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="GiftCardSalesOrganCommandResultMap"
		type="com.returnp.admin.dto.command.GiftCardSalesOrganCommand">
		<id column="giftCardSalesOrganNo" jdbcType="INTEGER"
			property="giftCardSalesOrganNo" />
		<result column="parentOrganNo" jdbcType="INTEGER"
			property="parentOrganNo" />
		<result column="organCode" jdbcType="VARCHAR"
			property="organCode" />
		<result column="organPassword" jdbcType="VARCHAR"
			property="organPassword" />
		<result column="organOwner" jdbcType="VARCHAR"
			property="organOwner" />
		<result column="organName" jdbcType="VARCHAR"
			property="organName" />
		<result column="organBusinessNumber" jdbcType="VARCHAR"
			property="organBusinessNumber" />
		<result column="saleOrganSaleFeeRate" jdbcType="REAL"
			property="saleOrganSaleFeeRate" />
		<result column="organStatus" jdbcType="VARCHAR"
			property="organStatus" />
		<result column="organPhone" jdbcType="VARCHAR"
			property="organPhone" />
		<result column="organEmail" jdbcType="VARCHAR"
			property="organEmail" />
		<result column="organTel" jdbcType="VARCHAR"
			property="organTel" />
		<result column="organAddr" jdbcType="VARCHAR"
			property="organAddr" />
		<result column="organBankName" jdbcType="VARCHAR"
			property="organBankName" />
		<result column="organBankAccount" jdbcType="VARCHAR"
			property="organBankAccount" />
		<result column="organBankAccountOwner" jdbcType="VARCHAR"
			property="organBankAccountOwner" />
		<result column="authType" jdbcType="VARCHAR"
			property="authType" />
		<result column="level" jdbcType="VARCHAR" property="level" />
		<result column="levelCode" jdbcType="VARCHAR"
			property="levelCode" />
		<result column="initAuthMenu" jdbcType="VARCHAR"
			property="initAuthMenu" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="parentOrganName" jdbcType="VARCHAR"
			property="parentOrganName" />
	</resultMap>

	<sql id="GiftCardSalesOrgan_Column_List">
		giftCardSalesOrganNo, parentOrganNo, organCode, organPassword, organOwner, organName,
		organBusinessNumber, saleOrganSaleFeeRate, organStatus, organPhone,
		organEmail, organTel,
		organAddr, organBankName, organBankAccount, organBankAccountOwner, authType,
		level,
		levelCode, initAuthMenu, createTime, updateTime
	</sql>

	<sql id="GiftCardSalesOrganCommand_Column_List">
		A.giftCardSalesOrganNo,
		A.parentOrganNo,
		A.organCode,
		A.organOwner,
		A.level,
		A.levelCode,
		A.initAuthMenu,
		A.organPassword,
		B.organName as parentOrganName,
		A.organName,
		A.organBusinessNumber,
		A.saleOrganSaleFeeRate,
		A.organStatus,
		A.authType,
		A.organPhone,
		A.organEmail,
		A.organTel,
		A.organAddr,
		A.organBankName,
		A.organBankAccount,
		A.organBankAccountOwner,
		A.createTime,
		A.updateTime
	</sql>

	<sql id="GiftCardSalesOrganWhereStatement">
		<if test="giftCardSalesOrganNo != null"> AND giftCardSalesOrganNo =
			#{giftCardSalesOrganNo,jdbcType=INTEGER}</if>
		<if test="organBusinessNumber != null"> AND organBusinessNumber =
			#{organBusinessNumber,jdbcType=VARCHAR}</if>
		<if test="authType != null"> AND authType = #{authType,jdbcType=VARCHAR}</if>
		<if test="organStatus != null"> AND organStatus = #{organStatus,jdbcType=VARCHAR}</if>


		<if
			test="organCode != null or organName != null or organOwner != null ">
			AND ( 1 = 2
		</if>
		<if test="organCode != null"> OR organCode LIKE CONCAT('%',#{organCode},'%')</if>
		<if test="organName != null"> OR organName LIKE CONCAT('%',#{organName},'%')</if>
		<if test="organOwner != null"> OR organOwner LIKE CONCAT('%',#{organOwner},'%')</if>
		<if
			test="organCode != null or organName != null or organOwner != null ">
			)
		</if>
	</sql>

	<sql id="GiftCardSalesOrganCommandWhereStatement">
		<if test="giftCardSalesOrganNo != null"> AND A.giftCardSalesOrganNo =
			#{giftCardSalesOrganNo,jdbcType=INTEGER}</if>
		<if test="parentOrganName != null"> AND B.parentOrganName =
			#{parentOrganName,jdbcType=VARCHAR}</if>
		<if test="organBusinessNumber != null"> AND A.organBusinessNumber =
			#{organBusinessNumber,jdbcType=VARCHAR}</if>
		<if test="authType != null"> AND A.authType = #{authType,jdbcType=VARCHAR}</if>
		<if test="organStatus != null"> AND A.organStatus = #{organStatus,jdbcType=VARCHAR}</if>

		<if
			test="organCode != null or organName != null or organOwner != null ">
			AND ( 1 = 2
		</if>
		<if test="organCode != null"> OR A.organCode LIKE CONCAT('%',#{organCode},'%')</if>
		<if test="organName != null"> OR A.organName LIKE CONCAT('%',#{organName},'%')</if>
		<if test="organOwner != null"> OR A.organOwner LIKE CONCAT('%',#{organOwner},'%')</if>
		<if
			test="organCode != null or organName != null or organOwner != null ">
			)
		</if>
	</sql>

	<select id="selectGiftCardSalesOrgans"
		parameterType="com.returnp.admin.model.GiftCardSalesOrgan"
		resultType="com.returnp.admin.model.GiftCardSalesOrgan">
		select
		sql_calc_found_rows
		<include refid="GiftCardSalesOrgan_Column_List" />
		from gift_card_sales_organ
		where
		1 = 1
		<include refid="GiftCardSalesOrganWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="selectGiftCardSalesOrganCommands"
		parameterType="com.returnp.admin.dto.command.GiftCardSalesOrganCommand"
		resultType="com.returnp.admin.dto.command.GiftCardSalesOrganCommand">
		select
		sql_calc_found_rows
		<include refid="GiftCardSalesOrganCommand_Column_List" />
		from gift_card_sales_organ as A
		left outer join gift_card_sales_organ as B on (A.parentOrganNo =
		B.giftCardSalesOrganNo)
		where
		1 = 1
		<include refid="GiftCardSalesOrganCommandWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="selectGiftCardSalesOrganCommand"
		parameterType="com.returnp.admin.dto.command.GiftCardSalesOrganCommand"
		resultType="com.returnp.admin.dto.command.GiftCardSalesOrganCommand">
		select
		<include refid="GiftCardSalesOrganCommand_Column_List" />
		from gift_card_sales_organ as A
		left outer join gift_card_sales_organ as B on (A.parentOrganNo =
		B.giftCardSalesOrganNo)
		where
		1 = 1
		<include refid="GiftCardSalesOrganCommandWhereStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- GiftCardOrder Mapper -->

	<resultMap id="GiftCardOrderResultMap"
		type="com.returnp.admin.model.GiftCardOrder">
		<result column="orderNumber" jdbcType="VARCHAR"
			property="orderNumber" />
		<result column="orderName" jdbcType="VARCHAR"
			property="orderName" />
		<result column="ordererId" jdbcType="VARCHAR"
			property="ordererId" />
		<result column="ordererName" jdbcType="VARCHAR"
			property="ordererName" />
		<result column="ordererPhone" jdbcType="VARCHAR"
			property="ordererPhone" />
		<result column="ordererEmail" jdbcType="VARCHAR"
			property="ordererEmail" />
		<result column="orderTotalPrice" jdbcType="INTEGER"
			property="orderTotalPrice" />
		<result column="orderType" jdbcType="VARCHAR"
			property="orderType" />
		<result column="orderStatus" jdbcType="VARCHAR"
			property="orderStatus" />
		<result column="issueStatus" jdbcType="VARCHAR"
			property="issueStatus" />
		<result column="bargainType" jdbcType="VARCHAR"
			property="bargainType" />
		<result column="orderReason" jdbcType="VARCHAR"
			property="orderReason" />
		<result column="giftCardNo" jdbcType="INTEGER"
			property="giftCardNo" />
		<result column="giftCardName" jdbcType="VARCHAR"
			property="giftCardName" />
		<result column="giftCardType" jdbcType="VARCHAR"
			property="giftCardType" />
		<result column="giftCardAmount" jdbcType="INTEGER"
			property="giftCardAmount" />
		<result column="giftCardSalePrice" jdbcType="INTEGER"
			property="giftCardSalePrice" />
		<result column="qty" jdbcType="INTEGER" property="qty" />
		<result column="receiverName" jdbcType="VARCHAR"
			property="receiverName" />
		<result column="receiverPhone" jdbcType="VARCHAR"
			property="receiverPhone" />
		<result column="receiverEmail" jdbcType="VARCHAR"
			property="receiverEmail" />
		<result column="paymentStatus" jdbcType="VARCHAR"
			property="paymentStatus" />
		<result column="paymentType" jdbcType="VARCHAR"
			property="paymentType" />
		<result column="deliveryNumber" jdbcType="VARCHAR"
			property="deliveryNumber" />
		<result column="deliveryAddress" jdbcType="VARCHAR"
			property="deliveryAddress" />
		<result column="deliveryMessage" jdbcType="VARCHAR"
			property="deliveryMessage" />
		<result column="orderTime" jdbcType="TIMESTAMP"
			property="orderTime" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="GiftCardOrderCommandResultMap"
		type="com.returnp.admin.dto.command.GiftCardOrderCommand">
		<result column="orderNumber" jdbcType="VARCHAR"
			property="orderNumber" />
		<result column="orderName" jdbcType="VARCHAR"
			property="orderName" />
		<result column="ordererId" jdbcType="VARCHAR"
			property="ordererId" />
		<result column="ordererName" jdbcType="VARCHAR"
			property="ordererName" />
		<result column="ordererPhone" jdbcType="VARCHAR"
			property="ordererPhone" />
		<result column="ordererEmail" jdbcType="VARCHAR"
			property="ordererEmail" />
		<result column="orderTotalPrice" jdbcType="INTEGER"
			property="orderTotalPrice" />
		<result column="orderType" jdbcType="VARCHAR"
			property="orderType" />
		<result column="orderStatus" jdbcType="VARCHAR"
			property="orderStatus" />
		<result column="issueStatus" jdbcType="VARCHAR"
			property="issueStatus" />
		<result column="bargainType" jdbcType="VARCHAR"
			property="bargainType" />
		<result column="orderReason" jdbcType="VARCHAR"
			property="orderReason" />
		<result column="giftCardNo" jdbcType="INTEGER"
			property="giftCardNo" />
		<result column="giftCardName" jdbcType="VARCHAR"
			property="giftCardName" />
		<result column="giftCardType" jdbcType="VARCHAR"
			property="giftCardType" />
		<result column="giftCardAmount" jdbcType="INTEGER"
			property="giftCardAmount" />
		<result column="giftCardSalePrice" jdbcType="INTEGER"
			property="giftCardSalePrice" />
		<result column="qty" jdbcType="INTEGER" property="qty" />
		<result column="receiverName" jdbcType="VARCHAR"
			property="receiverName" />
		<result column="receiverPhone" jdbcType="VARCHAR"
			property="receiverPhone" />
		<result column="receiverEmail" jdbcType="VARCHAR"
			property="receiverEmail" />
		<result column="paymentStatus" jdbcType="VARCHAR"
			property="paymentStatus" />
		<result column="paymentType" jdbcType="VARCHAR"
			property="paymentType" />
		<result column="deliveryNumber" jdbcType="VARCHAR"
			property="deliveryNumber" />
		<result column="deliveryAddress" jdbcType="VARCHAR"
			property="deliveryAddress" />
		<result column="deliveryMessage" jdbcType="VARCHAR"
			property="deliveryMessage" />
		<result column="orderTime" jdbcType="TIMESTAMP"
			property="orderTime" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="GiftCardOrder_Column_List">
		orderNo, orderNumber, orderName, ordererId, ordererName, ordererPhone,
		ordererEmail,
		orderTotalPrice, orderType, orderStatus, issueStatus, bargainType, orderReason,
		giftCardNo,
		giftCardName, giftCardType, giftCardAmount, giftCardSalePrice, qty, receiverName,
		receiverPhone, receiverEmail, paymentStatus, paymentType,
		deliveryNumber, deliveryAddress,
		deliveryMessage, orderTime, createTime, updateTime
	</sql>

	<sql id="GiftCardOrderCommand_Column_List">
		orderNo, orderNumber, orderName, ordererId, ordererName, ordererPhone,
		ordererEmail,
		orderTotalPrice, orderType, orderStatus, issueStatus, bargainType, orderReason,
		giftCardNo,
		giftCardName, giftCardType, giftCardAmount, giftCardSalePrice, qty, receiverName,
		receiverPhone, receiverEmail, paymentStatus, paymentType,
		deliveryNumber, deliveryAddress,
		deliveryMessage, orderTime, createTime, updateTime
	</sql>

	<sql id="GiftCardOrderWhereStatement">
		<if test="orderNo != null"> AND orderNo = #{orderNo,jdbcType=INTEGER}</if>
		<if test="orderNumber != null"> AND orderNumber = #{orderNumber,jdbcType=VARCHAR}</if>
		<if test="orderName != null"> AND orderName = #{orderName,jdbcType=VARCHAR}</if>
		<if test="ordererId != null"> AND ordererId = #{ordererId,jdbcType=VARCHAR}</if>
		<if test="ordererName != null"> AND ordererName = #{ordererName,jdbcType=VARCHAR}</if>
		<if test="ordererPhone != null"> AND ordererPhone = #{ordererPhone,jdbcType=VARCHAR}</if>
		<if test="ordererEmail != null"> AND ordererEmail = #{ordererEmail,jdbcType=VARCHAR}</if>
		<if test="orderTotalPrice != null"> AND orderTotalPrice = #{orderTotalPrice,jdbcType=INTEGER}
		</if>
		<if test="orderType != null"> AND orderType = #{orderType,jdbcType=VARCHAR}</if>
		<if test="orderStatus != null"> AND orderStatus = #{orderStatus,jdbcType=VARCHAR}</if>
		<if test="issueStatus != null"> AND issueStatus = #{issueStatus,jdbcType=VARCHAR}</if>
		<if test="bargainType != null"> AND bargainType = #{bargainType,jdbcType=VARCHAR}</if>
		<if test="giftCardName != null"> AND giftCardName = #{giftCardName,jdbcType=VARCHAR}</if>
		<if test="giftCardType != null"> AND giftCardType = #{giftCardType,jdbcType=VARCHAR}</if>
		<if test="orderReason != null"> AND orderReason = #{orderReason,jdbcType=VARCHAR}</if>
		<if test="paymentStatus != null"> AND paymentStatus = #{paymentStatus,jdbcType=VARCHAR}
		</if>
		<if test="paymentType != null"> AND paymentType = #{paymentType,jdbcType=VARCHAR}</if>
	</sql>

	<sql id="GiftCardOrderCommandWhereStatement">
		<if test="orderNo != null"> AND orderNo = #{orderNo,jdbcType=INTEGER}</if>
		<if test="orderNumber != null"> AND orderNumber = #{orderNumber,jdbcType=VARCHAR}</if>
		<if test="orderName != null"> AND orderName = #{orderName,jdbcType=VARCHAR}</if>
		<if test="ordererId != null"> AND ordererId = #{ordererId,jdbcType=VARCHAR}</if>
		<if test="ordererName != null"> AND ordererName = #{ordererName,jdbcType=VARCHAR}</if>
		<if test="ordererPhone != null"> AND ordererPhone = #{ordererPhone,jdbcType=VARCHAR}</if>
		<if test="ordererEmail != null"> AND ordererEmail = #{ordererEmail,jdbcType=VARCHAR}</if>
		<if test="orderTotalPrice != null"> AND orderTotalPrice = #{orderTotalPrice,jdbcType=INTEGER}
		</if>
		<if test="orderType != null"> AND orderType = #{orderType,jdbcType=VARCHAR}</if>
		<if test="orderStatus != null"> AND orderStatus = #{orderStatus,jdbcType=VARCHAR}</if>
		<if test="issueStatus != null"> AND issueStatus = #{issueStatus,jdbcType=VARCHAR}</if>
		<if test="bargainType != null"> AND bargainType = #{bargainType,jdbcType=VARCHAR}</if>
		<if test="giftCardName != null"> AND giftCardName = #{giftCardName,jdbcType=VARCHAR}</if>
		<if test="giftCardType != null"> AND giftCardType = #{giftCardType,jdbcType=VARCHAR}</if>
		<if test="orderReason != null"> AND orderReason = #{orderReason,jdbcType=VARCHAR}</if>
		<if test="paymentStatus != null"> AND paymentStatus = #{paymentStatus,jdbcType=VARCHAR}
		</if>
		<if test="paymentType != null"> AND paymentType = #{paymentType,jdbcType=VARCHAR}</if>
	</sql>

	<select id="selectGiftCardOrders"
		parameterType="com.returnp.admin.model.GiftCardOrder"
		resultMap="GiftCardOrderResultMap">
		select
		sql_calc_found_rows
		<include refid="GiftCardOrder_Column_List" />
		from gift_card_order
		where
		1 = 1
		<include refid="GiftCardOrderWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="selectGiftCardOrderCommands"
		parameterType="com.returnp.admin.dto.command.GiftCardOrderCommand"
		resultMap="GiftCardOrderCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="GiftCardOrderCommand_Column_List" />
		from gift_card_order
		where
		1 = 1
		<include refid="GiftCardOrderCommandWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- GiftCardOrderItem Mapper -->

	<resultMap id="GiftCardOrderItemCommandResultMap"
		type="com.returnp.admin.dto.command.GiftCardOrderItemCommand">
		<id column="orderItemNo" jdbcType="INTEGER" property="orderItemNo" />
		<result column="orderNumber" jdbcType="VARCHAR"
			property="orderNumber" />
		<result column="productNo" jdbcType="INTEGER"
			property="productNo" />
		<result column="productPrice" jdbcType="INTEGER"
			property="productPrice" />
		<result column="productName" jdbcType="VARCHAR"
			property="productName" />
		<result column="qty" jdbcType="INTEGER" property="qty" />
		<result column="totalPrice" jdbcType="INTEGER"
			property="totalPrice" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="GiftCardOrderItemCommand_Column_List">
		A.orderItemNo,
		A.orderNumber,
		C.productNo,
		C.productPrice,
		C.productName,
		A.qty,
		A.totalPrice,
		A.createTime,
		A.updateTime
	</sql>

	<sql id="GiftCardOrderItemCommandWhereStatement">
		<if test="orderItemNo != null"> AND A.orderItemNo = #{orderItemNo,jdbcType=INTEGER}</if>
		<if test="orderNumber != null"> AND A.orderNumber = #{orderNumber,jdbcType=VARCHAR}</if>
		<if test="productNo != null"> AND C.productNo = #{productNo,jdbcType=INTEGER}</if>
		<if test="productName != null"> AND C.productName = #{productName,jdbcType=VARCHAR}</if>
	</sql>

	<select id="selectGiftCardOrderItemCommands"
		parameterType="com.returnp.admin.dto.command.GiftCardOrderItemCommand"
		resultMap="GiftCardOrderItemCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="GiftCardOrderItemCommand_Column_List" />
		from gift_card_order_item as A
		inner join gift_card_order as B on (A.orderNumber = B.orderNumber )
		inner join product as C on (A.productNo= C.productNo)
		where
		1 = 1
		<include refid="GiftCardOrderItemCommandWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->

	<!-- GiftCardIssueMapper -->

	<resultMap id="GiftCardIssueCommandResultMap"
		type="com.returnp.admin.dto.command.GiftCardIssueCommand">
		<id column="giftCardIssueNo" jdbcType="INTEGER"
			property="giftCardIssueNo" />
		<id column="pinNumber" jdbcType="VARCHAR" property="pinNumber" />
		<result column="giftCardOrderNo" jdbcType="INTEGER"
			property="giftCardOrderNo" />
		<result column="giftCardNo" jdbcType="INTEGER"
			property="giftCardNo" />
		<result column="accableStatus" jdbcType="VARCHAR"
			property="accableStatus" />
		<result column="payableStatus" jdbcType="VARCHAR"
			property="payableStatus" />
		<result column="giftCardStatus" jdbcType="VARCHAR"
			property="giftCardStatus" />
		<result column="giftCardType" jdbcType="VARCHAR"
			property="giftCardType" />
		<result column="giftCardAmount" jdbcType="INTEGER"
			property="giftCardAmount" />
		<result column="giftCardSalePrice" jdbcType="INTEGER"
			property="giftCardSalePrice" />
		<result column="accQrData" jdbcType="VARCHAR"
			property="accQrData" />
		<result column="payQrData" jdbcType="VARCHAR"
			property="payQrData" />
		<result column="accQrScanner" jdbcType="VARCHAR"
			property="accQrScanner" />
		<result column="payQrScanner" jdbcType="VARCHAR"
			property="payQrScanner" />
		<result column="accQrScanTime" jdbcType="TIMESTAMP"
			property="accQrScanTime" />
		<result column="payQrScanTime" jdbcType="TIMESTAMP"
			property="payQrScanTime" />
		<result column="issueTime" jdbcType="TIMESTAMP"
			property="issueTime" />
		<result column="expirationTime" jdbcType="TIMESTAMP"
			property="expirationTime" />
		<result column="accQrCodeWebPath" jdbcType="VARCHAR"
			property="accQrCodeWebPath" />
		<result column="payQrCodeWebPath" jdbcType="VARCHAR"
			property="payQrCodeWebPath" />
		<result column="accQrCodeFilePath" jdbcType="VARCHAR"
			property="accQrCodeFilePath" />
		<result column="payQrCodeFilePath" jdbcType="VARCHAR"
			property="payQrCodeFilePath" />
		<result column="receiverPhone" jdbcType="VARCHAR"
			property="receiverPhone" />
		<result column="receiverName" jdbcType="VARCHAR"
			property="receiverName" />
		<result column="receiverAddress" jdbcType="VARCHAR"
			property="receiverAddress" />
		<result column="receiverIsMember" jdbcType="VARCHAR"
			property="receiverIsMember" />
		<result column="deliveryMessage" jdbcType="VARCHAR"
			property="deliveryMessage" />
		<result column="deliveryStatus" jdbcType="VARCHAR"
			property="deliveryStatus" />
		<result column="deliveryNumber" jdbcType="VARCHAR"
			property="deliveryNumber" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="GiftCardIssueCommand_Column_List">
		A.giftCardIssueNo,
		A.pinNumber,
		A.giftCardOrderNo,
		A.giftCardNo,
		A.accableStatus,
		A.payableStatus,
		A.giftCardStatus,
		A.giftCardType,
		A.giftCardAmount,
		A.giftCardSalePrice,
		A.accQrData,
		A.payQrData,
		A.accQrCodeWebPath,
		A.payQrCodeWebPath,
		A.accQrCodeFilePath,
		A.payQrCodeFilePath,
		A.accQrScanner,
		A.payQrScanner,
		A.accQrScanTime,
		A.payQrScanTime,
		A.issueTime,
		A.expirationTime,
		A.createTime,
		A.updateTime,
		A.receiverPhone,
		A.receiverName,
		A.receiverEmail,
		A.receiverAddress,
		A.receiverIsMember,
		A.deliveryMessage,
		A.deliveryStatus,
		A.deliveryNumber,
		B.orderName,
		B.orderNumber,
		B.ordererId,
		B.ordererName,
		B.ordererPhone,
		B.ordererEmail,
		C.giftCardName
	</sql>

	<sql id="GiftCardIssueCommandWhereStatement">
		<if test="giftCardIssueNo != null"> AND A.giftCardIssueNo =
			#{giftCardIssueNo,jdbcType=INTEGER}</if>
		<if test="giftCardOrderNo != null"> AND A.giftCardOrderNo =
			#{giftCardOrderNo,jdbcType=INTEGER}</if>
		<if test="giftCardNo != null"> AND A.giftCardNo = #{giftCardNo,jdbcType=INTEGER}</if>
		<if test="pinNumber != null"> AND A.pinNumber = #{pinNumber,jdbcType=VARCHAR}</if>
		<if test="accableStatus != null"> AND A.accableStatus = #{accableStatus,jdbcType=VARCHAR}
		</if>
		<if test="payableStatus != null"> AND A.payableStatus = #{payableStatus,jdbcType=VARCHAR}
		</if>
		<if test="accableStatus != null"> AND A.accableStatus = #{accableStatus,jdbcType=VARCHAR}
		</if>
		<if test="ordererId != null"> AND B.ordererId = #{ordererId,jdbcType=VARCHAR}</if>
		<if test="giftCardType != null"> AND A.giftCardType = #{giftCardType,jdbcType=VARCHAR}
		</if>
		<if test="deliveryStatus != null"> AND A.deliveryStatus = #{deliveryStatus,jdbcType=VARCHAR}
		</if>
		<if test="giftCardStatus != null"> AND A.giftCardStatus = #{giftCardStatus,jdbcType=VARCHAR}
		</if>
		<if test="accQrScanner != null"> AND A.accQrScanner = #{accQrScanner,jdbcType=VARCHAR}
		</if>
		<if test="payQrScanner != null"> AND A.payQrScanner = #{payQrScanner,jdbcType=VARCHAR}
		</if>
	</sql>

	<select id="selectGiftCardIssueCommands"
		parameterType="com.returnp.admin.dto.command.GiftCardIssueCommand"
		resultMap="GiftCardIssueCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="GiftCardIssueCommand_Column_List" />
		from gift_card_issue as A
		inner join gift_card_order as B on (A.giftCardOrderNo = B.orderNo)
		inner join gift_card as C on (A.giftCardNo = C.giftCardNo)
		where
		1 = 1
		<include refid="GiftCardIssueCommandWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- GiftCardPaymentMapper -->
	<resultMap id="GiftCardPaymentCommandResultMap"
		type="com.returnp.admin.dto.command.GiftCardPaymentCommand">
		<id column="giftCardPaymentNo" jdbcType="INTEGER"
			property="giftCardPaymentNo" />
		<result column="affiliateNo" jdbcType="INTEGER"
			property="affiliateNo" />
		<result column="giftCardIssueNo" jdbcType="INTEGER"
			property="giftCardIssueNo" />
		<result column="giftCardPaymentAmount" jdbcType="INTEGER"
			property="giftCardPaymentAmount" />
		<result column="memberBankAccountNo" jdbcType="INTEGER"
			property="memberBankAccountNo" />
		<result column="refundRate" jdbcType="REAL"
			property="refundRate" />
		<result column="refundAmount" jdbcType="REAL"
			property="refundAmount" />
		<result column="refundStatus" jdbcType="VARCHAR"
			property="refundStatus" />
		<result column="affiliateName" jdbcType="VARCHAR"
			property="affiliateName" />
		<result column="affiliateEmail" jdbcType="VARCHAR"
			property="affiliateEmail" />
		<result column="affiliatePhone" jdbcType="VARCHAR"
			property="affiliatePhone" />
		<result column="giftCardNo" jdbcType="INTEGER"
			property="giftCardNo" />
		<result column="giftCardAmount" jdbcType="INTEGER"
			property="giftCardAmount" />
		<result column="pinNumber" jdbcType="VARCHAR"
			property="pinNumber" />
		<result column="bankName" jdbcType="VARCHAR"
			property="bankName" />
		<result column="bankAccount" jdbcType="VARCHAR"
			property="bankAccount" />
		<result column="accountOwner" jdbcType="VARCHAR"
			property="accountOwner" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="GiftCardPaymentCommand_Column_List">
		A.giftCardPaymentNo,
		A.affiliateNo,
		A.giftCardIssueNo,
		A.giftCardPaymentAmount,
		A.memberBankAccountNo,
		A.refundRate,
		A.refundAmount,
		A.refundStatus,
		A.createTime,
		A.updateTime,
		B.affiliateName,
		B.affiliateEmail,
		B.affiliatePhone,
		C.pinNumber,
		E.bankName,
		E.bankAccount,
		E.accountOwner,
		D.giftCardNo,
		D.giftCardName,
		D.giftCardAmount
	</sql>

	<sql id="GiftCardPaymentCommandWhereStatement">
		<if test="giftCardPaymentNo != null"> AND giftCardPaymentNo =
			#{giftCardPaymentNo,jdbcType=INTEGER}</if>
		<if test="affiliateNo != null"> AND affiliateNo = #{affiliateNo,jdbcType=INTEGER}</if>
		<if test="giftCardIssueNo != null"> AND giftCardIssueNo = #{giftCardIssueNo,jdbcType=INTEGER}
		</if>
		<if test="refundStatus != null"> AND refundStatus = #{refundStatus,jdbcType=VARCHAR}</if>
	</sql>

	<select id="selectGiftCardPaymentCommands"
		parameterType="com.returnp.admin.dto.command.GiftCardPaymentCommand"
		resultMap="GiftCardPaymentCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="GiftCardPaymentCommand_Column_List" />
		from gift_card_payment as A
		inner join affiliate as B on (A.affiliateNo = B.affiliateNo)
		inner join gift_card_issue as C on (A.giftCardIssueNo = C.giftCardissueNo)
		inner join gift_card as D on (C.giftCardNo = D.giftCardNo)
		inner join member_bank_account as E on (A.memberBankAccountNo =
		E.memberBankAccountNo)
		where
		1 = 1
		<include refid="GiftCardPaymentCommandWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->

	<!-- GiftCardAccHistoryMapper -->

	<resultMap id="GiftCardAccHistoryResultMap"
		type="com.returnp.admin.model.GiftCardAccHistory">
		<id column="giftCardAccHistoryNo" jdbcType="INTEGER"
			property="giftCardAccHistoryNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="giftCardIssueNo" jdbcType="INTEGER"
			property="giftCardIssueNo" />
		<result column="baseAmount" jdbcType="INTEGER"
			property="baseAmount" />
		<result column="accRate" jdbcType="REAL" property="accRate" />
		<result column="accAmount" jdbcType="REAL" property="accAmount" />
		<result column="accTime" jdbcType="TIMESTAMP"
			property="accTime" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<resultMap id="GiftCardAccHistoryCommandResultMap"
		type="com.returnp.admin.dto.command.GiftCardAccHistoryCommand">
		<id column="giftCardAccHistoryNo" jdbcType="INTEGER"
			property="giftCardAccHistoryNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="giftCardIssueNo" jdbcType="INTEGER"
			property="giftCardIssueNo" />
		<result column="baseAmount" jdbcType="INTEGER"
			property="baseAmount" />
		<result column="accRate" jdbcType="REAL" property="accRate" />
		<result column="accAmount" jdbcType="REAL" property="accAmount" />
		<result column="accTime" jdbcType="TIMESTAMP"
			property="accTime" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="giftCardName" jdbcType="VARCHAR"
			property="giftCardName" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
	</resultMap>

	<sql id="GiftCardAccHistory_Column_List">
		giftCardAccHistoryNo, memberNo, giftCardIssueNo, baseAmount, accRate, accAmount,
		accTime, createTime, updateTime
	</sql>

	<sql id="GiftCardAccHistoryCommand_Column_List">
		A.giftCardAccHistoryNo,
		A.memberNo,
		A.giftCardIssueNo,
		A.baseAmount,
		A.accRate,
		A.accAmount,
		A.accTime,
		A.createTime,
		A.updateTime,
		B.memberName,
		B.memberEmail,
		B.memberPhone,
		D.giftCardName
	</sql>

	<sql id="GiftCardAccHistoryWhereStatement">
		<if test="giftCardAccHistoryNo != null"> AND giftCardAccHistoryNo =
			#{giftCardAccHistoryNo,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
	</sql>

	<sql id="GiftCardAccHistoryCommandWhereStatement">
		<if test="giftCardAccHistoryNo != null"> AND giftCardAccHistoryNo =
			#{giftCardAccHistoryNo,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if
			test="memberName != null or memberEmail != null or memberPhone != null or giftCardName != null">
			AND ( 1 = 2 </if>

		<if test="giftCardName != null">OR giftCardName LIKE
			CONCAT('%',#{giftCardName,jdbcType=VARCHAR},'%') </if>
		<if test="memberEmail != null">OR memberEmail LIKE
			CONCAT('%',#{memberEmail,jdbcType=VARCHAR},'%' ) </if>
		<if test="memberPhone != null">OR memberPhone LIKE
			CONCAT('%',#{memberPhone,jdbcType=VARCHAR},'%') </if>
		<if
			test="memberName != null or memberEmail != null or memberPhone != null or giftCardName != null"> ) </if>
	</sql>

	<select id="selectGiftCardAccHistorise"
		parameterType="com.returnp.admin.model.GiftCardAccHistory"
		resultMap="GiftCardAccHistoryResultMap">
		select
		sql_calc_found_rows
		<include refid="GiftCardAccHistory_Column_List" />
		from gift_card_acc_history
		where
		1 = 1
		<include refid="GiftCardAccHistoryWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<select id="selectGiftCardAccHistoryCommands"
		parameterType="com.returnp.admin.dto.command.GiftCardAccHistoryCommand"
		resultMap="GiftCardAccHistoryCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="GiftCardAccHistoryCommand_Column_List" />
		from gift_card_acc_history as A
		inner join member as B on (A.memberNo = B.memberNo)
		inner join gift_card_issue as C on (A.giftCardIssueNo = C.giftCardIssueNo)
		inner join gift_card as D on (C.giftCardNo = D.giftCardNo)
		where
		1 = 1
		<include refid="GiftCardAccHistoryCommandWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->

	<!-- DeviceInfo Mapperr -->

	<resultMap id="DeviceInfoResultMap"
		type="com.returnp.admin.model.DeviceInfo">
		<id column="deviceInfoNo" jdbcType="INTEGER"
			property="deviceInfoNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="memberEmail" jdbcType="VARCHAR"
			property="memberEmail" />
		<result column="memberName" jdbcType="VARCHAR"
			property="memberName" />
		<result column="memberPhone" jdbcType="VARCHAR"
			property="memberPhone" />
		<result column="manufacturer" jdbcType="VARCHAR"
			property="manufacturer" />
		<result column="os" jdbcType="VARCHAR" property="os" />
		<result column="osVersion" jdbcType="VARCHAR"
			property="osVersion" />
		<result column="pushKey" jdbcType="VARCHAR" property="pushKey" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
	</resultMap>

	<sql id="DeviceInfo_Column_List">
		deviceInfoNo, memberNo, memberEmail, memberName, memberPhone, manufacturer, os,
		osVersion,
		pushKey, updateTime, createTime
	</sql>

	<sql id="DeviceInfoWhereStatement">
		<if test="deviceInfoNo != null"> AND deviceInfoNo = #{deviceInfoNo,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="os != null"> AND os = #{os,jdbcType=VARCHAR}</if>
		<if test="manufacturer != null"> AND manufacturer = #{manufacturer,jdbcType=VARCHAR}</if>
	</sql>

	<select id="selectDeviceInfos"
		parameterType="com.returnp.admin.model.DeviceInfo"
		resultMap="DeviceInfoResultMap">
		select
		sql_calc_found_rows
		<include refid="DeviceInfo_Column_List" />
		from device_info
		where
		1 = 1
		<include refid="DeviceInfoWhereStatement" />
		<include refid="commonStatement" />
	</select>


	<!-- =============================================================================================================== -->

	<!-- MemberAddress Mapperr -->

	<resultMap id="MemberAddressResultMap"
		type="com.returnp.admin.model.MemberAddress">
		<id column="memberAddressNo" jdbcType="INTEGER"
			property="memberAddressNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="nodeNo" jdbcType="INTEGER" property="nodeNo" />
		<result column="nodeType" jdbcType="VARCHAR"
			property="nodeType" />
		<result column="roadFullAddr" jdbcType="VARCHAR"
			property="roadFullAddr" />
		<result column="roadAddrPart1" jdbcType="VARCHAR"
			property="roadAddrPart1" />
		<result column="roadAddrPart2" jdbcType="VARCHAR"
			property="roadAddrPart2" />
		<result column="addrDetail" jdbcType="VARCHAR"
			property="addrDetail" />
		<result column="engAddr" jdbcType="VARCHAR" property="engAddr" />
		<result column="jibunAddr" jdbcType="VARCHAR"
			property="jibunAddr" />
		<result column="zipNo" jdbcType="VARCHAR" property="zipNo" />
		<result column="admCd" jdbcType="VARCHAR" property="admCd" />
		<result column="rnMgtSn" jdbcType="VARCHAR" property="rnMgtSn" />
		<result column="bdMgtSn" jdbcType="VARCHAR" property="bdMgtSn" />
		<result column="lat" jdbcType="VARCHAR" property="lat" />
		<result column="lng" jdbcType="VARCHAR" property="lng" />
		<result column="regAdminNo" jdbcType="INTEGER"
			property="regAdminNo" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="MemberAddress_Column_List">
		memberAddressNo, memberNo, nodeNo, nodeType, roadFullAddr, roadAddrPart1,
		roadAddrPart2,
		addrDetail, engAddr, jibunAddr, zipNo, admCd, rnMgtSn, bdMgtSn, lat, lng,
		regAdminNo,
		createTime, updateTime
	</sql>

	<sql id="MemberAddressWhereStatement">
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="nodeNo != null"> AND nodeNo = #{nodeNo,jdbcType=INTEGER}</if>
		<if test="nodeType != null"> AND nodeType = #{nodeType,jdbcType=VARCHAR}</if>
	</sql>

	<select id="selectMemberAddresses"
		parameterType="com.returnp.admin.model.MemberAddress"
		resultMap="MemberAddressResultMap">
		select
		sql_calc_found_rows
		<include refid="MemberAddress_Column_List" />
		from device_info
		where
		1 = 1
		<include refid="MemberAddressWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->

	<!-- MyGiftCard Mapperr -->

	<resultMap id="MyGiftCardCommandResultMap"
		type="com.returnp.admin.dto.command.MyGiftCardCommand">
		<id column="myGiftCardNo" jdbcType="INTEGER"
			property="myGiftCardNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="giftCardIssueNo" jdbcType="INTEGER"
			property="giftCardIssueNo" />

		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="MyGiftCardCommand_Column_List">
		G.myGiftCardNo,
		G.memberNo,
		G.giftCardIssueNo,
		G.createTime as createTime,
		G.updateTime as updateTime,
		M.memberName,
		A.giftCardIssueNo,
		A.pinNumber,
		A.giftCardOrderNo,
		A.giftCardNo,
		A.accableStatus,
		A.payableStatus,
		A.giftCardStatus,
		A.giftCardType,
		A.giftCardAmount,
		A.giftCardSalePrice,
		A.accQrData,
		A.payQrData,
		A.accQrCodeWebPath,
		A.payQrCodeWebPath,
		A.accQrCodeFilePath,
		A.payQrCodeFilePath,
		A.accQrScanner,
		A.payQrScanner,
		A.accQrScanTime,
		A.payQrScanTime,
		A.issueTime,
		A.expirationTime,
		A.receiverPhone,
		A.receiverName,
		A.receiverEmail,
		A.receiverAddress,
		A.receiverIsMember,
		A.deliveryMessage,
		A.deliveryStatus,
		A.deliveryNumber
	</sql>

	<sql id="MyGiftCardCommandWhereStatement">
		<if test="myGiftCardNo != null"> AND G.myGiftCardNo = #{myGiftCardNo,jdbcType=INTEGER}
		</if>
		<if test="memberNo != null"> AND G.memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="giftCardIssueNo != null"> AND A.giftCardIssueNo =
			#{giftCardIssueNo,jdbcType=INTEGER}</if>
	</sql>

	<select id="selectMyGiftCards"
		parameterType="com.returnp.admin.dto.command.MyGiftCardCommand"
		resultMap="MyGiftCardCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="MyGiftCardCommand_Column_List" />
		from my_gift_card as G
		inner join member as M on (G.memberNo = M.memberNo)
		inner join gift_card_issue as A on (G.giftCardIssueNo= A.giftCardIssueNo)

		where
		1 = 1
		<include refid="MyGiftCardCommandWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->

	<!-- MyGiftCard Mapperr -->

	<!-- <resultMap id="MyGiftCardCommandResultMap" type="com.returnp.admin.dto.command.MyGiftCardCommand"> 
		<id column="myGiftCardNo" jdbcType="INTEGER" property="myGiftCardNo" /> <result 
		column="memberNo" jdbcType="INTEGER" property="memberNo" /> <result column="giftCardIssueNo" 
		jdbcType="INTEGER" property="giftCardIssueNo" /> <result column="createTime" 
		jdbcType="TIMESTAMP" property="createTime" /> <result column="updateTime" 
		jdbcType="TIMESTAMP" property="updateTime" /> </resultMap> <sql id="MyGiftCardCommand_Column_List"> 
		G.myGiftCardNo, G.memberNo, G.giftCardIssueNo, G.createTime as createTime, 
		G.updateTime as updateTime, M.memberName, A.giftCardIssueNo, A.pinNumber, 
		A.giftCardOrderNo, A.giftCardNo, A.accableStatus, A.payableStatus, A.giftCardStatus, 
		A.giftCardType, A.giftCardAmount, A.giftCardSalePrice, A.accQrData, A.payQrData, 
		A.accQrCodeWebPath, A.payQrCodeWebPath, A.accQrCodeFilePath, A.payQrCodeFilePath, 
		A.accQrScanner, A.payQrScanner, A.accQrScanTime, A.payQrScanTime, A.issueTime, 
		A.expirationTime, A.receiverPhone, A.receiverName, A.receiverEmail, A.receiverAddress, 
		A.receiverIsMember, A.deliveryMessage, A.deliveryStatus, A.deliveryNumber 
		</sql> <sql id ="MyGiftCardCommandWhereStatement"> <if test="myGiftCardNo 
		!= null"> AND G.myGiftCardNo = #{myGiftCardNo,jdbcType=INTEGER}</if> <if 
		test="memberNo != null"> AND G.memberNo = #{memberNo,jdbcType=INTEGER}</if> 
		<if test="giftCardIssueNo != null"> AND A.giftCardIssueNo = #{giftCardIssueNo,jdbcType=INTEGER}</if> 
		</sql> <select id="selectMyGiftCards" parameterType="com.returnp.admin.dto.command.MyGiftCardCommand" 
		resultMap="MyGiftCardCommandResultMap"> select sql_calc_found_rows <include 
		refid="MyGiftCardCommand_Column_List" /> from my_gift_card as G inner join 
		member as M on (G.memberNo = M.memberNo) inner join gift_card_issue as A 
		on (G.giftCardIssueNo= A.giftCardIssueNo) where 1 = 1 <include refid = "MyGiftCardCommandWhereStatement"/> 
		<include refid = "commonStatement"/> </select> -->

	<!-- =============================================================================================================== -->

	<!-- AffilaiteTid Mapperr -->

	<resultMap id="AffilaiteTidCommandResultMap"
		type="com.returnp.admin.dto.command.AffiliateTidCommand">
		<id column="affiliateTidNo" jdbcType="INTEGER"
			property="affiliateTidNo" />
		<result column="affiliateNo" jdbcType="INTEGER"
			property="affiliateNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="affiliateName" jdbcType="VARCHAR"
			property="affiliateName" />
		<result column="affiliateEmail" jdbcType="VARCHAR"
			property="affiliateEmail" />
		<result column="tid" jdbcType="VARCHAR" property="tid" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="AffilaiteTidCommand_Column_List">
		AT.affiliateTidNo,
		AT.affiliateNo,
		A.affiliateName,
		A.affiliateEmail,
		AT.memberNo,
		AT.tid,
		AT.createTime,
		AT.updateTime
	</sql>

	<sql id="AffilaiteTidCommandWhereStatement">
		<if test="affiliateTidNo != null"> AND AT.affiliateTidNo =
			#{affiliateTidNo,jdbcType=INTEGER}</if>
		<if test="affiliateNo != null"> AND AT.affiliateNo = #{affiliateNo,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND AT.memberNo = #{memberNo,jdbcType=INTEGER}</if>
		<if test="affiliateName != null"> AND A.affiliateName = #{affiliateName,jdbcType=VARCHAR}
		</if>
		<if test="affiliateEmail != null"> AND A.affiliateEmail = #{affiliateEmail,jdbcType=VARCHAR}
		</if>
		<if test="tid != null"> AND AT.tid = #{tid,jdbcType=VARCHAR}</if>
	</sql>

	<select id="selectAffilaiteTidCommands"
		parameterType="com.returnp.admin.dto.command.AffiliateTidCommand"
		resultMap="AffilaiteTidCommandResultMap">
		select
		sql_calc_found_rows
		<include refid="AffilaiteTidCommand_Column_List" />
		from affiliate_tid as AT
		inner join affiliate as A on (AT.affiliateNo= A.AffiliateNo)

		where
		1 = 1
		<include refid="AffilaiteTidCommandWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->

	<!-- MemberConfig Mapper -->

	<resultMap id="MemberConfigResultMap"
		type="com.returnp.admin.model.MemberConfig">
		<id column="memberConfigNo" jdbcType="INTEGER"
			property="memberConfigNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="devicePush" jdbcType="VARCHAR"
			property="devicePush" />
		<result column="emailReceive" jdbcType="VARCHAR"
			property="emailReceive" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="MemberConfig_Column_List">
		memberConfigNo, memberNo, devicePush, emailReceive, createTime, updateTime
	</sql>

	<sql id="MemberConfigWhereStatement">
		<if test="memberConfigNo != null"> AND memberConfigNo = #{memberConfigNo,jdbcType=INTEGER}
		</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
	</sql>

	<select id="selectMemberConfigs"
		parameterType="com.returnp.admin.model.MemberConfig"
		resultMap="MemberConfigResultMap">
		select
		sql_calc_found_rows
		<include refid="MemberConfig_Column_List" />
		from member_config
		where
		1 = 1
		<include refid="MemberConfigWhereStatement" />
		<include refid="commonStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<resultMap id="PaymentRouterResultMap"
		type="com.returnp.admin.model.PaymentRouter">
		<id column="paymentRouterNo" jdbcType="INTEGER"
			property="paymentRouterNo" />
		<result column="paymentRouterType" jdbcType="VARCHAR"
			property="paymentRouterType" />
		<result column="paymentRouterCode" jdbcType="VARCHAR"
			property="paymentRouterCode" />
		<result column="paymentRouterName" jdbcType="VARCHAR"
			property="paymentRouterName" />
	</resultMap>

	<sql id="PaymentRouter_Column_List">
		paymentRouterNo, paymentRouterType, paymentRouterCode, paymentRouterName
	</sql>

	<sql id="PaymentRouterWhereStatement">
		<if test="paymentRouterNo != null"> AND paymentRouterNo = #{paymentRouterNo,jdbcType=INTEGER}
		</if>
		<if test="paymentRouterType != null"> AND paymentRouterType =
			#{paymentRouterType,jdbcType=VARCHAR}</if>
		<if test="paymentRouterCode != null"> AND paymentRouterCode =
			#{paymentRouterCode,jdbcType=VARCHAR}</if>
		<if test="paymentRouterName != null"> AND paymentRouterName =
			#{paymentRouterName,jdbcType=VARCHAR}</if>
	</sql>

	<select id="selectPaymentRouters"
		parameterType="com.returnp.admin.model.PaymentRouter"
		resultMap="PaymentRouterResultMap">
		select
		sql_calc_found_rows
		<include refid="PaymentRouter_Column_List" />
		from payment_router
		where
		1 = 1
		<include refid="PaymentRouterWhereStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<resultMap id="AffiliatePaymentRouterResultMap"
		type="com.returnp.admin.model.AffiliatePaymentRouter">
		<id column="affiliatePaymentRouterNo" jdbcType="INTEGER"
			property="affiliatePaymentRouterNo" />
		<result column="affiliateNo" jdbcType="INTEGER"
			property="affiliateNo" />
		<result column="paymentRouterNo" jdbcType="INTEGER"
			property="paymentRouterNo" />
	</resultMap>

	<sql id="AffiliatePaymentRouter_Column_List">
		affiliatePaymentRouterNo, affiliateNo, paymentRouterNo
	</sql>

	<sql id="AffiliatePaymentRouterWhereStatement">
		<if test="affiliateNo != null"> AND affiliateNo = #{affiliateNo,jdbcType=INTEGER}</if>
		<if test="affiliatePaymentRouterNo != null"> AND affiliatePaymentRouterNo =
			#{affiliatePaymentRouterNo,jdbcType=INTEGER}</if>
	</sql>

	<select id="selectAffiliatePaymentRouters"
		parameterType="com.returnp.admin.model.AffiliatePaymentRouter"
		resultMap="AffiliatePaymentRouterResultMap">
		select
		sql_calc_found_rows
		<include refid="AffiliatePaymentRouter_Column_List" />
		from affiliate_payment_router
		where
		1 = 1
		<include refid="AffiliatePaymentRouterWhereStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- AffilaiteciderPay -->

	<resultMap id="AffiliateCiderpayResultMap"
		type="com.returnp.admin.model.AffiliateCiderpay">
		<id column="affiliateCiderPayNo" jdbcType="INTEGER"
			property="affiliateCiderPayNo" />
		<result column="affiliateNo" jdbcType="INTEGER"
			property="affiliateNo" />
		<result column="ciderPayStatus" jdbcType="VARCHAR"
			property="useStatus" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
	</resultMap>

	<sql id="AffiliateCiderpay_Column_List">
		affiliateCiderPayNo, affiliateNo, ciderPayStatus, updateTime, createTime
	</sql>

	<sql id="AffiliateCiderpayWhereStatement">
		<if test="affiliateCiderPayNo != null"> AND affiliateCiderPayNo =
			#{affiliateCiderPayNo,jdbcType=INTEGER}</if>
		<if test="affiliateNo != null"> AND affiliateNo = #{affiliateNo,jdbcType=INTEGER}</if>
		<if test="ciderPayStatus != null"> AND ciderPayStatus = #{ciderPayStatus,jdbcType=VARCHAR}
		</if>
	</sql>

	<select id="selectAffiliateCiderPays"
		parameterType="com.returnp.admin.model.AffiliateCiderpay"
		resultMap="AffiliateCiderpayResultMap">
		select
		<include refid="AffiliateCiderpay_Column_List" />
		from affiliate_ciderpay
		where
		1 = 1
		<include refid="AffiliateCiderpayWhereStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- MemberPlainPassword -->

	<resultMap id="MemberPlainPasswordResultMap"
		type="com.returnp.admin.model.MemberPlainPassword">
		<id column="memberPlainPasswordNo" jdbcType="INTEGER"
			property="memberPlainPasswordNo" />
		<result column="memberNo" jdbcType="INTEGER"
			property="memberNo" />
		<result column="plainPassword" jdbcType="VARCHAR"
			property="plainPassword" />
		<result column="hashPassword" jdbcType="VARCHAR"
			property="hashPassword" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="MemberPlainPassword_Column_List">
		memberPlainPasswordNo, memberNo, plainPassword, hashPassword, createTime, updateTime
	</sql>

	<sql id="MemberPlainPasswordWhereStatement">
		<if test="memberPlainPasswordNo != null"> AND memberPlainPasswordNo =
			#{memberPlainPasswordNo,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
	</sql>

	<select id="selectMemberPlainPasswords"
		parameterType="com.returnp.admin.model.MemberPlainPassword"
		resultMap="MemberPlainPasswordResultMap">
		select
		<include refid="MemberPlainPassword_Column_List" />
		from member_plain_password
		where
		1 = 1
		<include refid="MemberPlainPasswordWhereStatement" />
	</select>


	<select id="selectPaymentTransactionSumForSales"
		parameterType="HashMap" resultType="int">
		select IFNULL(sum(A.paymentApprovalAmount), 0)
		from (SELECT * FROM returnp_db.payment_transaction where
		paymentApprovalStatus = #{paymentApprovalStatus} and affiliateNo =
		#{affiliateNo} and date_format(paymentApprovalDateTime, "%Y-%m") =
		#{searchMonth}) as A;
	</select>

	<!-- =============================================================================================================== -->
	<!-- MainBBs -->

	<resultMap id="MainBbsResultMap"
		type="com.returnp.admin.model.MainBbs">
		<id column="mainBbsNo" jdbcType="INTEGER" property="mainBbsNo" />
		<result column="bbsType1" jdbcType="VARCHAR"
			property="bbsType1" />
		<result column="bbsType2" jdbcType="VARCHAR"
			property="bbsType2" />
		<result column="writerNo" jdbcType="INTEGER"
			property="writerNo" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="isPublic" jdbcType="VARCHAR"
			property="isPublic" />
		<result column="bbsPassword" jdbcType="VARCHAR"
			property="bbsPassword" />
		<result column="replyCompleted" jdbcType="VARCHAR"
			property="replyCompleted" />
		<result column="viewCount" jdbcType="INTEGER"
			property="viewCount" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="rerv1" jdbcType="VARCHAR" property="rerv1" />
		<result column="rerv2" jdbcType="VARCHAR" property="rerv2" />
		<result column="rerv3" jdbcType="VARCHAR" property="rerv3" />
		<result column="rerv4" jdbcType="VARCHAR" property="rerv4" />
		<result column="rerv5" jdbcType="VARCHAR" property="rerv5" />
		<result column="rerv6" jdbcType="VARCHAR" property="rerv6" />
		<result column="content" jdbcType="LONGVARCHAR"
			property="content" />
	</resultMap>

	<sql id="MainBbs_Column_List">
		mainBbsNo, bbsType1, bbsType2, writerNo, title, isPublic, bbsPassword,
		replyCompleted,
		viewCount, status, createTime, updateTime, rerv1, rerv2, rerv3, rerv4, rerv5,
		rerv6, content
	</sql>

	<sql id="MainBbsWhereStatement">
		<if test="mainBbsNo != null"> AND mainBbsNo = #{mainBbsNo,jdbcType=INTEGER}</if>
		<if test="bbsType1 != null"> AND bbsType1 = #{bbsType1,jdbcType=VARCHAR}</if>
		<if test="bbsType2 != null"> AND bbsType2 = #{bbsType2,jdbcType=VARCHAR}</if>
		<if test="rerv6 != null"> AND rerv6 = #{rerv6,jdbcType=VARCHAR}</if>
		<if test="status != null"> AND status = #{status,jdbcType=VARCHAR}</if>
	</sql>

	<select id="selectMainBbses"
		parameterType="com.returnp.admin.model.MainBbs"
		resultMap="MainBbsResultMap">
		select
		<include refid="MainBbs_Column_List" />
		from main_bbs
		where
		1 = 1
		<include refid="MainBbsWhereStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<!-- SubBBs -->

	<resultMap id="SubBbsResultMap"
		type="com.returnp.admin.model.SubBbs">
		<id column="subBbsNo" jdbcType="INTEGER" property="subBbsNo" />
		<result column="mainBbsNo" jdbcType="INTEGER"
			property="mainBbsNo" />
		<result column="writerNo" jdbcType="INTEGER"
			property="writerNo" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="content" jdbcType="LONGVARCHAR"
			property="content" />
	</resultMap>

	<sql id="SubBbs_Column_List">
		subBbsNo, mainBbsNo, writerNo, createTime, updateTime, content
	</sql>

	<sql id="SubBbsWhereStatement">
		<if test="subBbsNo != null"> AND subBbsNo = #{subBbsNo,jdbcType=INTEGER}</if>
		<if test="mainBbsNo != null"> AND mainBbsNo = #{mainBbsNo,jdbcType=INTEGER}</if>
		<if test="writerNo != null"> AND writerNo = #{writerNo,jdbcType=INTEGER}</if>
	</sql>

	<select id="selectSubBbses"
		parameterType="com.returnp.admin.model.SubBbs"
		resultMap="SubBbsResultMap">
		select
		<include refid="SubBbs_Column_List" />
		from sub_bbs
		where
		1 = 1
		<include refid="SubBbsWhereStatement" />
	</select>

	<!-- 검색 조건에 따른 G point 결제 내역 가져오기 -->
	<select id="selectGpointPayments" parameterType="HashMap"
		resultType="HashMap">
		SELECT
		gpointPaymentNo,
		memberNo,
		memberName,
		memberEmail,
		memberPhone,
		affiliateNo,
		affiliateSerial,
		affiliateName,
		paymentApprovalAmount,
		paymentApprovalNumber,
		paymentApprovalStatus,
		paymentMethod,
		paymentTransactionType,
		paymentApprovalDateTime,
		realPaymentAmount,
		gpointPaymentAmount,
		createTime,
		updateTime

		FROM gpoint_payment

		where
		1 = 1
		<if test="searchDate != null "> AND paymentApprovalDateTime LIKE
			CONCAT(#{searchDate},'%') </if>
		<if test="searchPaymentTransactionType != null "> AND paymentTransactionType =
			#{searchPaymentTransactionType} </if>
		<if test="searchPaymentApprovalStatus != null "> AND paymentApprovalStatus =
			#{searchPaymentApprovalStatus} </if>
		<if test="searchAffiliate != null "> AND affiliateNo = #{searchAffiliate} </if>
		<choose>
			<when test="order !=null">
				order by ${order}
			</when>
			<otherwise>
				order by createTime desc
			</otherwise>
		</choose>
		<if test="pagination">
			limit ${pageSize} offset ${offset}
		</if>
		<!-- where 1 = 1 <if test="gpointPaymentNo != null"> AND GP.gpointPaymentNo 
			= #{gpointPaymentNo,jdbcType=INTEGER}</if> <if test="affiliateNo != null"> 
			AND GP.affiliateNo = #{affiliateNo,jdbcType=INTEGER}</if> <if test="affiliateSerial 
			!= null"> AND affiliateSerial = #{affiliateSerial,jdbcType=VARCHAR}</if> 
			<if test="memberName != null or memberEmail != null or memberPhone != null 
			|| affiliateName != null"> AND ( 1 = 2 </if> <if test="memberName != null"> 
			OR M.memberName LIKE CONCAT('%',#{memberName},'%') </if> <if test="memberEmail 
			!= null"> OR M.memberEmail LIKE CONCAT('%',#{memberEmail},'%') </if> <if 
			test="memberPhone != null"> OR M.memberPhone LIKE CONCAT('%',#{memberPhone},'%') 
			</if> <if test="affiliateName != null"> OR A.affiliateName LIKE CONCAT('%',#{affiliateName},'%') 
			</if> <if test="memberName != null or memberEmail != null or memberPhone 
			!= null || affiliateName != null"> ) </if> -->
	</select>


	<!-- =============================================================================================================== -->
	<!-- AffiliateDetail -->

	<resultMap id="AffiliateDetailResultMap"
		type="com.returnp.admin.model.AffiliateDetail">
		<id column="affiliateDetailNo" jdbcType="INTEGER"
			property="affiliateDetailNo" />
		<result column="affiliateNo" jdbcType="INTEGER"
			property="affiliateNo" />
		<result column="businessNumber" jdbcType="VARCHAR"
			property="businessNumber" />
		<result column="businessItem" jdbcType="VARCHAR"
			property="businessItem" />
		<result column="buisnessName" jdbcType="VARCHAR"
			property="buisnessName" />
		<result column="businessType" jdbcType="VARCHAR"
			property="businessType" />
		<result column="overview" jdbcType="VARCHAR"
			property="overview" />
		<result column="afffiliateNotice" jdbcType="VARCHAR"
			property="afffiliateNotice" />
		<result column="holiday" jdbcType="VARCHAR" property="holiday" />
		<result column="openingHours" jdbcType="VARCHAR"
			property="openingHours" />
		<result column="commonWeb" jdbcType="VARCHAR"
			property="commonWeb" />
		<result column="etcLink" jdbcType="VARCHAR" property="etcLink" />
		<result column="affiliateNews" jdbcType="VARCHAR"
			property="affiliateNews" />
		<result column="etc" jdbcType="VARCHAR" property="etc" />
		<result column="affiliateMainImage1" jdbcType="VARCHAR"
			property="affiliateMainImage1" />
		<result column="affiliateMainImage2" jdbcType="VARCHAR"
			property="affiliateMainImage2" />
		<result column="affiliateMainImage3" jdbcType="VARCHAR"
			property="affiliateMainImage3" />
		<result column="affiliateMainImage4" jdbcType="VARCHAR"
			property="affiliateMainImage4" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="updateTime" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>

	<sql id="AffiliateDetail_Column_List">
		affiliateDetailNo, affiliateNo, businessNumber, businessItem, buisnessName,
		businessType,
		overview, afffiliateNotice, holiday, openingHours, commonWeb, etcLink,
		affiliateNews,
		etc, affiliateMainImage1, affiliateMainImage2, affiliateMainImage3,
		affiliateMainImage4,
		createTime, updateTime
	</sql>

	<sql id="AffiliateDetailWhereStatement">
		<if test="affiliateDetailNo != null"> AND affiliateDetailNo =
			#{affiliateDetailNo,jdbcType=INTEGER}</if>
		<if test="affiliateNo != null"> AND affiliateNo = #{affiliateNo,jdbcType=INTEGER}</if>
		<if test="businessNumber != null"> AND businessNumber = #{businessNumber,jdbcType=VARCHAR}
		</if>
	</sql>

	<select id="selectAffiliateDetails"
		parameterType="com.returnp.admin.model.AffiliateDetail"
		resultMap="AffiliateDetailResultMap">
		select
		<include refid="AffiliateDetail_Column_List" />
		from affiliate_detail
		where
		1 = 1
		<include refid="AffiliateDetailWhereStatement" />
	</select>


	<!-- =============================================================================================================== -->
	<!-- AffiliateCategory -->

	<resultMap id="AffiliateCategoryResultMap"
		type="com.returnp.admin.model.AffiliateCategory">
		<id column="affiliateCategoryNo" jdbcType="INTEGER"
			property="affiliateCategoryNo" />
		<result column="affiliateNo" jdbcType="INTEGER"
			property="affiliateNo" />
		<result column="category1No" jdbcType="INTEGER"
			property="category1No" />
		<result column="category2No" jdbcType="INTEGER"
			property="category2No" />
	</resultMap>

	<sql id="AffiliateCategory_Column_List">
		affiliateCategoryNo, affiliateNo, category1No, category2No
	</sql>

	<sql id="AffiliateCategoryWhereStatement">
		<if test="affiliateCategoryNo != null"> AND affiliateCategoryNo =
			#{affiliateCategoryNo,jdbcType=INTEGER}</if>
		<if test="affiliateNo != null"> AND affiliateNo = #{affiliateNo,jdbcType=INTEGER}</if>
		<if test="category1No != null"> AND category1No = #{category1No,jdbcType=INTEGER}</if>
		<if test="category2No != null"> AND category2No = #{category1No,jdbcType=INTEGER}</if>
	</sql>

	<select id="selectAffiliateCategories"
		parameterType="com.returnp.admin.model.AffiliateCategory"
		resultMap="AffiliateCategoryResultMap">
		select
		<include refid="AffiliateCategory_Column_List" />
		from affiliate_category
		where
		1 = 1
		<include refid="AffiliateCategoryWhereStatement" />
	</select>

	<!-- =============================================================================================================== -->
	<select id="selectPointCouponTransactions"
		parameterType="HashMap" resultType="HashMap">
		select
		A.pointCouponTransactionNo,
		A.memberNo,
		A.pointBackStatus,
		B.*
		from point_coupon_transaction as A
		inner join point_coupon as B on
		(A.pointCouponNo= B.pointCouponNo)

		where 1 = 1
		<if test="pointCouponTransactionNo != null"> AND pointCouponTransactionNo =
			#{pointCouponTransactionNo,jdbcType=INTEGER}</if>
		<if test="pointCouponNo != null"> AND B.pointCouponNo = #{pointCouponNo,jdbcType=INTEGER}
		</if>
		<if test="couponNumber != null"> AND couponNumber = #{couponNumber,jdbcType=VARCHAR}</if>
	</select>

	<!-- =============================================================================================================== -->
	<select id="selectPointCouponPointbackRecords"
		parameterType="HashMap" resultType="HashMap">
		select
		sql_calc_found_rows
		M.memberNo as registerMemberNo,
		M.memberName as registerMemberName,
		M.memberEmail as registerMemberEmail,
		M.memberPhone as registerMemberPhone,
		PCPR.pointCouponPointbackRecordNo,
		PCPR.memberNo,
		PCPR.pointCouponTransactionNo,
		PCPR.nodeNo,
		PCPR.nodeType,
		PCPR.accRate,
		PCPR.accPoint,
		PCPR.createTime,
		PC.payAmount,
		PC.couponType,
		M1.memberNo,
		M1.memberName,
		M1.memberEmail,
		M1.memberPhone
		from point_coupon_transaction as PCT
		inner join member as M on
		(PCT.memberNo = M.memberNo)
		inner join point_coupon as PC on
		(PCT.pointCouponNo= PC.pointCouponNo)
		inner join
		point_coupon_pointback_record as PCPR on
		(PCT.pointCouponTransactionNo= PCPR.pointCouponTransactionNo)
		inner
		join member as M1 on (PCPR.memberNo= M1.memberNo)

		where 1 = 1
		<if test="pointCouponTransactionNo != null"> AND PCPR.pointCouponTransactionNo =
			#{pointCouponTransactionNo,jdbcType=INTEGER}</if>
		<if test="pointCouponPointbackRecordNo != null"> AND PCPR.pointCouponPointbackRecordNo =
			#{pointCouponPointbackRecordNo,jdbcType=INTEGER}</if>
		<if test="memberNo != null"> AND memberNo = #{memberNo,jdbcType=INTEGER}</if>
	</select>

	<!-- =============================================================================================================== -->

	<!-- AffiliateTagMapper -->

	<resultMap id="AffiliateTagResultMap"
		type="com.returnp.admin.model.AffiliateTag">
		<id column="affiliateTagNo" jdbcType="INTEGER"
			property="affiliateTagNo" />
		<result column="affiliateNo" jdbcType="INTEGER"
			property="affiliateNo" />
		<result column="affiliateTag" jdbcType="VARCHAR"
			property="affiliateTag" />
		<result column="affiliateTagStatus" jdbcType="VARCHAR"
			property="affiliateTagStatus" />
	</resultMap>
	<sql id="Affiliate_Tag_Column_List">
		affiliateTagNo, affiliateNo, affiliateTag, affiliateTagStatus
	</sql>

	<sql id="AffiliateTagWhereStatement">
		<if test="affiliateTagNo != null"> AND affiliateTagNo = #{affiliateTagNo} </if>
		<if test="affiliateNo != null"> AND affiliateNo = #{affiliateNo} </if>
	</sql>

	<select id="findAffiliateTags"
		parameterType="com.returnp.admin.model.AffiliateTag"
		resultMap="AffiliateTagResultMap">
		select
		<include refid="Affiliate_Tag_Column_List" />
		from affiliate_tag
		where
		1 = 1
		<include refid="AffiliateTagWhereStatement" />
	</select>

</mapper>


 
